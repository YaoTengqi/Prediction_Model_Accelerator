// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sparse_mul_ap_uint_256_ap_int_8_ap_int_8_32u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        am_ROWS_dout,
        am_ROWS_num_data_valid,
        am_ROWS_fifo_cap,
        am_ROWS_empty_n,
        am_ROWS_read,
        fm_COLS_dout,
        fm_COLS_num_data_valid,
        fm_COLS_fifo_cap,
        fm_COLS_empty_n,
        fm_COLS_read,
        fm_stream2_dout,
        fm_stream2_num_data_valid,
        fm_stream2_fifo_cap,
        fm_stream2_empty_n,
        fm_stream2_read,
        idx_stream3_dout,
        idx_stream3_num_data_valid,
        idx_stream3_fifo_cap,
        idx_stream3_empty_n,
        idx_stream3_read,
        count_stream4_dout,
        count_stream4_num_data_valid,
        count_stream4_fifo_cap,
        count_stream4_empty_n,
        count_stream4_read,
        data_out1_din,
        data_out1_num_data_valid,
        data_out1_fifo_cap,
        data_out1_full_n,
        data_out1_write,
        fm_COLS_c_din,
        fm_COLS_c_num_data_valid,
        fm_COLS_c_fifo_cap,
        fm_COLS_c_full_n,
        fm_COLS_c_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] am_ROWS_dout;
input  [1:0] am_ROWS_num_data_valid;
input  [1:0] am_ROWS_fifo_cap;
input   am_ROWS_empty_n;
output   am_ROWS_read;
input  [31:0] fm_COLS_dout;
input  [1:0] fm_COLS_num_data_valid;
input  [1:0] fm_COLS_fifo_cap;
input   fm_COLS_empty_n;
output   fm_COLS_read;
input  [255:0] fm_stream2_dout;
input  [7:0] fm_stream2_num_data_valid;
input  [7:0] fm_stream2_fifo_cap;
input   fm_stream2_empty_n;
output   fm_stream2_read;
input  [7:0] idx_stream3_dout;
input  [7:0] idx_stream3_num_data_valid;
input  [7:0] idx_stream3_fifo_cap;
input   idx_stream3_empty_n;
output   idx_stream3_read;
input  [7:0] count_stream4_dout;
input  [6:0] count_stream4_num_data_valid;
input  [6:0] count_stream4_fifo_cap;
input   count_stream4_empty_n;
output   count_stream4_read;
output  [255:0] data_out1_din;
input  [6:0] data_out1_num_data_valid;
input  [6:0] data_out1_fifo_cap;
input   data_out1_full_n;
output   data_out1_write;
output  [31:0] fm_COLS_c_din;
input  [1:0] fm_COLS_c_num_data_valid;
input  [1:0] fm_COLS_c_fifo_cap;
input   fm_COLS_c_full_n;
output   fm_COLS_c_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg am_ROWS_read;
reg fm_COLS_read;
reg fm_stream2_read;
reg idx_stream3_read;
reg count_stream4_read;
reg data_out1_write;
reg fm_COLS_c_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    am_ROWS_blk_n;
reg    fm_COLS_blk_n;
reg    fm_stream2_blk_n;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln65_fu_667_p2;
reg    idx_stream3_blk_n;
reg    count_stream4_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln61_fu_652_p2;
reg    data_out1_blk_n;
reg    fm_COLS_c_blk_n;
reg   [31:0] am_ROWS_read_reg_1260;
reg   [26:0] trunc_ln_reg_1265;
wire   [26:0] block_2_fu_646_p2;
reg   [26:0] block_2_reg_1273;
wire    ap_CS_fsm_state2;
wire   [31:0] row_1_fu_657_p2;
reg   [31:0] row_1_reg_1281;
reg    ap_block_state3;
reg   [7:0] idx_count_reg_1286;
wire   [7:0] count_1_fu_672_p2;
reg    ap_block_state4;
wire   [7:0] add_ln71_fu_992_p2;
wire   [7:0] add_ln71_1_fu_998_p2;
wire   [7:0] add_ln71_2_fu_1004_p2;
wire   [7:0] add_ln71_3_fu_1010_p2;
wire   [7:0] add_ln71_4_fu_1016_p2;
wire   [7:0] add_ln71_5_fu_1022_p2;
wire   [7:0] add_ln71_6_fu_1028_p2;
wire   [7:0] add_ln71_7_fu_1034_p2;
wire   [7:0] add_ln71_8_fu_1040_p2;
wire   [7:0] add_ln71_9_fu_1046_p2;
wire   [7:0] add_ln71_10_fu_1052_p2;
wire   [7:0] add_ln71_11_fu_1058_p2;
wire   [7:0] add_ln71_12_fu_1064_p2;
wire   [7:0] add_ln71_13_fu_1070_p2;
wire   [7:0] add_ln71_14_fu_1076_p2;
wire   [7:0] add_ln71_15_fu_1082_p2;
wire   [7:0] add_ln71_16_fu_1088_p2;
wire   [7:0] add_ln71_17_fu_1094_p2;
wire   [7:0] add_ln71_18_fu_1100_p2;
wire   [7:0] add_ln71_19_fu_1106_p2;
wire   [7:0] add_ln71_20_fu_1112_p2;
wire   [7:0] add_ln71_21_fu_1118_p2;
wire   [7:0] add_ln71_22_fu_1124_p2;
wire   [7:0] add_ln71_23_fu_1130_p2;
wire   [7:0] add_ln71_24_fu_1136_p2;
wire   [7:0] add_ln71_25_fu_1142_p2;
wire   [7:0] add_ln71_26_fu_1148_p2;
wire   [7:0] add_ln71_27_fu_1154_p2;
wire   [7:0] add_ln71_28_fu_1160_p2;
wire   [7:0] add_ln71_29_fu_1166_p2;
wire   [7:0] add_ln71_30_fu_1172_p2;
wire   [7:0] add_ln71_31_fu_1178_p2;
reg   [31:0] row_reg_249;
wire   [0:0] icmp_ln60_fu_641_p2;
reg   [7:0] result_m_Val_V_62_reg_260;
reg   [7:0] result_m_Val_V_61_reg_271;
reg   [7:0] result_m_Val_V_60_reg_282;
reg   [7:0] result_m_Val_V_59_reg_293;
reg   [7:0] result_m_Val_V_58_reg_304;
reg   [7:0] result_m_Val_V_57_reg_315;
reg   [7:0] result_m_Val_V_56_reg_326;
reg   [7:0] result_m_Val_V_55_reg_337;
reg   [7:0] result_m_Val_V_54_reg_348;
reg   [7:0] result_m_Val_V_53_reg_359;
reg   [7:0] result_m_Val_V_52_reg_370;
reg   [7:0] result_m_Val_V_51_reg_381;
reg   [7:0] result_m_Val_V_50_reg_392;
reg   [7:0] result_m_Val_V_49_reg_403;
reg   [7:0] result_m_Val_V_48_reg_414;
reg   [7:0] result_m_Val_V_47_reg_425;
reg   [7:0] result_m_Val_V_46_reg_436;
reg   [7:0] result_m_Val_V_45_reg_447;
reg   [7:0] result_m_Val_V_44_reg_458;
reg   [7:0] result_m_Val_V_43_reg_469;
reg   [7:0] result_m_Val_V_42_reg_480;
reg   [7:0] result_m_Val_V_41_reg_491;
reg   [7:0] result_m_Val_V_40_reg_502;
reg   [7:0] result_m_Val_V_39_reg_513;
reg   [7:0] result_m_Val_V_38_reg_524;
reg   [7:0] result_m_Val_V_37_reg_535;
reg   [7:0] result_m_Val_V_36_reg_546;
reg   [7:0] result_m_Val_V_35_reg_557;
reg   [7:0] result_m_Val_V_34_reg_568;
reg   [7:0] result_m_Val_V_33_reg_579;
reg   [7:0] result_m_Val_V_32_reg_590;
reg   [7:0] result_m_Val_V_reg_601;
reg   [7:0] count_reg_612;
reg   [26:0] block_fu_200;
reg    ap_block_state1;
wire   [7:0] l_val_V_32_fu_678_p1;
wire   [7:0] l_val_V_33_fu_682_p4;
wire   [7:0] l_val_V_34_fu_692_p4;
wire   [7:0] l_val_V_35_fu_702_p4;
wire   [7:0] l_val_V_36_fu_712_p4;
wire   [7:0] l_val_V_37_fu_722_p4;
wire   [7:0] l_val_V_38_fu_732_p4;
wire   [7:0] l_val_V_39_fu_742_p4;
wire   [7:0] l_val_V_40_fu_752_p4;
wire   [7:0] l_val_V_41_fu_762_p4;
wire   [7:0] l_val_V_42_fu_772_p4;
wire   [7:0] l_val_V_43_fu_782_p4;
wire   [7:0] l_val_V_44_fu_792_p4;
wire   [7:0] l_val_V_45_fu_802_p4;
wire   [7:0] l_val_V_46_fu_812_p4;
wire   [7:0] l_val_V_47_fu_822_p4;
wire   [7:0] l_val_V_48_fu_832_p4;
wire   [7:0] l_val_V_49_fu_842_p4;
wire   [7:0] l_val_V_50_fu_852_p4;
wire   [7:0] l_val_V_51_fu_862_p4;
wire   [7:0] l_val_V_52_fu_872_p4;
wire   [7:0] l_val_V_53_fu_882_p4;
wire   [7:0] l_val_V_54_fu_892_p4;
wire   [7:0] l_val_V_55_fu_902_p4;
wire   [7:0] l_val_V_56_fu_912_p4;
wire   [7:0] l_val_V_57_fu_922_p4;
wire   [7:0] l_val_V_58_fu_932_p4;
wire   [7:0] l_val_V_59_fu_942_p4;
wire   [7:0] l_val_V_60_fu_952_p4;
wire   [7:0] l_val_V_61_fu_962_p4;
wire   [7:0] l_val_V_62_fu_972_p4;
wire   [7:0] l_val_V_63_fu_982_p4;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln60_fu_641_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (fm_COLS_c_full_n == 1'b0) | (fm_COLS_empty_n == 1'b0) | (1'b0 == am_ROWS_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        block_fu_200 <= 27'd0;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        block_fu_200 <= block_2_reg_1273;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        count_reg_612 <= count_1_fu_672_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        count_reg_612 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_32_reg_590 <= add_ln71_1_fu_998_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_32_reg_590 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_33_reg_579 <= add_ln71_2_fu_1004_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_33_reg_579 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_34_reg_568 <= add_ln71_3_fu_1010_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_34_reg_568 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_35_reg_557 <= add_ln71_4_fu_1016_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_35_reg_557 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_36_reg_546 <= add_ln71_5_fu_1022_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_36_reg_546 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_37_reg_535 <= add_ln71_6_fu_1028_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_37_reg_535 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_38_reg_524 <= add_ln71_7_fu_1034_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_38_reg_524 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_39_reg_513 <= add_ln71_8_fu_1040_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_39_reg_513 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_40_reg_502 <= add_ln71_9_fu_1046_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_40_reg_502 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_41_reg_491 <= add_ln71_10_fu_1052_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_41_reg_491 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_42_reg_480 <= add_ln71_11_fu_1058_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_42_reg_480 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_43_reg_469 <= add_ln71_12_fu_1064_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_43_reg_469 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_44_reg_458 <= add_ln71_13_fu_1070_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_44_reg_458 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_45_reg_447 <= add_ln71_14_fu_1076_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_45_reg_447 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_46_reg_436 <= add_ln71_15_fu_1082_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_46_reg_436 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_47_reg_425 <= add_ln71_16_fu_1088_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_47_reg_425 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_48_reg_414 <= add_ln71_17_fu_1094_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_48_reg_414 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_49_reg_403 <= add_ln71_18_fu_1100_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_49_reg_403 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_50_reg_392 <= add_ln71_19_fu_1106_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_50_reg_392 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_51_reg_381 <= add_ln71_20_fu_1112_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_51_reg_381 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_52_reg_370 <= add_ln71_21_fu_1118_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_52_reg_370 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_53_reg_359 <= add_ln71_22_fu_1124_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_53_reg_359 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_54_reg_348 <= add_ln71_23_fu_1130_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_54_reg_348 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_55_reg_337 <= add_ln71_24_fu_1136_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_55_reg_337 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_56_reg_326 <= add_ln71_25_fu_1142_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_56_reg_326 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_57_reg_315 <= add_ln71_26_fu_1148_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_57_reg_315 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_58_reg_304 <= add_ln71_27_fu_1154_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_58_reg_304 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_59_reg_293 <= add_ln71_28_fu_1160_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_59_reg_293 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_60_reg_282 <= add_ln71_29_fu_1166_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_60_reg_282 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_61_reg_271 <= add_ln71_30_fu_1172_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_61_reg_271 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_62_reg_260 <= add_ln71_31_fu_1178_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_62_reg_260 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        result_m_Val_V_reg_601 <= add_ln71_fu_992_p2;
    end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        result_m_Val_V_reg_601 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        row_reg_249 <= row_1_reg_1281;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln60_fu_641_p2 == 1'd0))) begin
        row_reg_249 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        am_ROWS_read_reg_1260 <= am_ROWS_dout;
        trunc_ln_reg_1265 <= {{fm_COLS_dout[31:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        block_2_reg_1273 <= block_2_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        idx_count_reg_1286 <= count_stream4_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        row_1_reg_1281 <= row_1_fu_657_p2;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        am_ROWS_blk_n = am_ROWS_empty_n;
    end else begin
        am_ROWS_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (fm_COLS_c_full_n == 1'b0) | (fm_COLS_empty_n == 1'b0) | (1'b0 == am_ROWS_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        am_ROWS_read = 1'b1;
    end else begin
        am_ROWS_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (fm_COLS_c_full_n == 1'b0) | (fm_COLS_empty_n == 1'b0) | (1'b0 == am_ROWS_empty_n) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0))) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0)))) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln60_fu_641_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln60_fu_641_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        count_stream4_blk_n = count_stream4_empty_n;
    end else begin
        count_stream4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        count_stream4_read = 1'b1;
    end else begin
        count_stream4_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        data_out1_blk_n = data_out1_full_n;
    end else begin
        data_out1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        data_out1_write = 1'b1;
    end else begin
        data_out1_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        fm_COLS_blk_n = fm_COLS_empty_n;
    end else begin
        fm_COLS_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        fm_COLS_c_blk_n = fm_COLS_c_full_n;
    end else begin
        fm_COLS_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (fm_COLS_c_full_n == 1'b0) | (fm_COLS_empty_n == 1'b0) | (1'b0 == am_ROWS_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        fm_COLS_c_write = 1'b1;
    end else begin
        fm_COLS_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (fm_COLS_c_full_n == 1'b0) | (fm_COLS_empty_n == 1'b0) | (1'b0 == am_ROWS_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        fm_COLS_read = 1'b1;
    end else begin
        fm_COLS_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        fm_stream2_blk_n = fm_stream2_empty_n;
    end else begin
        fm_stream2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        fm_stream2_read = 1'b1;
    end else begin
        fm_stream2_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        idx_stream3_blk_n = idx_stream3_empty_n;
    end else begin
        idx_stream3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        idx_stream3_read = 1'b1;
    end else begin
        idx_stream3_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (fm_COLS_c_full_n == 1'b0) | (fm_COLS_empty_n == 1'b0) | (1'b0 == am_ROWS_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln60_fu_641_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0)) & (icmp_ln61_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~(((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0))) & (icmp_ln65_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln71_10_fu_1052_p2 = (l_val_V_42_fu_772_p4 + result_m_Val_V_41_reg_491);

assign add_ln71_11_fu_1058_p2 = (l_val_V_43_fu_782_p4 + result_m_Val_V_42_reg_480);

assign add_ln71_12_fu_1064_p2 = (l_val_V_44_fu_792_p4 + result_m_Val_V_43_reg_469);

assign add_ln71_13_fu_1070_p2 = (l_val_V_45_fu_802_p4 + result_m_Val_V_44_reg_458);

assign add_ln71_14_fu_1076_p2 = (l_val_V_46_fu_812_p4 + result_m_Val_V_45_reg_447);

assign add_ln71_15_fu_1082_p2 = (l_val_V_47_fu_822_p4 + result_m_Val_V_46_reg_436);

assign add_ln71_16_fu_1088_p2 = (l_val_V_48_fu_832_p4 + result_m_Val_V_47_reg_425);

assign add_ln71_17_fu_1094_p2 = (l_val_V_49_fu_842_p4 + result_m_Val_V_48_reg_414);

assign add_ln71_18_fu_1100_p2 = (l_val_V_50_fu_852_p4 + result_m_Val_V_49_reg_403);

assign add_ln71_19_fu_1106_p2 = (l_val_V_51_fu_862_p4 + result_m_Val_V_50_reg_392);

assign add_ln71_1_fu_998_p2 = (l_val_V_33_fu_682_p4 + result_m_Val_V_32_reg_590);

assign add_ln71_20_fu_1112_p2 = (l_val_V_52_fu_872_p4 + result_m_Val_V_51_reg_381);

assign add_ln71_21_fu_1118_p2 = (l_val_V_53_fu_882_p4 + result_m_Val_V_52_reg_370);

assign add_ln71_22_fu_1124_p2 = (l_val_V_54_fu_892_p4 + result_m_Val_V_53_reg_359);

assign add_ln71_23_fu_1130_p2 = (l_val_V_55_fu_902_p4 + result_m_Val_V_54_reg_348);

assign add_ln71_24_fu_1136_p2 = (l_val_V_56_fu_912_p4 + result_m_Val_V_55_reg_337);

assign add_ln71_25_fu_1142_p2 = (l_val_V_57_fu_922_p4 + result_m_Val_V_56_reg_326);

assign add_ln71_26_fu_1148_p2 = (l_val_V_58_fu_932_p4 + result_m_Val_V_57_reg_315);

assign add_ln71_27_fu_1154_p2 = (l_val_V_59_fu_942_p4 + result_m_Val_V_58_reg_304);

assign add_ln71_28_fu_1160_p2 = (l_val_V_60_fu_952_p4 + result_m_Val_V_59_reg_293);

assign add_ln71_29_fu_1166_p2 = (l_val_V_61_fu_962_p4 + result_m_Val_V_60_reg_282);

assign add_ln71_2_fu_1004_p2 = (l_val_V_34_fu_692_p4 + result_m_Val_V_33_reg_579);

assign add_ln71_30_fu_1172_p2 = (l_val_V_62_fu_972_p4 + result_m_Val_V_61_reg_271);

assign add_ln71_31_fu_1178_p2 = (l_val_V_63_fu_982_p4 + result_m_Val_V_62_reg_260);

assign add_ln71_3_fu_1010_p2 = (l_val_V_35_fu_702_p4 + result_m_Val_V_34_reg_568);

assign add_ln71_4_fu_1016_p2 = (l_val_V_36_fu_712_p4 + result_m_Val_V_35_reg_557);

assign add_ln71_5_fu_1022_p2 = (l_val_V_37_fu_722_p4 + result_m_Val_V_36_reg_546);

assign add_ln71_6_fu_1028_p2 = (l_val_V_38_fu_732_p4 + result_m_Val_V_37_reg_535);

assign add_ln71_7_fu_1034_p2 = (l_val_V_39_fu_742_p4 + result_m_Val_V_38_reg_524);

assign add_ln71_8_fu_1040_p2 = (l_val_V_40_fu_752_p4 + result_m_Val_V_39_reg_513);

assign add_ln71_9_fu_1046_p2 = (l_val_V_41_fu_762_p4 + result_m_Val_V_40_reg_502);

assign add_ln71_fu_992_p2 = (l_val_V_32_fu_678_p1 + result_m_Val_V_reg_601);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (fm_COLS_c_full_n == 1'b0) | (fm_COLS_empty_n == 1'b0) | (1'b0 == am_ROWS_empty_n) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln61_fu_652_p2 == 1'd0) & (count_stream4_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = (((icmp_ln65_fu_667_p2 == 1'd1) & (data_out1_full_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (fm_stream2_empty_n == 1'b0)) | ((icmp_ln65_fu_667_p2 == 1'd0) & (idx_stream3_empty_n == 1'b0)));
end

assign block_2_fu_646_p2 = (block_fu_200 + 27'd1);

assign count_1_fu_672_p2 = (count_reg_612 + 8'd1);

assign data_out1_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{result_m_Val_V_62_reg_260}, {result_m_Val_V_61_reg_271}}, {result_m_Val_V_60_reg_282}}, {result_m_Val_V_59_reg_293}}, {result_m_Val_V_58_reg_304}}, {result_m_Val_V_57_reg_315}}, {result_m_Val_V_56_reg_326}}, {result_m_Val_V_55_reg_337}}, {result_m_Val_V_54_reg_348}}, {result_m_Val_V_53_reg_359}}, {result_m_Val_V_52_reg_370}}, {result_m_Val_V_51_reg_381}}, {result_m_Val_V_50_reg_392}}, {result_m_Val_V_49_reg_403}}, {result_m_Val_V_48_reg_414}}, {result_m_Val_V_47_reg_425}}, {result_m_Val_V_46_reg_436}}, {result_m_Val_V_45_reg_447}}, {result_m_Val_V_44_reg_458}}, {result_m_Val_V_43_reg_469}}, {result_m_Val_V_42_reg_480}}, {result_m_Val_V_41_reg_491}}, {result_m_Val_V_40_reg_502}}, {result_m_Val_V_39_reg_513}}, {result_m_Val_V_38_reg_524}}, {result_m_Val_V_37_reg_535}}, {result_m_Val_V_36_reg_546}}, {result_m_Val_V_35_reg_557}}, {result_m_Val_V_34_reg_568}}, {result_m_Val_V_33_reg_579}}, {result_m_Val_V_32_reg_590}}, {result_m_Val_V_reg_601}};

assign fm_COLS_c_din = fm_COLS_dout;

assign icmp_ln60_fu_641_p2 = ((block_fu_200 == trunc_ln_reg_1265) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_652_p2 = ((row_reg_249 == am_ROWS_read_reg_1260) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_667_p2 = ((count_reg_612 == idx_count_reg_1286) ? 1'b1 : 1'b0);

assign l_val_V_32_fu_678_p1 = fm_stream2_dout[7:0];

assign l_val_V_33_fu_682_p4 = {{fm_stream2_dout[15:8]}};

assign l_val_V_34_fu_692_p4 = {{fm_stream2_dout[23:16]}};

assign l_val_V_35_fu_702_p4 = {{fm_stream2_dout[31:24]}};

assign l_val_V_36_fu_712_p4 = {{fm_stream2_dout[39:32]}};

assign l_val_V_37_fu_722_p4 = {{fm_stream2_dout[47:40]}};

assign l_val_V_38_fu_732_p4 = {{fm_stream2_dout[55:48]}};

assign l_val_V_39_fu_742_p4 = {{fm_stream2_dout[63:56]}};

assign l_val_V_40_fu_752_p4 = {{fm_stream2_dout[71:64]}};

assign l_val_V_41_fu_762_p4 = {{fm_stream2_dout[79:72]}};

assign l_val_V_42_fu_772_p4 = {{fm_stream2_dout[87:80]}};

assign l_val_V_43_fu_782_p4 = {{fm_stream2_dout[95:88]}};

assign l_val_V_44_fu_792_p4 = {{fm_stream2_dout[103:96]}};

assign l_val_V_45_fu_802_p4 = {{fm_stream2_dout[111:104]}};

assign l_val_V_46_fu_812_p4 = {{fm_stream2_dout[119:112]}};

assign l_val_V_47_fu_822_p4 = {{fm_stream2_dout[127:120]}};

assign l_val_V_48_fu_832_p4 = {{fm_stream2_dout[135:128]}};

assign l_val_V_49_fu_842_p4 = {{fm_stream2_dout[143:136]}};

assign l_val_V_50_fu_852_p4 = {{fm_stream2_dout[151:144]}};

assign l_val_V_51_fu_862_p4 = {{fm_stream2_dout[159:152]}};

assign l_val_V_52_fu_872_p4 = {{fm_stream2_dout[167:160]}};

assign l_val_V_53_fu_882_p4 = {{fm_stream2_dout[175:168]}};

assign l_val_V_54_fu_892_p4 = {{fm_stream2_dout[183:176]}};

assign l_val_V_55_fu_902_p4 = {{fm_stream2_dout[191:184]}};

assign l_val_V_56_fu_912_p4 = {{fm_stream2_dout[199:192]}};

assign l_val_V_57_fu_922_p4 = {{fm_stream2_dout[207:200]}};

assign l_val_V_58_fu_932_p4 = {{fm_stream2_dout[215:208]}};

assign l_val_V_59_fu_942_p4 = {{fm_stream2_dout[223:216]}};

assign l_val_V_60_fu_952_p4 = {{fm_stream2_dout[231:224]}};

assign l_val_V_61_fu_962_p4 = {{fm_stream2_dout[239:232]}};

assign l_val_V_62_fu_972_p4 = {{fm_stream2_dout[247:240]}};

assign l_val_V_63_fu_982_p4 = {{fm_stream2_dout[255:248]}};

assign row_1_fu_657_p2 = (row_reg_249 + 32'd1);

endmodule //sparse_mul_ap_uint_256_ap_int_8_ap_int_8_32u_s
