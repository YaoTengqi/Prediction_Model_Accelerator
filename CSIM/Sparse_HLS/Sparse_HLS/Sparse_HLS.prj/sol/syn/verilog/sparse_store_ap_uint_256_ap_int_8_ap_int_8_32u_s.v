// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sparse_store_ap_uint_256_ap_int_8_ap_int_8_32u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_out1_dout,
        data_out1_num_data_valid,
        data_out1_fifo_cap,
        data_out1_empty_n,
        data_out1_read,
        m_axi_sparse_data_AWVALID,
        m_axi_sparse_data_AWREADY,
        m_axi_sparse_data_AWADDR,
        m_axi_sparse_data_AWID,
        m_axi_sparse_data_AWLEN,
        m_axi_sparse_data_AWSIZE,
        m_axi_sparse_data_AWBURST,
        m_axi_sparse_data_AWLOCK,
        m_axi_sparse_data_AWCACHE,
        m_axi_sparse_data_AWPROT,
        m_axi_sparse_data_AWQOS,
        m_axi_sparse_data_AWREGION,
        m_axi_sparse_data_AWUSER,
        m_axi_sparse_data_WVALID,
        m_axi_sparse_data_WREADY,
        m_axi_sparse_data_WDATA,
        m_axi_sparse_data_WSTRB,
        m_axi_sparse_data_WLAST,
        m_axi_sparse_data_WID,
        m_axi_sparse_data_WUSER,
        m_axi_sparse_data_ARVALID,
        m_axi_sparse_data_ARREADY,
        m_axi_sparse_data_ARADDR,
        m_axi_sparse_data_ARID,
        m_axi_sparse_data_ARLEN,
        m_axi_sparse_data_ARSIZE,
        m_axi_sparse_data_ARBURST,
        m_axi_sparse_data_ARLOCK,
        m_axi_sparse_data_ARCACHE,
        m_axi_sparse_data_ARPROT,
        m_axi_sparse_data_ARQOS,
        m_axi_sparse_data_ARREGION,
        m_axi_sparse_data_ARUSER,
        m_axi_sparse_data_RVALID,
        m_axi_sparse_data_RREADY,
        m_axi_sparse_data_RDATA,
        m_axi_sparse_data_RLAST,
        m_axi_sparse_data_RID,
        m_axi_sparse_data_RFIFONUM,
        m_axi_sparse_data_RUSER,
        m_axi_sparse_data_RRESP,
        m_axi_sparse_data_BVALID,
        m_axi_sparse_data_BREADY,
        m_axi_sparse_data_BRESP,
        m_axi_sparse_data_BID,
        m_axi_sparse_data_BUSER,
        outputs_dout,
        outputs_num_data_valid,
        outputs_fifo_cap,
        outputs_empty_n,
        outputs_read,
        output_data_addr3_dout,
        output_data_addr3_num_data_valid,
        output_data_addr3_fifo_cap,
        output_data_addr3_empty_n,
        output_data_addr3_read,
        ROWS_dout,
        ROWS_num_data_valid,
        ROWS_fifo_cap,
        ROWS_empty_n,
        ROWS_read,
        COLS_dout,
        COLS_num_data_valid,
        COLS_fifo_cap,
        COLS_empty_n,
        COLS_read,
        sparse_flag,
        sparse_flag_ap_vld
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [255:0] data_out1_dout;
input  [6:0] data_out1_num_data_valid;
input  [6:0] data_out1_fifo_cap;
input   data_out1_empty_n;
output   data_out1_read;
output   m_axi_sparse_data_AWVALID;
input   m_axi_sparse_data_AWREADY;
output  [63:0] m_axi_sparse_data_AWADDR;
output  [0:0] m_axi_sparse_data_AWID;
output  [31:0] m_axi_sparse_data_AWLEN;
output  [2:0] m_axi_sparse_data_AWSIZE;
output  [1:0] m_axi_sparse_data_AWBURST;
output  [1:0] m_axi_sparse_data_AWLOCK;
output  [3:0] m_axi_sparse_data_AWCACHE;
output  [2:0] m_axi_sparse_data_AWPROT;
output  [3:0] m_axi_sparse_data_AWQOS;
output  [3:0] m_axi_sparse_data_AWREGION;
output  [0:0] m_axi_sparse_data_AWUSER;
output   m_axi_sparse_data_WVALID;
input   m_axi_sparse_data_WREADY;
output  [255:0] m_axi_sparse_data_WDATA;
output  [31:0] m_axi_sparse_data_WSTRB;
output   m_axi_sparse_data_WLAST;
output  [0:0] m_axi_sparse_data_WID;
output  [0:0] m_axi_sparse_data_WUSER;
output   m_axi_sparse_data_ARVALID;
input   m_axi_sparse_data_ARREADY;
output  [63:0] m_axi_sparse_data_ARADDR;
output  [0:0] m_axi_sparse_data_ARID;
output  [31:0] m_axi_sparse_data_ARLEN;
output  [2:0] m_axi_sparse_data_ARSIZE;
output  [1:0] m_axi_sparse_data_ARBURST;
output  [1:0] m_axi_sparse_data_ARLOCK;
output  [3:0] m_axi_sparse_data_ARCACHE;
output  [2:0] m_axi_sparse_data_ARPROT;
output  [3:0] m_axi_sparse_data_ARQOS;
output  [3:0] m_axi_sparse_data_ARREGION;
output  [0:0] m_axi_sparse_data_ARUSER;
input   m_axi_sparse_data_RVALID;
output   m_axi_sparse_data_RREADY;
input  [255:0] m_axi_sparse_data_RDATA;
input   m_axi_sparse_data_RLAST;
input  [0:0] m_axi_sparse_data_RID;
input  [8:0] m_axi_sparse_data_RFIFONUM;
input  [0:0] m_axi_sparse_data_RUSER;
input  [1:0] m_axi_sparse_data_RRESP;
input   m_axi_sparse_data_BVALID;
output   m_axi_sparse_data_BREADY;
input  [1:0] m_axi_sparse_data_BRESP;
input  [0:0] m_axi_sparse_data_BID;
input  [0:0] m_axi_sparse_data_BUSER;
input  [63:0] outputs_dout;
input  [2:0] outputs_num_data_valid;
input  [2:0] outputs_fifo_cap;
input   outputs_empty_n;
output   outputs_read;
input  [31:0] output_data_addr3_dout;
input  [2:0] output_data_addr3_num_data_valid;
input  [2:0] output_data_addr3_fifo_cap;
input   output_data_addr3_empty_n;
output   output_data_addr3_read;
input  [31:0] ROWS_dout;
input  [1:0] ROWS_num_data_valid;
input  [1:0] ROWS_fifo_cap;
input   ROWS_empty_n;
output   ROWS_read;
input  [31:0] COLS_dout;
input  [1:0] COLS_num_data_valid;
input  [1:0] COLS_fifo_cap;
input   COLS_empty_n;
output   COLS_read;
output  [0:0] sparse_flag;
output   sparse_flag_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_out1_read;
reg m_axi_sparse_data_AWVALID;
reg[63:0] m_axi_sparse_data_AWADDR;
reg[0:0] m_axi_sparse_data_AWID;
reg[31:0] m_axi_sparse_data_AWLEN;
reg[2:0] m_axi_sparse_data_AWSIZE;
reg[1:0] m_axi_sparse_data_AWBURST;
reg[1:0] m_axi_sparse_data_AWLOCK;
reg[3:0] m_axi_sparse_data_AWCACHE;
reg[2:0] m_axi_sparse_data_AWPROT;
reg[3:0] m_axi_sparse_data_AWQOS;
reg[3:0] m_axi_sparse_data_AWREGION;
reg[0:0] m_axi_sparse_data_AWUSER;
reg m_axi_sparse_data_WVALID;
reg m_axi_sparse_data_BREADY;
reg outputs_read;
reg output_data_addr3_read;
reg ROWS_read;
reg COLS_read;
reg[0:0] sparse_flag;
reg sparse_flag_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    sparse_data_blk_n_AW;
wire    ap_CS_fsm_state2;
reg    sparse_data_blk_n_B;
wire    ap_CS_fsm_state40;
reg   [0:0] icmp_ln88_reg_215;
reg    outputs_blk_n;
reg    output_data_addr3_blk_n;
reg    ROWS_blk_n;
reg    COLS_blk_n;
wire   [26:0] loop_num_fu_140_p4;
reg   [26:0] loop_num_reg_203;
wire   [31:0] zext_ln85_fu_150_p1;
reg   [31:0] zext_ln85_reg_210;
wire   [0:0] icmp_ln88_fu_154_p2;
reg   [58:0] trunc_ln1_reg_219;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_start;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_done;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_idle;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_ready;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_data_out1_read;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWVALID;
wire   [63:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWADDR;
wire   [0:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWID;
wire   [31:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWLEN;
wire   [2:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWSIZE;
wire   [1:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWBURST;
wire   [1:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWLOCK;
wire   [3:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWCACHE;
wire   [2:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWPROT;
wire   [3:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWQOS;
wire   [3:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWREGION;
wire   [0:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWUSER;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WVALID;
wire   [255:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WDATA;
wire   [31:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WSTRB;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WLAST;
wire   [0:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WID;
wire   [0:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WUSER;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARVALID;
wire   [63:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARADDR;
wire   [0:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARID;
wire   [31:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARLEN;
wire   [2:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARSIZE;
wire   [1:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARBURST;
wire   [1:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARLOCK;
wire   [3:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARCACHE;
wire   [2:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARPROT;
wire   [3:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARQOS;
wire   [3:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARREGION;
wire   [0:0] grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARUSER;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_RREADY;
wire    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_BREADY;
reg   [26:0] ap_phi_mux_count_0_lcssa_phi_fu_117_p4;
reg   [26:0] count_0_lcssa_reg_113;
reg    ap_block_state40;
reg    ap_block_state1;
reg    grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire  signed [63:0] sext_ln88_fu_188_p1;
reg   [0:0] sparse_flag_preg;
wire   [0:0] icmp_ln95_fu_198_p2;
wire   [31:0] mul_ln85_fu_134_p2;
wire   [36:0] shl_ln_fu_160_p3;
wire   [63:0] zext_ln88_fu_168_p1;
wire   [63:0] add_ln88_fu_172_p2;
reg   [39:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
reg    ap_ST_fsm_state40_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 40'd1;
#0 grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_start_reg = 1'b0;
#0 sparse_flag_preg = 1'd0;
end

sparse_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1 grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_start),
    .ap_done(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_done),
    .ap_idle(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_idle),
    .ap_ready(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_ready),
    .data_out1_dout(data_out1_dout),
    .data_out1_num_data_valid(7'd0),
    .data_out1_fifo_cap(7'd0),
    .data_out1_empty_n(data_out1_empty_n),
    .data_out1_read(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_data_out1_read),
    .m_axi_sparse_data_AWVALID(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWVALID),
    .m_axi_sparse_data_AWREADY(m_axi_sparse_data_AWREADY),
    .m_axi_sparse_data_AWADDR(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWADDR),
    .m_axi_sparse_data_AWID(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWID),
    .m_axi_sparse_data_AWLEN(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWLEN),
    .m_axi_sparse_data_AWSIZE(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWSIZE),
    .m_axi_sparse_data_AWBURST(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWBURST),
    .m_axi_sparse_data_AWLOCK(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWLOCK),
    .m_axi_sparse_data_AWCACHE(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWCACHE),
    .m_axi_sparse_data_AWPROT(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWPROT),
    .m_axi_sparse_data_AWQOS(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWQOS),
    .m_axi_sparse_data_AWREGION(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWREGION),
    .m_axi_sparse_data_AWUSER(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWUSER),
    .m_axi_sparse_data_WVALID(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WVALID),
    .m_axi_sparse_data_WREADY(m_axi_sparse_data_WREADY),
    .m_axi_sparse_data_WDATA(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WDATA),
    .m_axi_sparse_data_WSTRB(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WSTRB),
    .m_axi_sparse_data_WLAST(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WLAST),
    .m_axi_sparse_data_WID(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WID),
    .m_axi_sparse_data_WUSER(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WUSER),
    .m_axi_sparse_data_ARVALID(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARVALID),
    .m_axi_sparse_data_ARREADY(1'b0),
    .m_axi_sparse_data_ARADDR(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARADDR),
    .m_axi_sparse_data_ARID(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARID),
    .m_axi_sparse_data_ARLEN(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARLEN),
    .m_axi_sparse_data_ARSIZE(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARSIZE),
    .m_axi_sparse_data_ARBURST(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARBURST),
    .m_axi_sparse_data_ARLOCK(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARLOCK),
    .m_axi_sparse_data_ARCACHE(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARCACHE),
    .m_axi_sparse_data_ARPROT(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARPROT),
    .m_axi_sparse_data_ARQOS(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARQOS),
    .m_axi_sparse_data_ARREGION(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARREGION),
    .m_axi_sparse_data_ARUSER(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_ARUSER),
    .m_axi_sparse_data_RVALID(1'b0),
    .m_axi_sparse_data_RREADY(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_RREADY),
    .m_axi_sparse_data_RDATA(256'd0),
    .m_axi_sparse_data_RLAST(1'b0),
    .m_axi_sparse_data_RID(1'd0),
    .m_axi_sparse_data_RFIFONUM(9'd0),
    .m_axi_sparse_data_RUSER(1'd0),
    .m_axi_sparse_data_RRESP(2'd0),
    .m_axi_sparse_data_BVALID(m_axi_sparse_data_BVALID),
    .m_axi_sparse_data_BREADY(grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_BREADY),
    .m_axi_sparse_data_BRESP(m_axi_sparse_data_BRESP),
    .m_axi_sparse_data_BID(m_axi_sparse_data_BID),
    .m_axi_sparse_data_BUSER(m_axi_sparse_data_BUSER),
    .sext_ln88(trunc_ln1_reg_219),
    .loop_num(loop_num_reg_203)
);

sparse_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U31(
    .din0(COLS_dout),
    .din1(ROWS_dout),
    .dout(mul_ln85_fu_134_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state40))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_start_reg <= 1'b1;
        end else if ((grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_ready == 1'b1)) begin
            grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        sparse_flag_preg <= 1'd0;
    end else begin
        if ((~((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0)) & (icmp_ln95_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
            sparse_flag_preg <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == COLS_empty_n) | (1'b0 == ROWS_empty_n) | (output_data_addr3_empty_n == 1'b0) | (outputs_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln88_fu_154_p2 == 1'd1))) begin
        count_0_lcssa_reg_113 <= 27'd0;
    end else if ((~((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state40) & (icmp_ln88_reg_215 == 1'd0))) begin
        count_0_lcssa_reg_113 <= loop_num_reg_203;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln88_reg_215 <= icmp_ln88_fu_154_p2;
        loop_num_reg_203 <= {{mul_ln85_fu_134_p2[31:5]}};
        zext_ln85_reg_210[26 : 0] <= zext_ln85_fu_150_p1[26 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln88_fu_154_p2 == 1'd0))) begin
        trunc_ln1_reg_219 <= {{add_ln88_fu_172_p2[63:5]}};
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        COLS_blk_n = COLS_empty_n;
    end else begin
        COLS_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == COLS_empty_n) | (1'b0 == ROWS_empty_n) | (output_data_addr3_empty_n == 1'b0) | (outputs_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        COLS_read = 1'b1;
    end else begin
        COLS_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ROWS_blk_n = ROWS_empty_n;
    end else begin
        ROWS_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == COLS_empty_n) | (1'b0 == ROWS_empty_n) | (output_data_addr3_empty_n == 1'b0) | (outputs_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ROWS_read = 1'b1;
    end else begin
        ROWS_read = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == COLS_empty_n) | (1'b0 == ROWS_empty_n) | (output_data_addr3_empty_n == 1'b0) | (outputs_empty_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((m_axi_sparse_data_AWREADY == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0))) begin
        ap_ST_fsm_state40_blk = 1'b1;
    end else begin
        ap_ST_fsm_state40_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln88_reg_215 == 1'd0))) begin
        ap_phi_mux_count_0_lcssa_phi_fu_117_p4 = loop_num_reg_203;
    end else begin
        ap_phi_mux_count_0_lcssa_phi_fu_117_p4 = count_0_lcssa_reg_113;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        data_out1_read = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_data_out1_read;
    end else begin
        data_out1_read = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_sparse_data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_sparse_data_AWADDR = sext_ln88_fu_188_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWADDR = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWADDR;
    end else begin
        m_axi_sparse_data_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWBURST = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWBURST;
    end else begin
        m_axi_sparse_data_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWCACHE = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWCACHE;
    end else begin
        m_axi_sparse_data_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWID = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWID;
    end else begin
        m_axi_sparse_data_AWID = 1'd0;
    end
end

always @ (*) begin
    if (((m_axi_sparse_data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_sparse_data_AWLEN = zext_ln85_reg_210;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWLEN = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWLEN;
    end else begin
        m_axi_sparse_data_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWLOCK = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWLOCK;
    end else begin
        m_axi_sparse_data_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWPROT = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWPROT;
    end else begin
        m_axi_sparse_data_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWQOS = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWQOS;
    end else begin
        m_axi_sparse_data_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWREGION = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWREGION;
    end else begin
        m_axi_sparse_data_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWSIZE = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWSIZE;
    end else begin
        m_axi_sparse_data_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWUSER = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWUSER;
    end else begin
        m_axi_sparse_data_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if (((m_axi_sparse_data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_sparse_data_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_AWVALID = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_AWVALID;
    end else begin
        m_axi_sparse_data_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state40) & (icmp_ln88_reg_215 == 1'd0))) begin
        m_axi_sparse_data_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_BREADY = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_BREADY;
    end else begin
        m_axi_sparse_data_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_sparse_data_WVALID = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WVALID;
    end else begin
        m_axi_sparse_data_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        output_data_addr3_blk_n = output_data_addr3_empty_n;
    end else begin
        output_data_addr3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == COLS_empty_n) | (1'b0 == ROWS_empty_n) | (output_data_addr3_empty_n == 1'b0) | (outputs_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        output_data_addr3_read = 1'b1;
    end else begin
        output_data_addr3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs_blk_n = outputs_empty_n;
    end else begin
        outputs_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == COLS_empty_n) | (1'b0 == ROWS_empty_n) | (output_data_addr3_empty_n == 1'b0) | (outputs_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs_read = 1'b1;
    end else begin
        outputs_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sparse_data_blk_n_AW = m_axi_sparse_data_AWREADY;
    end else begin
        sparse_data_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln88_reg_215 == 1'd0))) begin
        sparse_data_blk_n_B = m_axi_sparse_data_BVALID;
    end else begin
        sparse_data_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0)) & (icmp_ln95_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        sparse_flag = 1'd1;
    end else begin
        sparse_flag = sparse_flag_preg;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0)) & (icmp_ln95_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        sparse_flag_ap_vld = 1'b1;
    end else begin
        sparse_flag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == COLS_empty_n) | (1'b0 == ROWS_empty_n) | (output_data_addr3_empty_n == 1'b0) | (outputs_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln88_fu_154_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == COLS_empty_n) | (1'b0 == ROWS_empty_n) | (output_data_addr3_empty_n == 1'b0) | (outputs_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln88_fu_154_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((m_axi_sparse_data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if ((~((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln88_fu_172_p2 = (outputs_dout + zext_ln88_fu_168_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == COLS_empty_n) | (1'b0 == ROWS_empty_n) | (output_data_addr3_empty_n == 1'b0) | (outputs_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state40 = ((icmp_ln88_reg_215 == 1'd0) & (m_axi_sparse_data_BVALID == 1'b0));
end

assign grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_start = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_ap_start_reg;

assign icmp_ln88_fu_154_p2 = ((loop_num_fu_140_p4 == 27'd0) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_198_p2 = ((ap_phi_mux_count_0_lcssa_phi_fu_117_p4 == loop_num_reg_203) ? 1'b1 : 1'b0);

assign loop_num_fu_140_p4 = {{mul_ln85_fu_134_p2[31:5]}};

assign m_axi_sparse_data_ARADDR = 64'd0;

assign m_axi_sparse_data_ARBURST = 2'd0;

assign m_axi_sparse_data_ARCACHE = 4'd0;

assign m_axi_sparse_data_ARID = 1'd0;

assign m_axi_sparse_data_ARLEN = 32'd0;

assign m_axi_sparse_data_ARLOCK = 2'd0;

assign m_axi_sparse_data_ARPROT = 3'd0;

assign m_axi_sparse_data_ARQOS = 4'd0;

assign m_axi_sparse_data_ARREGION = 4'd0;

assign m_axi_sparse_data_ARSIZE = 3'd0;

assign m_axi_sparse_data_ARUSER = 1'd0;

assign m_axi_sparse_data_ARVALID = 1'b0;

assign m_axi_sparse_data_RREADY = 1'b0;

assign m_axi_sparse_data_WDATA = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WDATA;

assign m_axi_sparse_data_WID = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WID;

assign m_axi_sparse_data_WLAST = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WLAST;

assign m_axi_sparse_data_WSTRB = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WSTRB;

assign m_axi_sparse_data_WUSER = grp_store_ap_uint_256_ap_int_8_ap_int_8_32u_Pipeline_VITIS_LOOP_88_1_fu_124_m_axi_sparse_data_WUSER;

assign sext_ln88_fu_188_p1 = $signed(trunc_ln1_reg_219);

assign shl_ln_fu_160_p3 = {{output_data_addr3_dout}, {5'd0}};

assign zext_ln85_fu_150_p1 = loop_num_fu_140_p4;

assign zext_ln88_fu_168_p1 = shl_ln_fu_160_p3;

always @ (posedge ap_clk) begin
    zext_ln85_reg_210[31:27] <= 5'b00000;
end

endmodule //sparse_store_ap_uint_256_ap_int_8_ap_int_8_32u_s
