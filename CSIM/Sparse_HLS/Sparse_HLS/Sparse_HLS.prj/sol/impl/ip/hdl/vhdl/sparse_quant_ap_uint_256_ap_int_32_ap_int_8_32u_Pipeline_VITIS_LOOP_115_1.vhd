-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sparse_quant_ap_uint_256_ap_int_32_ap_int_8_32u_Pipeline_VITIS_LOOP_115_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_out1_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
    data_out1_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    data_out1_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    data_out1_empty_n : IN STD_LOGIC;
    data_out1_read : OUT STD_LOGIC;
    quant_out2_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    quant_out2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    quant_out2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    quant_out2_full_n : IN STD_LOGIC;
    quant_out2_write : OUT STD_LOGIC;
    div_cast : IN STD_LOGIC_VECTOR (26 downto 0);
    sh_prom : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp12 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv : IN STD_LOGIC_VECTOR (31 downto 0);
    pos_rounding_value : IN STD_LOGIC_VECTOR (63 downto 0);
    sh_prom18 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of sparse_quant_ap_uint_256_ap_int_32_ap_int_8_32u_Pipeline_VITIS_LOOP_115_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_21F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011111";
    constant ap_const_lv32_220 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000100000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_25F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001011111";
    constant ap_const_lv32_260 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100000";
    constant ap_const_lv32_27F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001111111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_29F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010011111";
    constant ap_const_lv32_2A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010100000";
    constant ap_const_lv32_2BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010111111";
    constant ap_const_lv32_2C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000000";
    constant ap_const_lv32_2DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011011111";
    constant ap_const_lv32_2E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011100000";
    constant ap_const_lv32_2FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011111111";
    constant ap_const_lv32_300 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000000";
    constant ap_const_lv32_31F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100011111";
    constant ap_const_lv32_320 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100000";
    constant ap_const_lv32_33F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100111111";
    constant ap_const_lv32_340 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101000000";
    constant ap_const_lv32_35F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101011111";
    constant ap_const_lv32_360 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101100000";
    constant ap_const_lv32_37F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101111111";
    constant ap_const_lv32_380 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110000000";
    constant ap_const_lv32_39F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110011111";
    constant ap_const_lv32_3A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110100000";
    constant ap_const_lv32_3BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110111111";
    constant ap_const_lv32_3C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000000";
    constant ap_const_lv32_3DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111011111";
    constant ap_const_lv32_3E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111100000";
    constant ap_const_lv32_3FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv33_7F : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001111111";
    constant ap_const_lv33_1FFFFFF80 : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111110000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln115_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal data_out1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal quant_out2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sh_prom18_cast_fu_245_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sh_prom18_cast_reg_3144 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_cast_fu_249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_cast_reg_3180 : STD_LOGIC_VECTOR (63 downto 0);
    signal sh_prom_cast_fu_253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sh_prom_cast_reg_3216 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_val_V_fu_282_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_reg_3256 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_1_reg_3261 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_2_reg_3266 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_3_reg_3271 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_4_reg_3276 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_5_reg_3281 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_6_reg_3286 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_7_reg_3291 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_8_reg_3296 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_9_reg_3301 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_10_reg_3306 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_11_reg_3311 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_12_reg_3316 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_13_reg_3321 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_14_reg_3326 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_15_reg_3331 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_16_reg_3336 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_17_reg_3341 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_18_reg_3346 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_19_reg_3351 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_20_reg_3356 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_21_reg_3361 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_22_reg_3366 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_23_reg_3371 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_24_reg_3376 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_25_reg_3381 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_26_reg_3386 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_27_reg_3391 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_28_reg_3396 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_29_reg_3401 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_30_reg_3406 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_31_reg_3411 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln131_fu_616_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_reg_3416 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_1_fu_641_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_1_reg_3421 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_2_fu_666_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_2_reg_3426 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_3_fu_691_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_3_reg_3431 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_4_fu_716_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_4_reg_3436 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_5_fu_741_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_5_reg_3441 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_6_fu_766_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_6_reg_3446 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_7_fu_791_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_7_reg_3451 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_8_fu_816_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_8_reg_3456 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_9_fu_841_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_9_reg_3461 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_10_fu_866_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_10_reg_3466 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_11_fu_891_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_11_reg_3471 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_12_fu_916_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_12_reg_3476 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_13_fu_941_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_13_reg_3481 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_14_fu_966_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_14_reg_3486 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_15_fu_991_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_15_reg_3491 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_16_fu_1016_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_16_reg_3496 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_17_fu_1041_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_17_reg_3501 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_18_fu_1066_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_18_reg_3506 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_19_fu_1091_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_19_reg_3511 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_20_fu_1116_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_20_reg_3516 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_21_fu_1141_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_21_reg_3521 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_22_fu_1166_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_22_reg_3526 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_23_fu_1191_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_23_reg_3531 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_24_fu_1216_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_24_reg_3536 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_25_fu_1241_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_25_reg_3541 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_26_fu_1266_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_26_reg_3546 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_27_fu_1291_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_27_reg_3551 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_28_fu_1316_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_28_reg_3556 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_29_fu_1341_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_29_reg_3561 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_30_fu_1366_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_30_reg_3566 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_31_fu_1391_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln131_31_reg_3571 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_192 : STD_LOGIC_VECTOR (26 downto 0);
    signal i_3_fu_271_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal sext_ln541_fu_596_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_fu_599_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_fu_611_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_fu_611_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_fu_611_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_1_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_1_fu_624_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_1_fu_636_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_1_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_1_fu_636_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_2_fu_646_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_2_fu_649_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_2_fu_661_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_2_fu_661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_2_fu_661_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_3_fu_671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_3_fu_674_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_3_fu_686_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_3_fu_686_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_3_fu_686_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_4_fu_696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_4_fu_699_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_4_fu_711_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_4_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_4_fu_711_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_5_fu_721_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_5_fu_724_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_5_fu_736_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_5_fu_736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_5_fu_736_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_6_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_6_fu_749_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_6_fu_761_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_6_fu_761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_6_fu_761_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_7_fu_771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_7_fu_774_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_7_fu_786_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_7_fu_786_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_7_fu_786_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_8_fu_796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_8_fu_799_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_8_fu_811_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_8_fu_811_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_8_fu_811_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_9_fu_821_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_9_fu_824_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_9_fu_836_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_9_fu_836_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_9_fu_836_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_10_fu_846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_10_fu_849_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_10_fu_861_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_10_fu_861_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_10_fu_861_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_11_fu_871_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_11_fu_874_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_11_fu_886_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_11_fu_886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_11_fu_886_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_12_fu_896_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_12_fu_899_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_12_fu_911_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_12_fu_911_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_12_fu_911_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_13_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_13_fu_924_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_13_fu_936_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_13_fu_936_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_13_fu_936_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_14_fu_946_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_14_fu_949_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_14_fu_961_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_14_fu_961_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_14_fu_961_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_15_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_15_fu_974_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_15_fu_986_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_15_fu_986_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_15_fu_986_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_16_fu_996_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_16_fu_999_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_16_fu_1011_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_16_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_16_fu_1011_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_17_fu_1021_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_17_fu_1024_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_17_fu_1036_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_17_fu_1036_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_17_fu_1036_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_18_fu_1046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_18_fu_1049_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_18_fu_1061_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_18_fu_1061_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_18_fu_1061_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_19_fu_1071_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_19_fu_1074_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_19_fu_1086_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_19_fu_1086_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_19_fu_1086_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_20_fu_1096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_20_fu_1099_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_20_fu_1111_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_20_fu_1111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_20_fu_1111_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_21_fu_1121_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_21_fu_1124_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_21_fu_1136_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_21_fu_1136_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_21_fu_1136_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_22_fu_1146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_22_fu_1149_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_22_fu_1161_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_22_fu_1161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_22_fu_1161_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_23_fu_1171_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_23_fu_1174_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_23_fu_1186_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_23_fu_1186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_23_fu_1186_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_24_fu_1196_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_24_fu_1199_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_24_fu_1211_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_24_fu_1211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_24_fu_1211_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_25_fu_1221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_25_fu_1224_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_25_fu_1236_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_25_fu_1236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_25_fu_1236_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_26_fu_1246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_26_fu_1249_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_26_fu_1261_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_26_fu_1261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_26_fu_1261_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_27_fu_1271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_27_fu_1274_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_27_fu_1286_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_27_fu_1286_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_27_fu_1286_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_28_fu_1296_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_28_fu_1299_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_28_fu_1311_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_28_fu_1311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_28_fu_1311_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_29_fu_1321_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_29_fu_1324_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_29_fu_1336_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_29_fu_1336_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_29_fu_1336_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_30_fu_1346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_30_fu_1349_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_30_fu_1361_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_30_fu_1361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_30_fu_1361_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln541_31_fu_1371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln126_31_fu_1374_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_31_fu_1386_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln128_31_fu_1386_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln128_31_fu_1386_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ashr_ln132_fu_1396_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_1404_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_fu_1414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_fu_1400_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_fu_1420_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_fu_1428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_fu_1434_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_1_fu_1446_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1454_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_1_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_1_fu_1450_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_1_fu_1470_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_1_fu_1478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_1_fu_1484_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_2_fu_1496_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_1504_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_2_fu_1514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_2_fu_1500_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_2_fu_1520_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_2_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_2_fu_1534_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_3_fu_1546_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_1554_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_3_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_3_fu_1550_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_3_fu_1570_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_3_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_3_fu_1584_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_4_fu_1596_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_1604_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_4_fu_1614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_4_fu_1600_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_4_fu_1620_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_4_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_4_fu_1634_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_5_fu_1646_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1654_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_5_fu_1664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_5_fu_1650_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_5_fu_1670_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_5_fu_1678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_5_fu_1684_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_6_fu_1696_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_1704_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_6_fu_1714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_6_fu_1700_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_6_fu_1720_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_6_fu_1728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_6_fu_1734_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_7_fu_1746_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_1754_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_7_fu_1764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_7_fu_1750_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_7_fu_1770_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_7_fu_1778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_7_fu_1784_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_8_fu_1796_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_1804_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_8_fu_1814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_8_fu_1800_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_8_fu_1820_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_8_fu_1828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_8_fu_1834_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_9_fu_1846_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1854_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_9_fu_1864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_9_fu_1850_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_9_fu_1870_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_9_fu_1878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_9_fu_1884_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_10_fu_1896_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_1904_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_10_fu_1914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_10_fu_1900_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_10_fu_1920_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_10_fu_1928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_10_fu_1934_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_11_fu_1946_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1954_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_11_fu_1964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_11_fu_1950_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_11_fu_1970_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_11_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_11_fu_1984_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_12_fu_1996_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_2004_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_12_fu_2014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_12_fu_2000_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_12_fu_2020_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_12_fu_2028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_12_fu_2034_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_13_fu_2046_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_2054_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_13_fu_2064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_13_fu_2050_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_13_fu_2070_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_13_fu_2078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_13_fu_2084_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_14_fu_2096_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_2104_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_14_fu_2114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_14_fu_2100_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_14_fu_2120_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_14_fu_2128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_14_fu_2134_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_15_fu_2146_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_2154_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_15_fu_2164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_15_fu_2150_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_15_fu_2170_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_15_fu_2178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_15_fu_2184_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_16_fu_2196_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_2204_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_16_fu_2214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_16_fu_2200_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_16_fu_2220_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_16_fu_2228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_16_fu_2234_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_17_fu_2246_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_2254_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_17_fu_2264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_17_fu_2250_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_17_fu_2270_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_17_fu_2278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_17_fu_2284_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_18_fu_2296_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_2304_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_18_fu_2314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_18_fu_2300_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_18_fu_2320_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_18_fu_2328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_18_fu_2334_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_19_fu_2346_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_2354_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_19_fu_2364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_19_fu_2350_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_19_fu_2370_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_19_fu_2378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_19_fu_2384_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_20_fu_2396_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_2404_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_20_fu_2414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_20_fu_2400_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_20_fu_2420_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_20_fu_2428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_20_fu_2434_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_21_fu_2446_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_2454_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_21_fu_2464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_21_fu_2450_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_21_fu_2470_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_21_fu_2478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_21_fu_2484_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_22_fu_2496_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_2504_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_22_fu_2514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_22_fu_2500_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_22_fu_2520_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_22_fu_2528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_22_fu_2534_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_23_fu_2546_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_2554_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_23_fu_2564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_23_fu_2550_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_23_fu_2570_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_23_fu_2578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_23_fu_2584_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_24_fu_2596_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_2604_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_24_fu_2614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_24_fu_2600_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_24_fu_2620_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_24_fu_2628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_24_fu_2634_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_25_fu_2646_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_2654_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_25_fu_2664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_25_fu_2650_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_25_fu_2670_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_25_fu_2678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_25_fu_2684_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_26_fu_2696_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_2704_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_26_fu_2714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_26_fu_2700_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_26_fu_2720_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_26_fu_2728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_26_fu_2734_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_27_fu_2746_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_2754_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_27_fu_2764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_27_fu_2750_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_27_fu_2770_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_27_fu_2778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_27_fu_2784_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_28_fu_2796_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_2804_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_28_fu_2814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_28_fu_2800_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_28_fu_2820_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_28_fu_2828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_28_fu_2834_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_29_fu_2846_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_2854_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_29_fu_2864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_29_fu_2850_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_29_fu_2870_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_29_fu_2878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_29_fu_2884_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_30_fu_2896_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_2904_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_30_fu_2914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_30_fu_2900_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_30_fu_2920_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_30_fu_2928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_30_fu_2934_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ashr_ln132_31_fu_2946_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_2954_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_31_fu_2964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_31_fu_2950_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln134_31_fu_2970_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln135_31_fu_2978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln216_31_fu_2984_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_31_fu_2988_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_30_fu_2938_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_29_fu_2888_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_28_fu_2838_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_27_fu_2788_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_26_fu_2738_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_25_fu_2688_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_24_fu_2638_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_23_fu_2588_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_22_fu_2538_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_21_fu_2488_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_20_fu_2438_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_19_fu_2388_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_18_fu_2338_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_17_fu_2288_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_16_fu_2238_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_15_fu_2188_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_14_fu_2138_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_13_fu_2088_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_12_fu_2038_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_11_fu_1988_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_10_fu_1938_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_9_fu_1888_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_8_fu_1838_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_7_fu_1788_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_6_fu_1738_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_5_fu_1688_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_4_fu_1638_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_3_fu_1588_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_2_fu_1538_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_1_fu_1488_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln216_fu_1438_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sparse_mul_64s_32s_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sparse_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_64s_32s_64_1_1_U40 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_fu_611_p0,
        din1 => mul_ln128_fu_611_p1,
        dout => mul_ln128_fu_611_p2);

    mul_64s_32s_64_1_1_U41 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_1_fu_636_p0,
        din1 => mul_ln128_1_fu_636_p1,
        dout => mul_ln128_1_fu_636_p2);

    mul_64s_32s_64_1_1_U42 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_2_fu_661_p0,
        din1 => mul_ln128_2_fu_661_p1,
        dout => mul_ln128_2_fu_661_p2);

    mul_64s_32s_64_1_1_U43 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_3_fu_686_p0,
        din1 => mul_ln128_3_fu_686_p1,
        dout => mul_ln128_3_fu_686_p2);

    mul_64s_32s_64_1_1_U44 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_4_fu_711_p0,
        din1 => mul_ln128_4_fu_711_p1,
        dout => mul_ln128_4_fu_711_p2);

    mul_64s_32s_64_1_1_U45 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_5_fu_736_p0,
        din1 => mul_ln128_5_fu_736_p1,
        dout => mul_ln128_5_fu_736_p2);

    mul_64s_32s_64_1_1_U46 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_6_fu_761_p0,
        din1 => mul_ln128_6_fu_761_p1,
        dout => mul_ln128_6_fu_761_p2);

    mul_64s_32s_64_1_1_U47 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_7_fu_786_p0,
        din1 => mul_ln128_7_fu_786_p1,
        dout => mul_ln128_7_fu_786_p2);

    mul_64s_32s_64_1_1_U48 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_8_fu_811_p0,
        din1 => mul_ln128_8_fu_811_p1,
        dout => mul_ln128_8_fu_811_p2);

    mul_64s_32s_64_1_1_U49 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_9_fu_836_p0,
        din1 => mul_ln128_9_fu_836_p1,
        dout => mul_ln128_9_fu_836_p2);

    mul_64s_32s_64_1_1_U50 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_10_fu_861_p0,
        din1 => mul_ln128_10_fu_861_p1,
        dout => mul_ln128_10_fu_861_p2);

    mul_64s_32s_64_1_1_U51 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_11_fu_886_p0,
        din1 => mul_ln128_11_fu_886_p1,
        dout => mul_ln128_11_fu_886_p2);

    mul_64s_32s_64_1_1_U52 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_12_fu_911_p0,
        din1 => mul_ln128_12_fu_911_p1,
        dout => mul_ln128_12_fu_911_p2);

    mul_64s_32s_64_1_1_U53 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_13_fu_936_p0,
        din1 => mul_ln128_13_fu_936_p1,
        dout => mul_ln128_13_fu_936_p2);

    mul_64s_32s_64_1_1_U54 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_14_fu_961_p0,
        din1 => mul_ln128_14_fu_961_p1,
        dout => mul_ln128_14_fu_961_p2);

    mul_64s_32s_64_1_1_U55 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_15_fu_986_p0,
        din1 => mul_ln128_15_fu_986_p1,
        dout => mul_ln128_15_fu_986_p2);

    mul_64s_32s_64_1_1_U56 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_16_fu_1011_p0,
        din1 => mul_ln128_16_fu_1011_p1,
        dout => mul_ln128_16_fu_1011_p2);

    mul_64s_32s_64_1_1_U57 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_17_fu_1036_p0,
        din1 => mul_ln128_17_fu_1036_p1,
        dout => mul_ln128_17_fu_1036_p2);

    mul_64s_32s_64_1_1_U58 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_18_fu_1061_p0,
        din1 => mul_ln128_18_fu_1061_p1,
        dout => mul_ln128_18_fu_1061_p2);

    mul_64s_32s_64_1_1_U59 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_19_fu_1086_p0,
        din1 => mul_ln128_19_fu_1086_p1,
        dout => mul_ln128_19_fu_1086_p2);

    mul_64s_32s_64_1_1_U60 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_20_fu_1111_p0,
        din1 => mul_ln128_20_fu_1111_p1,
        dout => mul_ln128_20_fu_1111_p2);

    mul_64s_32s_64_1_1_U61 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_21_fu_1136_p0,
        din1 => mul_ln128_21_fu_1136_p1,
        dout => mul_ln128_21_fu_1136_p2);

    mul_64s_32s_64_1_1_U62 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_22_fu_1161_p0,
        din1 => mul_ln128_22_fu_1161_p1,
        dout => mul_ln128_22_fu_1161_p2);

    mul_64s_32s_64_1_1_U63 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_23_fu_1186_p0,
        din1 => mul_ln128_23_fu_1186_p1,
        dout => mul_ln128_23_fu_1186_p2);

    mul_64s_32s_64_1_1_U64 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_24_fu_1211_p0,
        din1 => mul_ln128_24_fu_1211_p1,
        dout => mul_ln128_24_fu_1211_p2);

    mul_64s_32s_64_1_1_U65 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_25_fu_1236_p0,
        din1 => mul_ln128_25_fu_1236_p1,
        dout => mul_ln128_25_fu_1236_p2);

    mul_64s_32s_64_1_1_U66 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_26_fu_1261_p0,
        din1 => mul_ln128_26_fu_1261_p1,
        dout => mul_ln128_26_fu_1261_p2);

    mul_64s_32s_64_1_1_U67 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_27_fu_1286_p0,
        din1 => mul_ln128_27_fu_1286_p1,
        dout => mul_ln128_27_fu_1286_p2);

    mul_64s_32s_64_1_1_U68 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_28_fu_1311_p0,
        din1 => mul_ln128_28_fu_1311_p1,
        dout => mul_ln128_28_fu_1311_p2);

    mul_64s_32s_64_1_1_U69 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_29_fu_1336_p0,
        din1 => mul_ln128_29_fu_1336_p1,
        dout => mul_ln128_29_fu_1336_p2);

    mul_64s_32s_64_1_1_U70 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_30_fu_1361_p0,
        din1 => mul_ln128_30_fu_1361_p1,
        dout => mul_ln128_30_fu_1361_p2);

    mul_64s_32s_64_1_1_U71 : component sparse_mul_64s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln128_31_fu_1386_p0,
        din1 => mul_ln128_31_fu_1386_p1,
        dout => mul_ln128_31_fu_1386_p2);

    flow_control_loop_pipe_sequential_init_U : component sparse_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    i_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln115_fu_265_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_192 <= i_3_fu_271_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_192 <= ap_const_lv27_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln131_10_reg_3466 <= add_ln131_10_fu_866_p2;
                add_ln131_11_reg_3471 <= add_ln131_11_fu_891_p2;
                add_ln131_12_reg_3476 <= add_ln131_12_fu_916_p2;
                add_ln131_13_reg_3481 <= add_ln131_13_fu_941_p2;
                add_ln131_14_reg_3486 <= add_ln131_14_fu_966_p2;
                add_ln131_15_reg_3491 <= add_ln131_15_fu_991_p2;
                add_ln131_16_reg_3496 <= add_ln131_16_fu_1016_p2;
                add_ln131_17_reg_3501 <= add_ln131_17_fu_1041_p2;
                add_ln131_18_reg_3506 <= add_ln131_18_fu_1066_p2;
                add_ln131_19_reg_3511 <= add_ln131_19_fu_1091_p2;
                add_ln131_1_reg_3421 <= add_ln131_1_fu_641_p2;
                add_ln131_20_reg_3516 <= add_ln131_20_fu_1116_p2;
                add_ln131_21_reg_3521 <= add_ln131_21_fu_1141_p2;
                add_ln131_22_reg_3526 <= add_ln131_22_fu_1166_p2;
                add_ln131_23_reg_3531 <= add_ln131_23_fu_1191_p2;
                add_ln131_24_reg_3536 <= add_ln131_24_fu_1216_p2;
                add_ln131_25_reg_3541 <= add_ln131_25_fu_1241_p2;
                add_ln131_26_reg_3546 <= add_ln131_26_fu_1266_p2;
                add_ln131_27_reg_3551 <= add_ln131_27_fu_1291_p2;
                add_ln131_28_reg_3556 <= add_ln131_28_fu_1316_p2;
                add_ln131_29_reg_3561 <= add_ln131_29_fu_1341_p2;
                add_ln131_2_reg_3426 <= add_ln131_2_fu_666_p2;
                add_ln131_30_reg_3566 <= add_ln131_30_fu_1366_p2;
                add_ln131_31_reg_3571 <= add_ln131_31_fu_1391_p2;
                add_ln131_3_reg_3431 <= add_ln131_3_fu_691_p2;
                add_ln131_4_reg_3436 <= add_ln131_4_fu_716_p2;
                add_ln131_5_reg_3441 <= add_ln131_5_fu_741_p2;
                add_ln131_6_reg_3446 <= add_ln131_6_fu_766_p2;
                add_ln131_7_reg_3451 <= add_ln131_7_fu_791_p2;
                add_ln131_8_reg_3456 <= add_ln131_8_fu_816_p2;
                add_ln131_9_reg_3461 <= add_ln131_9_fu_841_p2;
                add_ln131_reg_3416 <= add_ln131_fu_616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                conv_cast_reg_3180 <= conv_cast_fu_249_p1;
                l_val_V_10_reg_3306 <= data_out1_dout(351 downto 320);
                l_val_V_11_reg_3311 <= data_out1_dout(383 downto 352);
                l_val_V_12_reg_3316 <= data_out1_dout(415 downto 384);
                l_val_V_13_reg_3321 <= data_out1_dout(447 downto 416);
                l_val_V_14_reg_3326 <= data_out1_dout(479 downto 448);
                l_val_V_15_reg_3331 <= data_out1_dout(511 downto 480);
                l_val_V_16_reg_3336 <= data_out1_dout(543 downto 512);
                l_val_V_17_reg_3341 <= data_out1_dout(575 downto 544);
                l_val_V_18_reg_3346 <= data_out1_dout(607 downto 576);
                l_val_V_19_reg_3351 <= data_out1_dout(639 downto 608);
                l_val_V_1_reg_3261 <= data_out1_dout(63 downto 32);
                l_val_V_20_reg_3356 <= data_out1_dout(671 downto 640);
                l_val_V_21_reg_3361 <= data_out1_dout(703 downto 672);
                l_val_V_22_reg_3366 <= data_out1_dout(735 downto 704);
                l_val_V_23_reg_3371 <= data_out1_dout(767 downto 736);
                l_val_V_24_reg_3376 <= data_out1_dout(799 downto 768);
                l_val_V_25_reg_3381 <= data_out1_dout(831 downto 800);
                l_val_V_26_reg_3386 <= data_out1_dout(863 downto 832);
                l_val_V_27_reg_3391 <= data_out1_dout(895 downto 864);
                l_val_V_28_reg_3396 <= data_out1_dout(927 downto 896);
                l_val_V_29_reg_3401 <= data_out1_dout(959 downto 928);
                l_val_V_2_reg_3266 <= data_out1_dout(95 downto 64);
                l_val_V_30_reg_3406 <= data_out1_dout(991 downto 960);
                l_val_V_31_reg_3411 <= data_out1_dout(1023 downto 992);
                l_val_V_3_reg_3271 <= data_out1_dout(127 downto 96);
                l_val_V_4_reg_3276 <= data_out1_dout(159 downto 128);
                l_val_V_5_reg_3281 <= data_out1_dout(191 downto 160);
                l_val_V_6_reg_3286 <= data_out1_dout(223 downto 192);
                l_val_V_7_reg_3291 <= data_out1_dout(255 downto 224);
                l_val_V_8_reg_3296 <= data_out1_dout(287 downto 256);
                l_val_V_9_reg_3301 <= data_out1_dout(319 downto 288);
                l_val_V_reg_3256 <= l_val_V_fu_282_p1;
                    sh_prom18_cast_reg_3144(31 downto 0) <= sh_prom18_cast_fu_245_p1(31 downto 0);
                    sh_prom_cast_reg_3216(31 downto 0) <= sh_prom_cast_fu_253_p1(31 downto 0);
            end if;
        end if;
    end process;
    sh_prom18_cast_reg_3144(63 downto 32) <= "00000000000000000000000000000000";
    sh_prom_cast_reg_3216(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln131_10_fu_866_p2 <= std_logic_vector(unsigned(mul_ln128_10_fu_861_p2) + unsigned(pos_rounding_value));
    add_ln131_11_fu_891_p2 <= std_logic_vector(unsigned(mul_ln128_11_fu_886_p2) + unsigned(pos_rounding_value));
    add_ln131_12_fu_916_p2 <= std_logic_vector(unsigned(mul_ln128_12_fu_911_p2) + unsigned(pos_rounding_value));
    add_ln131_13_fu_941_p2 <= std_logic_vector(unsigned(mul_ln128_13_fu_936_p2) + unsigned(pos_rounding_value));
    add_ln131_14_fu_966_p2 <= std_logic_vector(unsigned(mul_ln128_14_fu_961_p2) + unsigned(pos_rounding_value));
    add_ln131_15_fu_991_p2 <= std_logic_vector(unsigned(mul_ln128_15_fu_986_p2) + unsigned(pos_rounding_value));
    add_ln131_16_fu_1016_p2 <= std_logic_vector(unsigned(mul_ln128_16_fu_1011_p2) + unsigned(pos_rounding_value));
    add_ln131_17_fu_1041_p2 <= std_logic_vector(unsigned(mul_ln128_17_fu_1036_p2) + unsigned(pos_rounding_value));
    add_ln131_18_fu_1066_p2 <= std_logic_vector(unsigned(mul_ln128_18_fu_1061_p2) + unsigned(pos_rounding_value));
    add_ln131_19_fu_1091_p2 <= std_logic_vector(unsigned(mul_ln128_19_fu_1086_p2) + unsigned(pos_rounding_value));
    add_ln131_1_fu_641_p2 <= std_logic_vector(unsigned(mul_ln128_1_fu_636_p2) + unsigned(pos_rounding_value));
    add_ln131_20_fu_1116_p2 <= std_logic_vector(unsigned(mul_ln128_20_fu_1111_p2) + unsigned(pos_rounding_value));
    add_ln131_21_fu_1141_p2 <= std_logic_vector(unsigned(mul_ln128_21_fu_1136_p2) + unsigned(pos_rounding_value));
    add_ln131_22_fu_1166_p2 <= std_logic_vector(unsigned(mul_ln128_22_fu_1161_p2) + unsigned(pos_rounding_value));
    add_ln131_23_fu_1191_p2 <= std_logic_vector(unsigned(mul_ln128_23_fu_1186_p2) + unsigned(pos_rounding_value));
    add_ln131_24_fu_1216_p2 <= std_logic_vector(unsigned(mul_ln128_24_fu_1211_p2) + unsigned(pos_rounding_value));
    add_ln131_25_fu_1241_p2 <= std_logic_vector(unsigned(mul_ln128_25_fu_1236_p2) + unsigned(pos_rounding_value));
    add_ln131_26_fu_1266_p2 <= std_logic_vector(unsigned(mul_ln128_26_fu_1261_p2) + unsigned(pos_rounding_value));
    add_ln131_27_fu_1291_p2 <= std_logic_vector(unsigned(mul_ln128_27_fu_1286_p2) + unsigned(pos_rounding_value));
    add_ln131_28_fu_1316_p2 <= std_logic_vector(unsigned(mul_ln128_28_fu_1311_p2) + unsigned(pos_rounding_value));
    add_ln131_29_fu_1341_p2 <= std_logic_vector(unsigned(mul_ln128_29_fu_1336_p2) + unsigned(pos_rounding_value));
    add_ln131_2_fu_666_p2 <= std_logic_vector(unsigned(mul_ln128_2_fu_661_p2) + unsigned(pos_rounding_value));
    add_ln131_30_fu_1366_p2 <= std_logic_vector(unsigned(mul_ln128_30_fu_1361_p2) + unsigned(pos_rounding_value));
    add_ln131_31_fu_1391_p2 <= std_logic_vector(unsigned(mul_ln128_31_fu_1386_p2) + unsigned(pos_rounding_value));
    add_ln131_3_fu_691_p2 <= std_logic_vector(unsigned(mul_ln128_3_fu_686_p2) + unsigned(pos_rounding_value));
    add_ln131_4_fu_716_p2 <= std_logic_vector(unsigned(mul_ln128_4_fu_711_p2) + unsigned(pos_rounding_value));
    add_ln131_5_fu_741_p2 <= std_logic_vector(unsigned(mul_ln128_5_fu_736_p2) + unsigned(pos_rounding_value));
    add_ln131_6_fu_766_p2 <= std_logic_vector(unsigned(mul_ln128_6_fu_761_p2) + unsigned(pos_rounding_value));
    add_ln131_7_fu_791_p2 <= std_logic_vector(unsigned(mul_ln128_7_fu_786_p2) + unsigned(pos_rounding_value));
    add_ln131_8_fu_816_p2 <= std_logic_vector(unsigned(mul_ln128_8_fu_811_p2) + unsigned(pos_rounding_value));
    add_ln131_9_fu_841_p2 <= std_logic_vector(unsigned(mul_ln128_9_fu_836_p2) + unsigned(pos_rounding_value));
    add_ln131_fu_616_p2 <= std_logic_vector(unsigned(mul_ln128_fu_611_p2) + unsigned(pos_rounding_value));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, data_out1_empty_n, quant_out2_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((quant_out2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((data_out1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, data_out1_empty_n, quant_out2_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((quant_out2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((data_out1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, data_out1_empty_n, quant_out2_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((quant_out2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((data_out1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(data_out1_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (data_out1_empty_n = ap_const_logic_0);
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(quant_out2_full_n)
    begin
                ap_block_state4_pp0_stage0_iter3 <= (quant_out2_full_n = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln115_fu_265_p2)
    begin
        if (((icmp_ln115_fu_265_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_192, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_2 <= ap_const_lv27_0;
        else 
            ap_sig_allocacmp_i_2 <= i_fu_192;
        end if; 
    end process;

    ashr_ln132_10_fu_1896_p2 <= std_logic_vector(shift_right(signed(add_ln131_10_reg_3466),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_11_fu_1946_p2 <= std_logic_vector(shift_right(signed(add_ln131_11_reg_3471),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_12_fu_1996_p2 <= std_logic_vector(shift_right(signed(add_ln131_12_reg_3476),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_13_fu_2046_p2 <= std_logic_vector(shift_right(signed(add_ln131_13_reg_3481),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_14_fu_2096_p2 <= std_logic_vector(shift_right(signed(add_ln131_14_reg_3486),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_15_fu_2146_p2 <= std_logic_vector(shift_right(signed(add_ln131_15_reg_3491),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_16_fu_2196_p2 <= std_logic_vector(shift_right(signed(add_ln131_16_reg_3496),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_17_fu_2246_p2 <= std_logic_vector(shift_right(signed(add_ln131_17_reg_3501),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_18_fu_2296_p2 <= std_logic_vector(shift_right(signed(add_ln131_18_reg_3506),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_19_fu_2346_p2 <= std_logic_vector(shift_right(signed(add_ln131_19_reg_3511),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_1_fu_1446_p2 <= std_logic_vector(shift_right(signed(add_ln131_1_reg_3421),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_20_fu_2396_p2 <= std_logic_vector(shift_right(signed(add_ln131_20_reg_3516),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_21_fu_2446_p2 <= std_logic_vector(shift_right(signed(add_ln131_21_reg_3521),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_22_fu_2496_p2 <= std_logic_vector(shift_right(signed(add_ln131_22_reg_3526),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_23_fu_2546_p2 <= std_logic_vector(shift_right(signed(add_ln131_23_reg_3531),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_24_fu_2596_p2 <= std_logic_vector(shift_right(signed(add_ln131_24_reg_3536),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_25_fu_2646_p2 <= std_logic_vector(shift_right(signed(add_ln131_25_reg_3541),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_26_fu_2696_p2 <= std_logic_vector(shift_right(signed(add_ln131_26_reg_3546),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_27_fu_2746_p2 <= std_logic_vector(shift_right(signed(add_ln131_27_reg_3551),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_28_fu_2796_p2 <= std_logic_vector(shift_right(signed(add_ln131_28_reg_3556),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_29_fu_2846_p2 <= std_logic_vector(shift_right(signed(add_ln131_29_reg_3561),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_2_fu_1496_p2 <= std_logic_vector(shift_right(signed(add_ln131_2_reg_3426),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_30_fu_2896_p2 <= std_logic_vector(shift_right(signed(add_ln131_30_reg_3566),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_31_fu_2946_p2 <= std_logic_vector(shift_right(signed(add_ln131_31_reg_3571),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_3_fu_1546_p2 <= std_logic_vector(shift_right(signed(add_ln131_3_reg_3431),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_4_fu_1596_p2 <= std_logic_vector(shift_right(signed(add_ln131_4_reg_3436),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_5_fu_1646_p2 <= std_logic_vector(shift_right(signed(add_ln131_5_reg_3441),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_6_fu_1696_p2 <= std_logic_vector(shift_right(signed(add_ln131_6_reg_3446),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_7_fu_1746_p2 <= std_logic_vector(shift_right(signed(add_ln131_7_reg_3451),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_8_fu_1796_p2 <= std_logic_vector(shift_right(signed(add_ln131_8_reg_3456),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_9_fu_1846_p2 <= std_logic_vector(shift_right(signed(add_ln131_9_reg_3461),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
    ashr_ln132_fu_1396_p2 <= std_logic_vector(shift_right(signed(add_ln131_reg_3416),to_integer(unsigned('0' & sh_prom18_cast_reg_3144(31-1 downto 0)))));
        conv_cast_fu_249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv),64));


    data_out1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, data_out1_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_out1_blk_n <= data_out1_empty_n;
        else 
            data_out1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_out1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_out1_read <= ap_const_logic_1;
        else 
            data_out1_read <= ap_const_logic_0;
        end if; 
    end process;

    i_3_fu_271_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_2) + unsigned(ap_const_lv27_1));
    icmp_ln115_fu_265_p2 <= "1" when (ap_sig_allocacmp_i_2 = div_cast) else "0";
    icmp_ln134_10_fu_1914_p2 <= "1" when (signed(tmp_10_fu_1904_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_11_fu_1964_p2 <= "1" when (signed(tmp_11_fu_1954_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_12_fu_2014_p2 <= "1" when (signed(tmp_12_fu_2004_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_13_fu_2064_p2 <= "1" when (signed(tmp_13_fu_2054_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_14_fu_2114_p2 <= "1" when (signed(tmp_14_fu_2104_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_15_fu_2164_p2 <= "1" when (signed(tmp_15_fu_2154_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_16_fu_2214_p2 <= "1" when (signed(tmp_16_fu_2204_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_17_fu_2264_p2 <= "1" when (signed(tmp_17_fu_2254_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_18_fu_2314_p2 <= "1" when (signed(tmp_18_fu_2304_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_19_fu_2364_p2 <= "1" when (signed(tmp_19_fu_2354_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_1_fu_1464_p2 <= "1" when (signed(tmp_1_fu_1454_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_20_fu_2414_p2 <= "1" when (signed(tmp_20_fu_2404_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_21_fu_2464_p2 <= "1" when (signed(tmp_21_fu_2454_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_22_fu_2514_p2 <= "1" when (signed(tmp_22_fu_2504_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_23_fu_2564_p2 <= "1" when (signed(tmp_23_fu_2554_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_24_fu_2614_p2 <= "1" when (signed(tmp_24_fu_2604_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_25_fu_2664_p2 <= "1" when (signed(tmp_25_fu_2654_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_26_fu_2714_p2 <= "1" when (signed(tmp_26_fu_2704_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_27_fu_2764_p2 <= "1" when (signed(tmp_27_fu_2754_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_28_fu_2814_p2 <= "1" when (signed(tmp_28_fu_2804_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_29_fu_2864_p2 <= "1" when (signed(tmp_29_fu_2854_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_2_fu_1514_p2 <= "1" when (signed(tmp_2_fu_1504_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_30_fu_2914_p2 <= "1" when (signed(tmp_30_fu_2904_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_31_fu_2964_p2 <= "1" when (signed(tmp_31_fu_2954_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_3_fu_1564_p2 <= "1" when (signed(tmp_3_fu_1554_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_4_fu_1614_p2 <= "1" when (signed(tmp_4_fu_1604_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_5_fu_1664_p2 <= "1" when (signed(tmp_5_fu_1654_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_6_fu_1714_p2 <= "1" when (signed(tmp_6_fu_1704_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_7_fu_1764_p2 <= "1" when (signed(tmp_7_fu_1754_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_8_fu_1814_p2 <= "1" when (signed(tmp_8_fu_1804_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_9_fu_1864_p2 <= "1" when (signed(tmp_9_fu_1854_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln134_fu_1414_p2 <= "1" when (signed(tmp_fu_1404_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln135_10_fu_1928_p2 <= "1" when (signed(select_ln134_10_fu_1920_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_11_fu_1978_p2 <= "1" when (signed(select_ln134_11_fu_1970_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_12_fu_2028_p2 <= "1" when (signed(select_ln134_12_fu_2020_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_13_fu_2078_p2 <= "1" when (signed(select_ln134_13_fu_2070_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_14_fu_2128_p2 <= "1" when (signed(select_ln134_14_fu_2120_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_15_fu_2178_p2 <= "1" when (signed(select_ln134_15_fu_2170_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_16_fu_2228_p2 <= "1" when (signed(select_ln134_16_fu_2220_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_17_fu_2278_p2 <= "1" when (signed(select_ln134_17_fu_2270_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_18_fu_2328_p2 <= "1" when (signed(select_ln134_18_fu_2320_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_19_fu_2378_p2 <= "1" when (signed(select_ln134_19_fu_2370_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_1_fu_1478_p2 <= "1" when (signed(select_ln134_1_fu_1470_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_20_fu_2428_p2 <= "1" when (signed(select_ln134_20_fu_2420_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_21_fu_2478_p2 <= "1" when (signed(select_ln134_21_fu_2470_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_22_fu_2528_p2 <= "1" when (signed(select_ln134_22_fu_2520_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_23_fu_2578_p2 <= "1" when (signed(select_ln134_23_fu_2570_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_24_fu_2628_p2 <= "1" when (signed(select_ln134_24_fu_2620_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_25_fu_2678_p2 <= "1" when (signed(select_ln134_25_fu_2670_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_26_fu_2728_p2 <= "1" when (signed(select_ln134_26_fu_2720_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_27_fu_2778_p2 <= "1" when (signed(select_ln134_27_fu_2770_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_28_fu_2828_p2 <= "1" when (signed(select_ln134_28_fu_2820_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_29_fu_2878_p2 <= "1" when (signed(select_ln134_29_fu_2870_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_2_fu_1528_p2 <= "1" when (signed(select_ln134_2_fu_1520_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_30_fu_2928_p2 <= "1" when (signed(select_ln134_30_fu_2920_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_31_fu_2978_p2 <= "1" when (signed(select_ln134_31_fu_2970_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_3_fu_1578_p2 <= "1" when (signed(select_ln134_3_fu_1570_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_4_fu_1628_p2 <= "1" when (signed(select_ln134_4_fu_1620_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_5_fu_1678_p2 <= "1" when (signed(select_ln134_5_fu_1670_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_6_fu_1728_p2 <= "1" when (signed(select_ln134_6_fu_1720_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_7_fu_1778_p2 <= "1" when (signed(select_ln134_7_fu_1770_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_8_fu_1828_p2 <= "1" when (signed(select_ln134_8_fu_1820_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_9_fu_1878_p2 <= "1" when (signed(select_ln134_9_fu_1870_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    icmp_ln135_fu_1428_p2 <= "1" when (signed(select_ln134_fu_1420_p3) < signed(ap_const_lv33_1FFFFFF80)) else "0";
    l_val_V_fu_282_p1 <= data_out1_dout(32 - 1 downto 0);
    mul_ln128_10_fu_861_p0 <= 
        shl_ln126_10_fu_849_p2 when (cmp12(0) = '1') else 
        sext_ln541_10_fu_846_p1;
    mul_ln128_10_fu_861_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_11_fu_886_p0 <= 
        shl_ln126_11_fu_874_p2 when (cmp12(0) = '1') else 
        sext_ln541_11_fu_871_p1;
    mul_ln128_11_fu_886_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_12_fu_911_p0 <= 
        shl_ln126_12_fu_899_p2 when (cmp12(0) = '1') else 
        sext_ln541_12_fu_896_p1;
    mul_ln128_12_fu_911_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_13_fu_936_p0 <= 
        shl_ln126_13_fu_924_p2 when (cmp12(0) = '1') else 
        sext_ln541_13_fu_921_p1;
    mul_ln128_13_fu_936_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_14_fu_961_p0 <= 
        shl_ln126_14_fu_949_p2 when (cmp12(0) = '1') else 
        sext_ln541_14_fu_946_p1;
    mul_ln128_14_fu_961_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_15_fu_986_p0 <= 
        shl_ln126_15_fu_974_p2 when (cmp12(0) = '1') else 
        sext_ln541_15_fu_971_p1;
    mul_ln128_15_fu_986_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_16_fu_1011_p0 <= 
        shl_ln126_16_fu_999_p2 when (cmp12(0) = '1') else 
        sext_ln541_16_fu_996_p1;
    mul_ln128_16_fu_1011_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_17_fu_1036_p0 <= 
        shl_ln126_17_fu_1024_p2 when (cmp12(0) = '1') else 
        sext_ln541_17_fu_1021_p1;
    mul_ln128_17_fu_1036_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_18_fu_1061_p0 <= 
        shl_ln126_18_fu_1049_p2 when (cmp12(0) = '1') else 
        sext_ln541_18_fu_1046_p1;
    mul_ln128_18_fu_1061_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_19_fu_1086_p0 <= 
        shl_ln126_19_fu_1074_p2 when (cmp12(0) = '1') else 
        sext_ln541_19_fu_1071_p1;
    mul_ln128_19_fu_1086_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_1_fu_636_p0 <= 
        shl_ln126_1_fu_624_p2 when (cmp12(0) = '1') else 
        sext_ln541_1_fu_621_p1;
    mul_ln128_1_fu_636_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_20_fu_1111_p0 <= 
        shl_ln126_20_fu_1099_p2 when (cmp12(0) = '1') else 
        sext_ln541_20_fu_1096_p1;
    mul_ln128_20_fu_1111_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_21_fu_1136_p0 <= 
        shl_ln126_21_fu_1124_p2 when (cmp12(0) = '1') else 
        sext_ln541_21_fu_1121_p1;
    mul_ln128_21_fu_1136_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_22_fu_1161_p0 <= 
        shl_ln126_22_fu_1149_p2 when (cmp12(0) = '1') else 
        sext_ln541_22_fu_1146_p1;
    mul_ln128_22_fu_1161_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_23_fu_1186_p0 <= 
        shl_ln126_23_fu_1174_p2 when (cmp12(0) = '1') else 
        sext_ln541_23_fu_1171_p1;
    mul_ln128_23_fu_1186_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_24_fu_1211_p0 <= 
        shl_ln126_24_fu_1199_p2 when (cmp12(0) = '1') else 
        sext_ln541_24_fu_1196_p1;
    mul_ln128_24_fu_1211_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_25_fu_1236_p0 <= 
        shl_ln126_25_fu_1224_p2 when (cmp12(0) = '1') else 
        sext_ln541_25_fu_1221_p1;
    mul_ln128_25_fu_1236_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_26_fu_1261_p0 <= 
        shl_ln126_26_fu_1249_p2 when (cmp12(0) = '1') else 
        sext_ln541_26_fu_1246_p1;
    mul_ln128_26_fu_1261_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_27_fu_1286_p0 <= 
        shl_ln126_27_fu_1274_p2 when (cmp12(0) = '1') else 
        sext_ln541_27_fu_1271_p1;
    mul_ln128_27_fu_1286_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_28_fu_1311_p0 <= 
        shl_ln126_28_fu_1299_p2 when (cmp12(0) = '1') else 
        sext_ln541_28_fu_1296_p1;
    mul_ln128_28_fu_1311_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_29_fu_1336_p0 <= 
        shl_ln126_29_fu_1324_p2 when (cmp12(0) = '1') else 
        sext_ln541_29_fu_1321_p1;
    mul_ln128_29_fu_1336_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_2_fu_661_p0 <= 
        shl_ln126_2_fu_649_p2 when (cmp12(0) = '1') else 
        sext_ln541_2_fu_646_p1;
    mul_ln128_2_fu_661_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_30_fu_1361_p0 <= 
        shl_ln126_30_fu_1349_p2 when (cmp12(0) = '1') else 
        sext_ln541_30_fu_1346_p1;
    mul_ln128_30_fu_1361_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_31_fu_1386_p0 <= 
        shl_ln126_31_fu_1374_p2 when (cmp12(0) = '1') else 
        sext_ln541_31_fu_1371_p1;
    mul_ln128_31_fu_1386_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_3_fu_686_p0 <= 
        shl_ln126_3_fu_674_p2 when (cmp12(0) = '1') else 
        sext_ln541_3_fu_671_p1;
    mul_ln128_3_fu_686_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_4_fu_711_p0 <= 
        shl_ln126_4_fu_699_p2 when (cmp12(0) = '1') else 
        sext_ln541_4_fu_696_p1;
    mul_ln128_4_fu_711_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_5_fu_736_p0 <= 
        shl_ln126_5_fu_724_p2 when (cmp12(0) = '1') else 
        sext_ln541_5_fu_721_p1;
    mul_ln128_5_fu_736_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_6_fu_761_p0 <= 
        shl_ln126_6_fu_749_p2 when (cmp12(0) = '1') else 
        sext_ln541_6_fu_746_p1;
    mul_ln128_6_fu_761_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_7_fu_786_p0 <= 
        shl_ln126_7_fu_774_p2 when (cmp12(0) = '1') else 
        sext_ln541_7_fu_771_p1;
    mul_ln128_7_fu_786_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_8_fu_811_p0 <= 
        shl_ln126_8_fu_799_p2 when (cmp12(0) = '1') else 
        sext_ln541_8_fu_796_p1;
    mul_ln128_8_fu_811_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_9_fu_836_p0 <= 
        shl_ln126_9_fu_824_p2 when (cmp12(0) = '1') else 
        sext_ln541_9_fu_821_p1;
    mul_ln128_9_fu_836_p1 <= conv_cast_reg_3180(32 - 1 downto 0);
    mul_ln128_fu_611_p0 <= 
        shl_ln126_fu_599_p2 when (cmp12(0) = '1') else 
        sext_ln541_fu_596_p1;
    mul_ln128_fu_611_p1 <= conv_cast_reg_3180(32 - 1 downto 0);

    quant_out2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, quant_out2_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            quant_out2_blk_n <= quant_out2_full_n;
        else 
            quant_out2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    quant_out2_din <= (((((((((((((((((((((((((((((((select_ln216_31_fu_2988_p3 & select_ln216_30_fu_2938_p3) & select_ln216_29_fu_2888_p3) & select_ln216_28_fu_2838_p3) & select_ln216_27_fu_2788_p3) & select_ln216_26_fu_2738_p3) & select_ln216_25_fu_2688_p3) & select_ln216_24_fu_2638_p3) & select_ln216_23_fu_2588_p3) & select_ln216_22_fu_2538_p3) & select_ln216_21_fu_2488_p3) & select_ln216_20_fu_2438_p3) & select_ln216_19_fu_2388_p3) & select_ln216_18_fu_2338_p3) & select_ln216_17_fu_2288_p3) & select_ln216_16_fu_2238_p3) & select_ln216_15_fu_2188_p3) & select_ln216_14_fu_2138_p3) & select_ln216_13_fu_2088_p3) & select_ln216_12_fu_2038_p3) & select_ln216_11_fu_1988_p3) & select_ln216_10_fu_1938_p3) & select_ln216_9_fu_1888_p3) & select_ln216_8_fu_1838_p3) & select_ln216_7_fu_1788_p3) & select_ln216_6_fu_1738_p3) & select_ln216_5_fu_1688_p3) & select_ln216_4_fu_1638_p3) & select_ln216_3_fu_1588_p3) & select_ln216_2_fu_1538_p3) & select_ln216_1_fu_1488_p3) & select_ln216_fu_1438_p3);

    quant_out2_write_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            quant_out2_write <= ap_const_logic_1;
        else 
            quant_out2_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln134_10_fu_1920_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_10_fu_1914_p2(0) = '1') else 
        trunc_ln134_10_fu_1900_p1;
    select_ln134_11_fu_1970_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_11_fu_1964_p2(0) = '1') else 
        trunc_ln134_11_fu_1950_p1;
    select_ln134_12_fu_2020_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_12_fu_2014_p2(0) = '1') else 
        trunc_ln134_12_fu_2000_p1;
    select_ln134_13_fu_2070_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_13_fu_2064_p2(0) = '1') else 
        trunc_ln134_13_fu_2050_p1;
    select_ln134_14_fu_2120_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_14_fu_2114_p2(0) = '1') else 
        trunc_ln134_14_fu_2100_p1;
    select_ln134_15_fu_2170_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_15_fu_2164_p2(0) = '1') else 
        trunc_ln134_15_fu_2150_p1;
    select_ln134_16_fu_2220_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_16_fu_2214_p2(0) = '1') else 
        trunc_ln134_16_fu_2200_p1;
    select_ln134_17_fu_2270_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_17_fu_2264_p2(0) = '1') else 
        trunc_ln134_17_fu_2250_p1;
    select_ln134_18_fu_2320_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_18_fu_2314_p2(0) = '1') else 
        trunc_ln134_18_fu_2300_p1;
    select_ln134_19_fu_2370_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_19_fu_2364_p2(0) = '1') else 
        trunc_ln134_19_fu_2350_p1;
    select_ln134_1_fu_1470_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_1_fu_1464_p2(0) = '1') else 
        trunc_ln134_1_fu_1450_p1;
    select_ln134_20_fu_2420_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_20_fu_2414_p2(0) = '1') else 
        trunc_ln134_20_fu_2400_p1;
    select_ln134_21_fu_2470_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_21_fu_2464_p2(0) = '1') else 
        trunc_ln134_21_fu_2450_p1;
    select_ln134_22_fu_2520_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_22_fu_2514_p2(0) = '1') else 
        trunc_ln134_22_fu_2500_p1;
    select_ln134_23_fu_2570_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_23_fu_2564_p2(0) = '1') else 
        trunc_ln134_23_fu_2550_p1;
    select_ln134_24_fu_2620_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_24_fu_2614_p2(0) = '1') else 
        trunc_ln134_24_fu_2600_p1;
    select_ln134_25_fu_2670_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_25_fu_2664_p2(0) = '1') else 
        trunc_ln134_25_fu_2650_p1;
    select_ln134_26_fu_2720_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_26_fu_2714_p2(0) = '1') else 
        trunc_ln134_26_fu_2700_p1;
    select_ln134_27_fu_2770_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_27_fu_2764_p2(0) = '1') else 
        trunc_ln134_27_fu_2750_p1;
    select_ln134_28_fu_2820_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_28_fu_2814_p2(0) = '1') else 
        trunc_ln134_28_fu_2800_p1;
    select_ln134_29_fu_2870_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_29_fu_2864_p2(0) = '1') else 
        trunc_ln134_29_fu_2850_p1;
    select_ln134_2_fu_1520_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_2_fu_1514_p2(0) = '1') else 
        trunc_ln134_2_fu_1500_p1;
    select_ln134_30_fu_2920_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_30_fu_2914_p2(0) = '1') else 
        trunc_ln134_30_fu_2900_p1;
    select_ln134_31_fu_2970_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_31_fu_2964_p2(0) = '1') else 
        trunc_ln134_31_fu_2950_p1;
    select_ln134_3_fu_1570_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_3_fu_1564_p2(0) = '1') else 
        trunc_ln134_3_fu_1550_p1;
    select_ln134_4_fu_1620_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_4_fu_1614_p2(0) = '1') else 
        trunc_ln134_4_fu_1600_p1;
    select_ln134_5_fu_1670_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_5_fu_1664_p2(0) = '1') else 
        trunc_ln134_5_fu_1650_p1;
    select_ln134_6_fu_1720_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_6_fu_1714_p2(0) = '1') else 
        trunc_ln134_6_fu_1700_p1;
    select_ln134_7_fu_1770_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_7_fu_1764_p2(0) = '1') else 
        trunc_ln134_7_fu_1750_p1;
    select_ln134_8_fu_1820_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_8_fu_1814_p2(0) = '1') else 
        trunc_ln134_8_fu_1800_p1;
    select_ln134_9_fu_1870_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_9_fu_1864_p2(0) = '1') else 
        trunc_ln134_9_fu_1850_p1;
    select_ln134_fu_1420_p3 <= 
        ap_const_lv33_7F when (icmp_ln134_fu_1414_p2(0) = '1') else 
        trunc_ln134_fu_1400_p1;
    select_ln216_10_fu_1938_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_10_fu_1928_p2(0) = '1') else 
        trunc_ln216_10_fu_1934_p1;
    select_ln216_11_fu_1988_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_11_fu_1978_p2(0) = '1') else 
        trunc_ln216_11_fu_1984_p1;
    select_ln216_12_fu_2038_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_12_fu_2028_p2(0) = '1') else 
        trunc_ln216_12_fu_2034_p1;
    select_ln216_13_fu_2088_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_13_fu_2078_p2(0) = '1') else 
        trunc_ln216_13_fu_2084_p1;
    select_ln216_14_fu_2138_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_14_fu_2128_p2(0) = '1') else 
        trunc_ln216_14_fu_2134_p1;
    select_ln216_15_fu_2188_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_15_fu_2178_p2(0) = '1') else 
        trunc_ln216_15_fu_2184_p1;
    select_ln216_16_fu_2238_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_16_fu_2228_p2(0) = '1') else 
        trunc_ln216_16_fu_2234_p1;
    select_ln216_17_fu_2288_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_17_fu_2278_p2(0) = '1') else 
        trunc_ln216_17_fu_2284_p1;
    select_ln216_18_fu_2338_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_18_fu_2328_p2(0) = '1') else 
        trunc_ln216_18_fu_2334_p1;
    select_ln216_19_fu_2388_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_19_fu_2378_p2(0) = '1') else 
        trunc_ln216_19_fu_2384_p1;
    select_ln216_1_fu_1488_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_1_fu_1478_p2(0) = '1') else 
        trunc_ln216_1_fu_1484_p1;
    select_ln216_20_fu_2438_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_20_fu_2428_p2(0) = '1') else 
        trunc_ln216_20_fu_2434_p1;
    select_ln216_21_fu_2488_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_21_fu_2478_p2(0) = '1') else 
        trunc_ln216_21_fu_2484_p1;
    select_ln216_22_fu_2538_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_22_fu_2528_p2(0) = '1') else 
        trunc_ln216_22_fu_2534_p1;
    select_ln216_23_fu_2588_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_23_fu_2578_p2(0) = '1') else 
        trunc_ln216_23_fu_2584_p1;
    select_ln216_24_fu_2638_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_24_fu_2628_p2(0) = '1') else 
        trunc_ln216_24_fu_2634_p1;
    select_ln216_25_fu_2688_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_25_fu_2678_p2(0) = '1') else 
        trunc_ln216_25_fu_2684_p1;
    select_ln216_26_fu_2738_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_26_fu_2728_p2(0) = '1') else 
        trunc_ln216_26_fu_2734_p1;
    select_ln216_27_fu_2788_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_27_fu_2778_p2(0) = '1') else 
        trunc_ln216_27_fu_2784_p1;
    select_ln216_28_fu_2838_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_28_fu_2828_p2(0) = '1') else 
        trunc_ln216_28_fu_2834_p1;
    select_ln216_29_fu_2888_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_29_fu_2878_p2(0) = '1') else 
        trunc_ln216_29_fu_2884_p1;
    select_ln216_2_fu_1538_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_2_fu_1528_p2(0) = '1') else 
        trunc_ln216_2_fu_1534_p1;
    select_ln216_30_fu_2938_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_30_fu_2928_p2(0) = '1') else 
        trunc_ln216_30_fu_2934_p1;
    select_ln216_31_fu_2988_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_31_fu_2978_p2(0) = '1') else 
        trunc_ln216_31_fu_2984_p1;
    select_ln216_3_fu_1588_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_3_fu_1578_p2(0) = '1') else 
        trunc_ln216_3_fu_1584_p1;
    select_ln216_4_fu_1638_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_4_fu_1628_p2(0) = '1') else 
        trunc_ln216_4_fu_1634_p1;
    select_ln216_5_fu_1688_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_5_fu_1678_p2(0) = '1') else 
        trunc_ln216_5_fu_1684_p1;
    select_ln216_6_fu_1738_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_6_fu_1728_p2(0) = '1') else 
        trunc_ln216_6_fu_1734_p1;
    select_ln216_7_fu_1788_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_7_fu_1778_p2(0) = '1') else 
        trunc_ln216_7_fu_1784_p1;
    select_ln216_8_fu_1838_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_8_fu_1828_p2(0) = '1') else 
        trunc_ln216_8_fu_1834_p1;
    select_ln216_9_fu_1888_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_9_fu_1878_p2(0) = '1') else 
        trunc_ln216_9_fu_1884_p1;
    select_ln216_fu_1438_p3 <= 
        ap_const_lv8_80 when (icmp_ln135_fu_1428_p2(0) = '1') else 
        trunc_ln216_fu_1434_p1;
        sext_ln541_10_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_10_reg_3306),64));

        sext_ln541_11_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_11_reg_3311),64));

        sext_ln541_12_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_12_reg_3316),64));

        sext_ln541_13_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_13_reg_3321),64));

        sext_ln541_14_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_14_reg_3326),64));

        sext_ln541_15_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_15_reg_3331),64));

        sext_ln541_16_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_16_reg_3336),64));

        sext_ln541_17_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_17_reg_3341),64));

        sext_ln541_18_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_18_reg_3346),64));

        sext_ln541_19_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_19_reg_3351),64));

        sext_ln541_1_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_1_reg_3261),64));

        sext_ln541_20_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_20_reg_3356),64));

        sext_ln541_21_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_21_reg_3361),64));

        sext_ln541_22_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_22_reg_3366),64));

        sext_ln541_23_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_23_reg_3371),64));

        sext_ln541_24_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_24_reg_3376),64));

        sext_ln541_25_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_25_reg_3381),64));

        sext_ln541_26_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_26_reg_3386),64));

        sext_ln541_27_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_27_reg_3391),64));

        sext_ln541_28_fu_1296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_28_reg_3396),64));

        sext_ln541_29_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_29_reg_3401),64));

        sext_ln541_2_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_2_reg_3266),64));

        sext_ln541_30_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_30_reg_3406),64));

        sext_ln541_31_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_31_reg_3411),64));

        sext_ln541_3_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_3_reg_3271),64));

        sext_ln541_4_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_4_reg_3276),64));

        sext_ln541_5_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_5_reg_3281),64));

        sext_ln541_6_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_6_reg_3286),64));

        sext_ln541_7_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_7_reg_3291),64));

        sext_ln541_8_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_8_reg_3296),64));

        sext_ln541_9_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_9_reg_3301),64));

        sext_ln541_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_reg_3256),64));

    sh_prom18_cast_fu_245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom18),64));
    sh_prom_cast_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom),64));
    shl_ln126_10_fu_849_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_10_fu_846_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_11_fu_874_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_11_fu_871_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_12_fu_899_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_12_fu_896_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_13_fu_924_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_13_fu_921_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_14_fu_949_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_14_fu_946_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_15_fu_974_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_15_fu_971_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_16_fu_999_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_16_fu_996_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_17_fu_1024_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_17_fu_1021_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_18_fu_1049_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_18_fu_1046_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_19_fu_1074_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_19_fu_1071_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_1_fu_624_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_1_fu_621_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_20_fu_1099_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_20_fu_1096_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_21_fu_1124_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_21_fu_1121_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_22_fu_1149_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_22_fu_1146_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_23_fu_1174_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_23_fu_1171_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_24_fu_1199_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_24_fu_1196_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_25_fu_1224_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_25_fu_1221_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_26_fu_1249_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_26_fu_1246_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_27_fu_1274_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_27_fu_1271_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_28_fu_1299_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_28_fu_1296_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_29_fu_1324_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_29_fu_1321_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_2_fu_649_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_2_fu_646_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_30_fu_1349_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_30_fu_1346_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_31_fu_1374_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_31_fu_1371_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_3_fu_674_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_3_fu_671_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_4_fu_699_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_4_fu_696_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_5_fu_724_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_5_fu_721_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_6_fu_749_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_6_fu_746_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_7_fu_774_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_7_fu_771_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_8_fu_799_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_8_fu_796_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_9_fu_824_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_9_fu_821_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    shl_ln126_fu_599_p2 <= std_logic_vector(shift_left(unsigned(sext_ln541_fu_596_p1),to_integer(unsigned('0' & sh_prom_cast_reg_3216(31-1 downto 0)))));
    tmp_10_fu_1904_p4 <= ashr_ln132_10_fu_1896_p2(32 downto 7);
    tmp_11_fu_1954_p4 <= ashr_ln132_11_fu_1946_p2(32 downto 7);
    tmp_12_fu_2004_p4 <= ashr_ln132_12_fu_1996_p2(32 downto 7);
    tmp_13_fu_2054_p4 <= ashr_ln132_13_fu_2046_p2(32 downto 7);
    tmp_14_fu_2104_p4 <= ashr_ln132_14_fu_2096_p2(32 downto 7);
    tmp_15_fu_2154_p4 <= ashr_ln132_15_fu_2146_p2(32 downto 7);
    tmp_16_fu_2204_p4 <= ashr_ln132_16_fu_2196_p2(32 downto 7);
    tmp_17_fu_2254_p4 <= ashr_ln132_17_fu_2246_p2(32 downto 7);
    tmp_18_fu_2304_p4 <= ashr_ln132_18_fu_2296_p2(32 downto 7);
    tmp_19_fu_2354_p4 <= ashr_ln132_19_fu_2346_p2(32 downto 7);
    tmp_1_fu_1454_p4 <= ashr_ln132_1_fu_1446_p2(32 downto 7);
    tmp_20_fu_2404_p4 <= ashr_ln132_20_fu_2396_p2(32 downto 7);
    tmp_21_fu_2454_p4 <= ashr_ln132_21_fu_2446_p2(32 downto 7);
    tmp_22_fu_2504_p4 <= ashr_ln132_22_fu_2496_p2(32 downto 7);
    tmp_23_fu_2554_p4 <= ashr_ln132_23_fu_2546_p2(32 downto 7);
    tmp_24_fu_2604_p4 <= ashr_ln132_24_fu_2596_p2(32 downto 7);
    tmp_25_fu_2654_p4 <= ashr_ln132_25_fu_2646_p2(32 downto 7);
    tmp_26_fu_2704_p4 <= ashr_ln132_26_fu_2696_p2(32 downto 7);
    tmp_27_fu_2754_p4 <= ashr_ln132_27_fu_2746_p2(32 downto 7);
    tmp_28_fu_2804_p4 <= ashr_ln132_28_fu_2796_p2(32 downto 7);
    tmp_29_fu_2854_p4 <= ashr_ln132_29_fu_2846_p2(32 downto 7);
    tmp_2_fu_1504_p4 <= ashr_ln132_2_fu_1496_p2(32 downto 7);
    tmp_30_fu_2904_p4 <= ashr_ln132_30_fu_2896_p2(32 downto 7);
    tmp_31_fu_2954_p4 <= ashr_ln132_31_fu_2946_p2(32 downto 7);
    tmp_3_fu_1554_p4 <= ashr_ln132_3_fu_1546_p2(32 downto 7);
    tmp_4_fu_1604_p4 <= ashr_ln132_4_fu_1596_p2(32 downto 7);
    tmp_5_fu_1654_p4 <= ashr_ln132_5_fu_1646_p2(32 downto 7);
    tmp_6_fu_1704_p4 <= ashr_ln132_6_fu_1696_p2(32 downto 7);
    tmp_7_fu_1754_p4 <= ashr_ln132_7_fu_1746_p2(32 downto 7);
    tmp_8_fu_1804_p4 <= ashr_ln132_8_fu_1796_p2(32 downto 7);
    tmp_9_fu_1854_p4 <= ashr_ln132_9_fu_1846_p2(32 downto 7);
    tmp_fu_1404_p4 <= ashr_ln132_fu_1396_p2(32 downto 7);
    trunc_ln134_10_fu_1900_p1 <= ashr_ln132_10_fu_1896_p2(33 - 1 downto 0);
    trunc_ln134_11_fu_1950_p1 <= ashr_ln132_11_fu_1946_p2(33 - 1 downto 0);
    trunc_ln134_12_fu_2000_p1 <= ashr_ln132_12_fu_1996_p2(33 - 1 downto 0);
    trunc_ln134_13_fu_2050_p1 <= ashr_ln132_13_fu_2046_p2(33 - 1 downto 0);
    trunc_ln134_14_fu_2100_p1 <= ashr_ln132_14_fu_2096_p2(33 - 1 downto 0);
    trunc_ln134_15_fu_2150_p1 <= ashr_ln132_15_fu_2146_p2(33 - 1 downto 0);
    trunc_ln134_16_fu_2200_p1 <= ashr_ln132_16_fu_2196_p2(33 - 1 downto 0);
    trunc_ln134_17_fu_2250_p1 <= ashr_ln132_17_fu_2246_p2(33 - 1 downto 0);
    trunc_ln134_18_fu_2300_p1 <= ashr_ln132_18_fu_2296_p2(33 - 1 downto 0);
    trunc_ln134_19_fu_2350_p1 <= ashr_ln132_19_fu_2346_p2(33 - 1 downto 0);
    trunc_ln134_1_fu_1450_p1 <= ashr_ln132_1_fu_1446_p2(33 - 1 downto 0);
    trunc_ln134_20_fu_2400_p1 <= ashr_ln132_20_fu_2396_p2(33 - 1 downto 0);
    trunc_ln134_21_fu_2450_p1 <= ashr_ln132_21_fu_2446_p2(33 - 1 downto 0);
    trunc_ln134_22_fu_2500_p1 <= ashr_ln132_22_fu_2496_p2(33 - 1 downto 0);
    trunc_ln134_23_fu_2550_p1 <= ashr_ln132_23_fu_2546_p2(33 - 1 downto 0);
    trunc_ln134_24_fu_2600_p1 <= ashr_ln132_24_fu_2596_p2(33 - 1 downto 0);
    trunc_ln134_25_fu_2650_p1 <= ashr_ln132_25_fu_2646_p2(33 - 1 downto 0);
    trunc_ln134_26_fu_2700_p1 <= ashr_ln132_26_fu_2696_p2(33 - 1 downto 0);
    trunc_ln134_27_fu_2750_p1 <= ashr_ln132_27_fu_2746_p2(33 - 1 downto 0);
    trunc_ln134_28_fu_2800_p1 <= ashr_ln132_28_fu_2796_p2(33 - 1 downto 0);
    trunc_ln134_29_fu_2850_p1 <= ashr_ln132_29_fu_2846_p2(33 - 1 downto 0);
    trunc_ln134_2_fu_1500_p1 <= ashr_ln132_2_fu_1496_p2(33 - 1 downto 0);
    trunc_ln134_30_fu_2900_p1 <= ashr_ln132_30_fu_2896_p2(33 - 1 downto 0);
    trunc_ln134_31_fu_2950_p1 <= ashr_ln132_31_fu_2946_p2(33 - 1 downto 0);
    trunc_ln134_3_fu_1550_p1 <= ashr_ln132_3_fu_1546_p2(33 - 1 downto 0);
    trunc_ln134_4_fu_1600_p1 <= ashr_ln132_4_fu_1596_p2(33 - 1 downto 0);
    trunc_ln134_5_fu_1650_p1 <= ashr_ln132_5_fu_1646_p2(33 - 1 downto 0);
    trunc_ln134_6_fu_1700_p1 <= ashr_ln132_6_fu_1696_p2(33 - 1 downto 0);
    trunc_ln134_7_fu_1750_p1 <= ashr_ln132_7_fu_1746_p2(33 - 1 downto 0);
    trunc_ln134_8_fu_1800_p1 <= ashr_ln132_8_fu_1796_p2(33 - 1 downto 0);
    trunc_ln134_9_fu_1850_p1 <= ashr_ln132_9_fu_1846_p2(33 - 1 downto 0);
    trunc_ln134_fu_1400_p1 <= ashr_ln132_fu_1396_p2(33 - 1 downto 0);
    trunc_ln216_10_fu_1934_p1 <= select_ln134_10_fu_1920_p3(8 - 1 downto 0);
    trunc_ln216_11_fu_1984_p1 <= select_ln134_11_fu_1970_p3(8 - 1 downto 0);
    trunc_ln216_12_fu_2034_p1 <= select_ln134_12_fu_2020_p3(8 - 1 downto 0);
    trunc_ln216_13_fu_2084_p1 <= select_ln134_13_fu_2070_p3(8 - 1 downto 0);
    trunc_ln216_14_fu_2134_p1 <= select_ln134_14_fu_2120_p3(8 - 1 downto 0);
    trunc_ln216_15_fu_2184_p1 <= select_ln134_15_fu_2170_p3(8 - 1 downto 0);
    trunc_ln216_16_fu_2234_p1 <= select_ln134_16_fu_2220_p3(8 - 1 downto 0);
    trunc_ln216_17_fu_2284_p1 <= select_ln134_17_fu_2270_p3(8 - 1 downto 0);
    trunc_ln216_18_fu_2334_p1 <= select_ln134_18_fu_2320_p3(8 - 1 downto 0);
    trunc_ln216_19_fu_2384_p1 <= select_ln134_19_fu_2370_p3(8 - 1 downto 0);
    trunc_ln216_1_fu_1484_p1 <= select_ln134_1_fu_1470_p3(8 - 1 downto 0);
    trunc_ln216_20_fu_2434_p1 <= select_ln134_20_fu_2420_p3(8 - 1 downto 0);
    trunc_ln216_21_fu_2484_p1 <= select_ln134_21_fu_2470_p3(8 - 1 downto 0);
    trunc_ln216_22_fu_2534_p1 <= select_ln134_22_fu_2520_p3(8 - 1 downto 0);
    trunc_ln216_23_fu_2584_p1 <= select_ln134_23_fu_2570_p3(8 - 1 downto 0);
    trunc_ln216_24_fu_2634_p1 <= select_ln134_24_fu_2620_p3(8 - 1 downto 0);
    trunc_ln216_25_fu_2684_p1 <= select_ln134_25_fu_2670_p3(8 - 1 downto 0);
    trunc_ln216_26_fu_2734_p1 <= select_ln134_26_fu_2720_p3(8 - 1 downto 0);
    trunc_ln216_27_fu_2784_p1 <= select_ln134_27_fu_2770_p3(8 - 1 downto 0);
    trunc_ln216_28_fu_2834_p1 <= select_ln134_28_fu_2820_p3(8 - 1 downto 0);
    trunc_ln216_29_fu_2884_p1 <= select_ln134_29_fu_2870_p3(8 - 1 downto 0);
    trunc_ln216_2_fu_1534_p1 <= select_ln134_2_fu_1520_p3(8 - 1 downto 0);
    trunc_ln216_30_fu_2934_p1 <= select_ln134_30_fu_2920_p3(8 - 1 downto 0);
    trunc_ln216_31_fu_2984_p1 <= select_ln134_31_fu_2970_p3(8 - 1 downto 0);
    trunc_ln216_3_fu_1584_p1 <= select_ln134_3_fu_1570_p3(8 - 1 downto 0);
    trunc_ln216_4_fu_1634_p1 <= select_ln134_4_fu_1620_p3(8 - 1 downto 0);
    trunc_ln216_5_fu_1684_p1 <= select_ln134_5_fu_1670_p3(8 - 1 downto 0);
    trunc_ln216_6_fu_1734_p1 <= select_ln134_6_fu_1720_p3(8 - 1 downto 0);
    trunc_ln216_7_fu_1784_p1 <= select_ln134_7_fu_1770_p3(8 - 1 downto 0);
    trunc_ln216_8_fu_1834_p1 <= select_ln134_8_fu_1820_p3(8 - 1 downto 0);
    trunc_ln216_9_fu_1884_p1 <= select_ln134_9_fu_1870_p3(8 - 1 downto 0);
    trunc_ln216_fu_1434_p1 <= select_ln134_fu_1420_p3(8 - 1 downto 0);
end behav;
