// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sparse_quant_ap_uint_256_ap_int_32_ap_int_8_32u_Pipeline_VITIS_LOOP_113_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_out1_dout,
        data_out1_num_data_valid,
        data_out1_fifo_cap,
        data_out1_empty_n,
        data_out1_read,
        quant_out2_din,
        quant_out2_num_data_valid,
        quant_out2_fifo_cap,
        quant_out2_full_n,
        quant_out2_write,
        div_cast,
        sh_prom,
        cmp12,
        conv,
        pos_rounding_value,
        sh_prom18
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1023:0] data_out1_dout;
input  [6:0] data_out1_num_data_valid;
input  [6:0] data_out1_fifo_cap;
input   data_out1_empty_n;
output   data_out1_read;
output  [255:0] quant_out2_din;
input  [1:0] quant_out2_num_data_valid;
input  [1:0] quant_out2_fifo_cap;
input   quant_out2_full_n;
output   quant_out2_write;
input  [26:0] div_cast;
input  [31:0] sh_prom;
input  [0:0] cmp12;
input  [31:0] conv;
input  [63:0] pos_rounding_value;
input  [31:0] sh_prom18;

reg ap_idle;
reg data_out1_read;
reg quant_out2_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln113_fu_265_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    data_out1_blk_n;
wire    ap_block_pp0_stage0;
reg    quant_out2_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] sh_prom18_cast_fu_245_p1;
reg   [63:0] sh_prom18_cast_reg_3144;
wire  signed [63:0] conv_cast_fu_249_p1;
reg  signed [63:0] conv_cast_reg_3180;
wire   [63:0] sh_prom_cast_fu_253_p1;
reg   [63:0] sh_prom_cast_reg_3216;
wire   [31:0] l_val_V_fu_282_p1;
reg   [31:0] l_val_V_reg_3256;
reg   [31:0] l_val_V_1_reg_3261;
reg   [31:0] l_val_V_2_reg_3266;
reg   [31:0] l_val_V_3_reg_3271;
reg   [31:0] l_val_V_4_reg_3276;
reg   [31:0] l_val_V_5_reg_3281;
reg   [31:0] l_val_V_6_reg_3286;
reg   [31:0] l_val_V_7_reg_3291;
reg   [31:0] l_val_V_8_reg_3296;
reg   [31:0] l_val_V_9_reg_3301;
reg   [31:0] l_val_V_10_reg_3306;
reg   [31:0] l_val_V_11_reg_3311;
reg   [31:0] l_val_V_12_reg_3316;
reg   [31:0] l_val_V_13_reg_3321;
reg   [31:0] l_val_V_14_reg_3326;
reg   [31:0] l_val_V_15_reg_3331;
reg   [31:0] l_val_V_16_reg_3336;
reg   [31:0] l_val_V_17_reg_3341;
reg   [31:0] l_val_V_18_reg_3346;
reg   [31:0] l_val_V_19_reg_3351;
reg   [31:0] l_val_V_20_reg_3356;
reg   [31:0] l_val_V_21_reg_3361;
reg   [31:0] l_val_V_22_reg_3366;
reg   [31:0] l_val_V_23_reg_3371;
reg   [31:0] l_val_V_24_reg_3376;
reg   [31:0] l_val_V_25_reg_3381;
reg   [31:0] l_val_V_26_reg_3386;
reg   [31:0] l_val_V_27_reg_3391;
reg   [31:0] l_val_V_28_reg_3396;
reg   [31:0] l_val_V_29_reg_3401;
reg   [31:0] l_val_V_30_reg_3406;
reg   [31:0] l_val_V_31_reg_3411;
wire   [63:0] add_ln126_fu_616_p2;
reg   [63:0] add_ln126_reg_3416;
wire   [63:0] add_ln126_1_fu_641_p2;
reg   [63:0] add_ln126_1_reg_3421;
wire   [63:0] add_ln126_2_fu_666_p2;
reg   [63:0] add_ln126_2_reg_3426;
wire   [63:0] add_ln126_3_fu_691_p2;
reg   [63:0] add_ln126_3_reg_3431;
wire   [63:0] add_ln126_4_fu_716_p2;
reg   [63:0] add_ln126_4_reg_3436;
wire   [63:0] add_ln126_5_fu_741_p2;
reg   [63:0] add_ln126_5_reg_3441;
wire   [63:0] add_ln126_6_fu_766_p2;
reg   [63:0] add_ln126_6_reg_3446;
wire   [63:0] add_ln126_7_fu_791_p2;
reg   [63:0] add_ln126_7_reg_3451;
wire   [63:0] add_ln126_8_fu_816_p2;
reg   [63:0] add_ln126_8_reg_3456;
wire   [63:0] add_ln126_9_fu_841_p2;
reg   [63:0] add_ln126_9_reg_3461;
wire   [63:0] add_ln126_10_fu_866_p2;
reg   [63:0] add_ln126_10_reg_3466;
wire   [63:0] add_ln126_11_fu_891_p2;
reg   [63:0] add_ln126_11_reg_3471;
wire   [63:0] add_ln126_12_fu_916_p2;
reg   [63:0] add_ln126_12_reg_3476;
wire   [63:0] add_ln126_13_fu_941_p2;
reg   [63:0] add_ln126_13_reg_3481;
wire   [63:0] add_ln126_14_fu_966_p2;
reg   [63:0] add_ln126_14_reg_3486;
wire   [63:0] add_ln126_15_fu_991_p2;
reg   [63:0] add_ln126_15_reg_3491;
wire   [63:0] add_ln126_16_fu_1016_p2;
reg   [63:0] add_ln126_16_reg_3496;
wire   [63:0] add_ln126_17_fu_1041_p2;
reg   [63:0] add_ln126_17_reg_3501;
wire   [63:0] add_ln126_18_fu_1066_p2;
reg   [63:0] add_ln126_18_reg_3506;
wire   [63:0] add_ln126_19_fu_1091_p2;
reg   [63:0] add_ln126_19_reg_3511;
wire   [63:0] add_ln126_20_fu_1116_p2;
reg   [63:0] add_ln126_20_reg_3516;
wire   [63:0] add_ln126_21_fu_1141_p2;
reg   [63:0] add_ln126_21_reg_3521;
wire   [63:0] add_ln126_22_fu_1166_p2;
reg   [63:0] add_ln126_22_reg_3526;
wire   [63:0] add_ln126_23_fu_1191_p2;
reg   [63:0] add_ln126_23_reg_3531;
wire   [63:0] add_ln126_24_fu_1216_p2;
reg   [63:0] add_ln126_24_reg_3536;
wire   [63:0] add_ln126_25_fu_1241_p2;
reg   [63:0] add_ln126_25_reg_3541;
wire   [63:0] add_ln126_26_fu_1266_p2;
reg   [63:0] add_ln126_26_reg_3546;
wire   [63:0] add_ln126_27_fu_1291_p2;
reg   [63:0] add_ln126_27_reg_3551;
wire   [63:0] add_ln126_28_fu_1316_p2;
reg   [63:0] add_ln126_28_reg_3556;
wire   [63:0] add_ln126_29_fu_1341_p2;
reg   [63:0] add_ln126_29_reg_3561;
wire   [63:0] add_ln126_30_fu_1366_p2;
reg   [63:0] add_ln126_30_reg_3566;
wire   [63:0] add_ln126_31_fu_1391_p2;
reg   [63:0] add_ln126_31_reg_3571;
reg   [26:0] i_fu_192;
wire   [26:0] i_3_fu_271_p2;
wire    ap_loop_init;
reg   [26:0] ap_sig_allocacmp_i_2;
reg    ap_block_pp0_stage0_01001;
wire  signed [63:0] sext_ln541_fu_596_p1;
wire   [63:0] shl_ln121_fu_599_p2;
wire  signed [63:0] mul_ln123_fu_611_p0;
wire  signed [31:0] mul_ln123_fu_611_p1;
wire   [63:0] mul_ln123_fu_611_p2;
wire  signed [63:0] sext_ln541_1_fu_621_p1;
wire   [63:0] shl_ln121_1_fu_624_p2;
wire  signed [63:0] mul_ln123_1_fu_636_p0;
wire  signed [31:0] mul_ln123_1_fu_636_p1;
wire   [63:0] mul_ln123_1_fu_636_p2;
wire  signed [63:0] sext_ln541_2_fu_646_p1;
wire   [63:0] shl_ln121_2_fu_649_p2;
wire  signed [63:0] mul_ln123_2_fu_661_p0;
wire  signed [31:0] mul_ln123_2_fu_661_p1;
wire   [63:0] mul_ln123_2_fu_661_p2;
wire  signed [63:0] sext_ln541_3_fu_671_p1;
wire   [63:0] shl_ln121_3_fu_674_p2;
wire  signed [63:0] mul_ln123_3_fu_686_p0;
wire  signed [31:0] mul_ln123_3_fu_686_p1;
wire   [63:0] mul_ln123_3_fu_686_p2;
wire  signed [63:0] sext_ln541_4_fu_696_p1;
wire   [63:0] shl_ln121_4_fu_699_p2;
wire  signed [63:0] mul_ln123_4_fu_711_p0;
wire  signed [31:0] mul_ln123_4_fu_711_p1;
wire   [63:0] mul_ln123_4_fu_711_p2;
wire  signed [63:0] sext_ln541_5_fu_721_p1;
wire   [63:0] shl_ln121_5_fu_724_p2;
wire  signed [63:0] mul_ln123_5_fu_736_p0;
wire  signed [31:0] mul_ln123_5_fu_736_p1;
wire   [63:0] mul_ln123_5_fu_736_p2;
wire  signed [63:0] sext_ln541_6_fu_746_p1;
wire   [63:0] shl_ln121_6_fu_749_p2;
wire  signed [63:0] mul_ln123_6_fu_761_p0;
wire  signed [31:0] mul_ln123_6_fu_761_p1;
wire   [63:0] mul_ln123_6_fu_761_p2;
wire  signed [63:0] sext_ln541_7_fu_771_p1;
wire   [63:0] shl_ln121_7_fu_774_p2;
wire  signed [63:0] mul_ln123_7_fu_786_p0;
wire  signed [31:0] mul_ln123_7_fu_786_p1;
wire   [63:0] mul_ln123_7_fu_786_p2;
wire  signed [63:0] sext_ln541_8_fu_796_p1;
wire   [63:0] shl_ln121_8_fu_799_p2;
wire  signed [63:0] mul_ln123_8_fu_811_p0;
wire  signed [31:0] mul_ln123_8_fu_811_p1;
wire   [63:0] mul_ln123_8_fu_811_p2;
wire  signed [63:0] sext_ln541_9_fu_821_p1;
wire   [63:0] shl_ln121_9_fu_824_p2;
wire  signed [63:0] mul_ln123_9_fu_836_p0;
wire  signed [31:0] mul_ln123_9_fu_836_p1;
wire   [63:0] mul_ln123_9_fu_836_p2;
wire  signed [63:0] sext_ln541_10_fu_846_p1;
wire   [63:0] shl_ln121_10_fu_849_p2;
wire  signed [63:0] mul_ln123_10_fu_861_p0;
wire  signed [31:0] mul_ln123_10_fu_861_p1;
wire   [63:0] mul_ln123_10_fu_861_p2;
wire  signed [63:0] sext_ln541_11_fu_871_p1;
wire   [63:0] shl_ln121_11_fu_874_p2;
wire  signed [63:0] mul_ln123_11_fu_886_p0;
wire  signed [31:0] mul_ln123_11_fu_886_p1;
wire   [63:0] mul_ln123_11_fu_886_p2;
wire  signed [63:0] sext_ln541_12_fu_896_p1;
wire   [63:0] shl_ln121_12_fu_899_p2;
wire  signed [63:0] mul_ln123_12_fu_911_p0;
wire  signed [31:0] mul_ln123_12_fu_911_p1;
wire   [63:0] mul_ln123_12_fu_911_p2;
wire  signed [63:0] sext_ln541_13_fu_921_p1;
wire   [63:0] shl_ln121_13_fu_924_p2;
wire  signed [63:0] mul_ln123_13_fu_936_p0;
wire  signed [31:0] mul_ln123_13_fu_936_p1;
wire   [63:0] mul_ln123_13_fu_936_p2;
wire  signed [63:0] sext_ln541_14_fu_946_p1;
wire   [63:0] shl_ln121_14_fu_949_p2;
wire  signed [63:0] mul_ln123_14_fu_961_p0;
wire  signed [31:0] mul_ln123_14_fu_961_p1;
wire   [63:0] mul_ln123_14_fu_961_p2;
wire  signed [63:0] sext_ln541_15_fu_971_p1;
wire   [63:0] shl_ln121_15_fu_974_p2;
wire  signed [63:0] mul_ln123_15_fu_986_p0;
wire  signed [31:0] mul_ln123_15_fu_986_p1;
wire   [63:0] mul_ln123_15_fu_986_p2;
wire  signed [63:0] sext_ln541_16_fu_996_p1;
wire   [63:0] shl_ln121_16_fu_999_p2;
wire  signed [63:0] mul_ln123_16_fu_1011_p0;
wire  signed [31:0] mul_ln123_16_fu_1011_p1;
wire   [63:0] mul_ln123_16_fu_1011_p2;
wire  signed [63:0] sext_ln541_17_fu_1021_p1;
wire   [63:0] shl_ln121_17_fu_1024_p2;
wire  signed [63:0] mul_ln123_17_fu_1036_p0;
wire  signed [31:0] mul_ln123_17_fu_1036_p1;
wire   [63:0] mul_ln123_17_fu_1036_p2;
wire  signed [63:0] sext_ln541_18_fu_1046_p1;
wire   [63:0] shl_ln121_18_fu_1049_p2;
wire  signed [63:0] mul_ln123_18_fu_1061_p0;
wire  signed [31:0] mul_ln123_18_fu_1061_p1;
wire   [63:0] mul_ln123_18_fu_1061_p2;
wire  signed [63:0] sext_ln541_19_fu_1071_p1;
wire   [63:0] shl_ln121_19_fu_1074_p2;
wire  signed [63:0] mul_ln123_19_fu_1086_p0;
wire  signed [31:0] mul_ln123_19_fu_1086_p1;
wire   [63:0] mul_ln123_19_fu_1086_p2;
wire  signed [63:0] sext_ln541_20_fu_1096_p1;
wire   [63:0] shl_ln121_20_fu_1099_p2;
wire  signed [63:0] mul_ln123_20_fu_1111_p0;
wire  signed [31:0] mul_ln123_20_fu_1111_p1;
wire   [63:0] mul_ln123_20_fu_1111_p2;
wire  signed [63:0] sext_ln541_21_fu_1121_p1;
wire   [63:0] shl_ln121_21_fu_1124_p2;
wire  signed [63:0] mul_ln123_21_fu_1136_p0;
wire  signed [31:0] mul_ln123_21_fu_1136_p1;
wire   [63:0] mul_ln123_21_fu_1136_p2;
wire  signed [63:0] sext_ln541_22_fu_1146_p1;
wire   [63:0] shl_ln121_22_fu_1149_p2;
wire  signed [63:0] mul_ln123_22_fu_1161_p0;
wire  signed [31:0] mul_ln123_22_fu_1161_p1;
wire   [63:0] mul_ln123_22_fu_1161_p2;
wire  signed [63:0] sext_ln541_23_fu_1171_p1;
wire   [63:0] shl_ln121_23_fu_1174_p2;
wire  signed [63:0] mul_ln123_23_fu_1186_p0;
wire  signed [31:0] mul_ln123_23_fu_1186_p1;
wire   [63:0] mul_ln123_23_fu_1186_p2;
wire  signed [63:0] sext_ln541_24_fu_1196_p1;
wire   [63:0] shl_ln121_24_fu_1199_p2;
wire  signed [63:0] mul_ln123_24_fu_1211_p0;
wire  signed [31:0] mul_ln123_24_fu_1211_p1;
wire   [63:0] mul_ln123_24_fu_1211_p2;
wire  signed [63:0] sext_ln541_25_fu_1221_p1;
wire   [63:0] shl_ln121_25_fu_1224_p2;
wire  signed [63:0] mul_ln123_25_fu_1236_p0;
wire  signed [31:0] mul_ln123_25_fu_1236_p1;
wire   [63:0] mul_ln123_25_fu_1236_p2;
wire  signed [63:0] sext_ln541_26_fu_1246_p1;
wire   [63:0] shl_ln121_26_fu_1249_p2;
wire  signed [63:0] mul_ln123_26_fu_1261_p0;
wire  signed [31:0] mul_ln123_26_fu_1261_p1;
wire   [63:0] mul_ln123_26_fu_1261_p2;
wire  signed [63:0] sext_ln541_27_fu_1271_p1;
wire   [63:0] shl_ln121_27_fu_1274_p2;
wire  signed [63:0] mul_ln123_27_fu_1286_p0;
wire  signed [31:0] mul_ln123_27_fu_1286_p1;
wire   [63:0] mul_ln123_27_fu_1286_p2;
wire  signed [63:0] sext_ln541_28_fu_1296_p1;
wire   [63:0] shl_ln121_28_fu_1299_p2;
wire  signed [63:0] mul_ln123_28_fu_1311_p0;
wire  signed [31:0] mul_ln123_28_fu_1311_p1;
wire   [63:0] mul_ln123_28_fu_1311_p2;
wire  signed [63:0] sext_ln541_29_fu_1321_p1;
wire   [63:0] shl_ln121_29_fu_1324_p2;
wire  signed [63:0] mul_ln123_29_fu_1336_p0;
wire  signed [31:0] mul_ln123_29_fu_1336_p1;
wire   [63:0] mul_ln123_29_fu_1336_p2;
wire  signed [63:0] sext_ln541_30_fu_1346_p1;
wire   [63:0] shl_ln121_30_fu_1349_p2;
wire  signed [63:0] mul_ln123_30_fu_1361_p0;
wire  signed [31:0] mul_ln123_30_fu_1361_p1;
wire   [63:0] mul_ln123_30_fu_1361_p2;
wire  signed [63:0] sext_ln541_31_fu_1371_p1;
wire   [63:0] shl_ln121_31_fu_1374_p2;
wire  signed [63:0] mul_ln123_31_fu_1386_p0;
wire  signed [31:0] mul_ln123_31_fu_1386_p1;
wire   [63:0] mul_ln123_31_fu_1386_p2;
wire   [63:0] ashr_ln127_fu_1396_p2;
wire   [25:0] tmp_fu_1404_p4;
wire   [0:0] icmp_ln129_fu_1414_p2;
wire   [32:0] trunc_ln129_fu_1400_p1;
wire   [32:0] select_ln129_fu_1420_p3;
wire   [0:0] icmp_ln130_fu_1428_p2;
wire   [7:0] trunc_ln216_fu_1434_p1;
wire   [63:0] ashr_ln127_1_fu_1446_p2;
wire   [25:0] tmp_1_fu_1454_p4;
wire   [0:0] icmp_ln129_1_fu_1464_p2;
wire   [32:0] trunc_ln129_1_fu_1450_p1;
wire   [32:0] select_ln129_1_fu_1470_p3;
wire   [0:0] icmp_ln130_1_fu_1478_p2;
wire   [7:0] trunc_ln216_1_fu_1484_p1;
wire   [63:0] ashr_ln127_2_fu_1496_p2;
wire   [25:0] tmp_2_fu_1504_p4;
wire   [0:0] icmp_ln129_2_fu_1514_p2;
wire   [32:0] trunc_ln129_2_fu_1500_p1;
wire   [32:0] select_ln129_2_fu_1520_p3;
wire   [0:0] icmp_ln130_2_fu_1528_p2;
wire   [7:0] trunc_ln216_2_fu_1534_p1;
wire   [63:0] ashr_ln127_3_fu_1546_p2;
wire   [25:0] tmp_3_fu_1554_p4;
wire   [0:0] icmp_ln129_3_fu_1564_p2;
wire   [32:0] trunc_ln129_3_fu_1550_p1;
wire   [32:0] select_ln129_3_fu_1570_p3;
wire   [0:0] icmp_ln130_3_fu_1578_p2;
wire   [7:0] trunc_ln216_3_fu_1584_p1;
wire   [63:0] ashr_ln127_4_fu_1596_p2;
wire   [25:0] tmp_4_fu_1604_p4;
wire   [0:0] icmp_ln129_4_fu_1614_p2;
wire   [32:0] trunc_ln129_4_fu_1600_p1;
wire   [32:0] select_ln129_4_fu_1620_p3;
wire   [0:0] icmp_ln130_4_fu_1628_p2;
wire   [7:0] trunc_ln216_4_fu_1634_p1;
wire   [63:0] ashr_ln127_5_fu_1646_p2;
wire   [25:0] tmp_5_fu_1654_p4;
wire   [0:0] icmp_ln129_5_fu_1664_p2;
wire   [32:0] trunc_ln129_5_fu_1650_p1;
wire   [32:0] select_ln129_5_fu_1670_p3;
wire   [0:0] icmp_ln130_5_fu_1678_p2;
wire   [7:0] trunc_ln216_5_fu_1684_p1;
wire   [63:0] ashr_ln127_6_fu_1696_p2;
wire   [25:0] tmp_6_fu_1704_p4;
wire   [0:0] icmp_ln129_6_fu_1714_p2;
wire   [32:0] trunc_ln129_6_fu_1700_p1;
wire   [32:0] select_ln129_6_fu_1720_p3;
wire   [0:0] icmp_ln130_6_fu_1728_p2;
wire   [7:0] trunc_ln216_6_fu_1734_p1;
wire   [63:0] ashr_ln127_7_fu_1746_p2;
wire   [25:0] tmp_7_fu_1754_p4;
wire   [0:0] icmp_ln129_7_fu_1764_p2;
wire   [32:0] trunc_ln129_7_fu_1750_p1;
wire   [32:0] select_ln129_7_fu_1770_p3;
wire   [0:0] icmp_ln130_7_fu_1778_p2;
wire   [7:0] trunc_ln216_7_fu_1784_p1;
wire   [63:0] ashr_ln127_8_fu_1796_p2;
wire   [25:0] tmp_8_fu_1804_p4;
wire   [0:0] icmp_ln129_8_fu_1814_p2;
wire   [32:0] trunc_ln129_8_fu_1800_p1;
wire   [32:0] select_ln129_8_fu_1820_p3;
wire   [0:0] icmp_ln130_8_fu_1828_p2;
wire   [7:0] trunc_ln216_8_fu_1834_p1;
wire   [63:0] ashr_ln127_9_fu_1846_p2;
wire   [25:0] tmp_9_fu_1854_p4;
wire   [0:0] icmp_ln129_9_fu_1864_p2;
wire   [32:0] trunc_ln129_9_fu_1850_p1;
wire   [32:0] select_ln129_9_fu_1870_p3;
wire   [0:0] icmp_ln130_9_fu_1878_p2;
wire   [7:0] trunc_ln216_9_fu_1884_p1;
wire   [63:0] ashr_ln127_10_fu_1896_p2;
wire   [25:0] tmp_10_fu_1904_p4;
wire   [0:0] icmp_ln129_10_fu_1914_p2;
wire   [32:0] trunc_ln129_10_fu_1900_p1;
wire   [32:0] select_ln129_10_fu_1920_p3;
wire   [0:0] icmp_ln130_10_fu_1928_p2;
wire   [7:0] trunc_ln216_10_fu_1934_p1;
wire   [63:0] ashr_ln127_11_fu_1946_p2;
wire   [25:0] tmp_11_fu_1954_p4;
wire   [0:0] icmp_ln129_11_fu_1964_p2;
wire   [32:0] trunc_ln129_11_fu_1950_p1;
wire   [32:0] select_ln129_11_fu_1970_p3;
wire   [0:0] icmp_ln130_11_fu_1978_p2;
wire   [7:0] trunc_ln216_11_fu_1984_p1;
wire   [63:0] ashr_ln127_12_fu_1996_p2;
wire   [25:0] tmp_12_fu_2004_p4;
wire   [0:0] icmp_ln129_12_fu_2014_p2;
wire   [32:0] trunc_ln129_12_fu_2000_p1;
wire   [32:0] select_ln129_12_fu_2020_p3;
wire   [0:0] icmp_ln130_12_fu_2028_p2;
wire   [7:0] trunc_ln216_12_fu_2034_p1;
wire   [63:0] ashr_ln127_13_fu_2046_p2;
wire   [25:0] tmp_13_fu_2054_p4;
wire   [0:0] icmp_ln129_13_fu_2064_p2;
wire   [32:0] trunc_ln129_13_fu_2050_p1;
wire   [32:0] select_ln129_13_fu_2070_p3;
wire   [0:0] icmp_ln130_13_fu_2078_p2;
wire   [7:0] trunc_ln216_13_fu_2084_p1;
wire   [63:0] ashr_ln127_14_fu_2096_p2;
wire   [25:0] tmp_14_fu_2104_p4;
wire   [0:0] icmp_ln129_14_fu_2114_p2;
wire   [32:0] trunc_ln129_14_fu_2100_p1;
wire   [32:0] select_ln129_14_fu_2120_p3;
wire   [0:0] icmp_ln130_14_fu_2128_p2;
wire   [7:0] trunc_ln216_14_fu_2134_p1;
wire   [63:0] ashr_ln127_15_fu_2146_p2;
wire   [25:0] tmp_15_fu_2154_p4;
wire   [0:0] icmp_ln129_15_fu_2164_p2;
wire   [32:0] trunc_ln129_15_fu_2150_p1;
wire   [32:0] select_ln129_15_fu_2170_p3;
wire   [0:0] icmp_ln130_15_fu_2178_p2;
wire   [7:0] trunc_ln216_15_fu_2184_p1;
wire   [63:0] ashr_ln127_16_fu_2196_p2;
wire   [25:0] tmp_16_fu_2204_p4;
wire   [0:0] icmp_ln129_16_fu_2214_p2;
wire   [32:0] trunc_ln129_16_fu_2200_p1;
wire   [32:0] select_ln129_16_fu_2220_p3;
wire   [0:0] icmp_ln130_16_fu_2228_p2;
wire   [7:0] trunc_ln216_16_fu_2234_p1;
wire   [63:0] ashr_ln127_17_fu_2246_p2;
wire   [25:0] tmp_17_fu_2254_p4;
wire   [0:0] icmp_ln129_17_fu_2264_p2;
wire   [32:0] trunc_ln129_17_fu_2250_p1;
wire   [32:0] select_ln129_17_fu_2270_p3;
wire   [0:0] icmp_ln130_17_fu_2278_p2;
wire   [7:0] trunc_ln216_17_fu_2284_p1;
wire   [63:0] ashr_ln127_18_fu_2296_p2;
wire   [25:0] tmp_18_fu_2304_p4;
wire   [0:0] icmp_ln129_18_fu_2314_p2;
wire   [32:0] trunc_ln129_18_fu_2300_p1;
wire   [32:0] select_ln129_18_fu_2320_p3;
wire   [0:0] icmp_ln130_18_fu_2328_p2;
wire   [7:0] trunc_ln216_18_fu_2334_p1;
wire   [63:0] ashr_ln127_19_fu_2346_p2;
wire   [25:0] tmp_19_fu_2354_p4;
wire   [0:0] icmp_ln129_19_fu_2364_p2;
wire   [32:0] trunc_ln129_19_fu_2350_p1;
wire   [32:0] select_ln129_19_fu_2370_p3;
wire   [0:0] icmp_ln130_19_fu_2378_p2;
wire   [7:0] trunc_ln216_19_fu_2384_p1;
wire   [63:0] ashr_ln127_20_fu_2396_p2;
wire   [25:0] tmp_20_fu_2404_p4;
wire   [0:0] icmp_ln129_20_fu_2414_p2;
wire   [32:0] trunc_ln129_20_fu_2400_p1;
wire   [32:0] select_ln129_20_fu_2420_p3;
wire   [0:0] icmp_ln130_20_fu_2428_p2;
wire   [7:0] trunc_ln216_20_fu_2434_p1;
wire   [63:0] ashr_ln127_21_fu_2446_p2;
wire   [25:0] tmp_21_fu_2454_p4;
wire   [0:0] icmp_ln129_21_fu_2464_p2;
wire   [32:0] trunc_ln129_21_fu_2450_p1;
wire   [32:0] select_ln129_21_fu_2470_p3;
wire   [0:0] icmp_ln130_21_fu_2478_p2;
wire   [7:0] trunc_ln216_21_fu_2484_p1;
wire   [63:0] ashr_ln127_22_fu_2496_p2;
wire   [25:0] tmp_22_fu_2504_p4;
wire   [0:0] icmp_ln129_22_fu_2514_p2;
wire   [32:0] trunc_ln129_22_fu_2500_p1;
wire   [32:0] select_ln129_22_fu_2520_p3;
wire   [0:0] icmp_ln130_22_fu_2528_p2;
wire   [7:0] trunc_ln216_22_fu_2534_p1;
wire   [63:0] ashr_ln127_23_fu_2546_p2;
wire   [25:0] tmp_23_fu_2554_p4;
wire   [0:0] icmp_ln129_23_fu_2564_p2;
wire   [32:0] trunc_ln129_23_fu_2550_p1;
wire   [32:0] select_ln129_23_fu_2570_p3;
wire   [0:0] icmp_ln130_23_fu_2578_p2;
wire   [7:0] trunc_ln216_23_fu_2584_p1;
wire   [63:0] ashr_ln127_24_fu_2596_p2;
wire   [25:0] tmp_24_fu_2604_p4;
wire   [0:0] icmp_ln129_24_fu_2614_p2;
wire   [32:0] trunc_ln129_24_fu_2600_p1;
wire   [32:0] select_ln129_24_fu_2620_p3;
wire   [0:0] icmp_ln130_24_fu_2628_p2;
wire   [7:0] trunc_ln216_24_fu_2634_p1;
wire   [63:0] ashr_ln127_25_fu_2646_p2;
wire   [25:0] tmp_25_fu_2654_p4;
wire   [0:0] icmp_ln129_25_fu_2664_p2;
wire   [32:0] trunc_ln129_25_fu_2650_p1;
wire   [32:0] select_ln129_25_fu_2670_p3;
wire   [0:0] icmp_ln130_25_fu_2678_p2;
wire   [7:0] trunc_ln216_25_fu_2684_p1;
wire   [63:0] ashr_ln127_26_fu_2696_p2;
wire   [25:0] tmp_26_fu_2704_p4;
wire   [0:0] icmp_ln129_26_fu_2714_p2;
wire   [32:0] trunc_ln129_26_fu_2700_p1;
wire   [32:0] select_ln129_26_fu_2720_p3;
wire   [0:0] icmp_ln130_26_fu_2728_p2;
wire   [7:0] trunc_ln216_26_fu_2734_p1;
wire   [63:0] ashr_ln127_27_fu_2746_p2;
wire   [25:0] tmp_27_fu_2754_p4;
wire   [0:0] icmp_ln129_27_fu_2764_p2;
wire   [32:0] trunc_ln129_27_fu_2750_p1;
wire   [32:0] select_ln129_27_fu_2770_p3;
wire   [0:0] icmp_ln130_27_fu_2778_p2;
wire   [7:0] trunc_ln216_27_fu_2784_p1;
wire   [63:0] ashr_ln127_28_fu_2796_p2;
wire   [25:0] tmp_28_fu_2804_p4;
wire   [0:0] icmp_ln129_28_fu_2814_p2;
wire   [32:0] trunc_ln129_28_fu_2800_p1;
wire   [32:0] select_ln129_28_fu_2820_p3;
wire   [0:0] icmp_ln130_28_fu_2828_p2;
wire   [7:0] trunc_ln216_28_fu_2834_p1;
wire   [63:0] ashr_ln127_29_fu_2846_p2;
wire   [25:0] tmp_29_fu_2854_p4;
wire   [0:0] icmp_ln129_29_fu_2864_p2;
wire   [32:0] trunc_ln129_29_fu_2850_p1;
wire   [32:0] select_ln129_29_fu_2870_p3;
wire   [0:0] icmp_ln130_29_fu_2878_p2;
wire   [7:0] trunc_ln216_29_fu_2884_p1;
wire   [63:0] ashr_ln127_30_fu_2896_p2;
wire   [25:0] tmp_30_fu_2904_p4;
wire   [0:0] icmp_ln129_30_fu_2914_p2;
wire   [32:0] trunc_ln129_30_fu_2900_p1;
wire   [32:0] select_ln129_30_fu_2920_p3;
wire   [0:0] icmp_ln130_30_fu_2928_p2;
wire   [7:0] trunc_ln216_30_fu_2934_p1;
wire   [63:0] ashr_ln127_31_fu_2946_p2;
wire   [25:0] tmp_31_fu_2954_p4;
wire   [0:0] icmp_ln129_31_fu_2964_p2;
wire   [32:0] trunc_ln129_31_fu_2950_p1;
wire   [32:0] select_ln129_31_fu_2970_p3;
wire   [0:0] icmp_ln130_31_fu_2978_p2;
wire   [7:0] trunc_ln216_31_fu_2984_p1;
wire   [7:0] select_ln216_31_fu_2988_p3;
wire   [7:0] select_ln216_30_fu_2938_p3;
wire   [7:0] select_ln216_29_fu_2888_p3;
wire   [7:0] select_ln216_28_fu_2838_p3;
wire   [7:0] select_ln216_27_fu_2788_p3;
wire   [7:0] select_ln216_26_fu_2738_p3;
wire   [7:0] select_ln216_25_fu_2688_p3;
wire   [7:0] select_ln216_24_fu_2638_p3;
wire   [7:0] select_ln216_23_fu_2588_p3;
wire   [7:0] select_ln216_22_fu_2538_p3;
wire   [7:0] select_ln216_21_fu_2488_p3;
wire   [7:0] select_ln216_20_fu_2438_p3;
wire   [7:0] select_ln216_19_fu_2388_p3;
wire   [7:0] select_ln216_18_fu_2338_p3;
wire   [7:0] select_ln216_17_fu_2288_p3;
wire   [7:0] select_ln216_16_fu_2238_p3;
wire   [7:0] select_ln216_15_fu_2188_p3;
wire   [7:0] select_ln216_14_fu_2138_p3;
wire   [7:0] select_ln216_13_fu_2088_p3;
wire   [7:0] select_ln216_12_fu_2038_p3;
wire   [7:0] select_ln216_11_fu_1988_p3;
wire   [7:0] select_ln216_10_fu_1938_p3;
wire   [7:0] select_ln216_9_fu_1888_p3;
wire   [7:0] select_ln216_8_fu_1838_p3;
wire   [7:0] select_ln216_7_fu_1788_p3;
wire   [7:0] select_ln216_6_fu_1738_p3;
wire   [7:0] select_ln216_5_fu_1688_p3;
wire   [7:0] select_ln216_4_fu_1638_p3;
wire   [7:0] select_ln216_3_fu_1588_p3;
wire   [7:0] select_ln216_2_fu_1538_p3;
wire   [7:0] select_ln216_1_fu_1488_p3;
wire   [7:0] select_ln216_fu_1438_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U40(
    .din0(mul_ln123_fu_611_p0),
    .din1(mul_ln123_fu_611_p1),
    .dout(mul_ln123_fu_611_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U41(
    .din0(mul_ln123_1_fu_636_p0),
    .din1(mul_ln123_1_fu_636_p1),
    .dout(mul_ln123_1_fu_636_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U42(
    .din0(mul_ln123_2_fu_661_p0),
    .din1(mul_ln123_2_fu_661_p1),
    .dout(mul_ln123_2_fu_661_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U43(
    .din0(mul_ln123_3_fu_686_p0),
    .din1(mul_ln123_3_fu_686_p1),
    .dout(mul_ln123_3_fu_686_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U44(
    .din0(mul_ln123_4_fu_711_p0),
    .din1(mul_ln123_4_fu_711_p1),
    .dout(mul_ln123_4_fu_711_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U45(
    .din0(mul_ln123_5_fu_736_p0),
    .din1(mul_ln123_5_fu_736_p1),
    .dout(mul_ln123_5_fu_736_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U46(
    .din0(mul_ln123_6_fu_761_p0),
    .din1(mul_ln123_6_fu_761_p1),
    .dout(mul_ln123_6_fu_761_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U47(
    .din0(mul_ln123_7_fu_786_p0),
    .din1(mul_ln123_7_fu_786_p1),
    .dout(mul_ln123_7_fu_786_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U48(
    .din0(mul_ln123_8_fu_811_p0),
    .din1(mul_ln123_8_fu_811_p1),
    .dout(mul_ln123_8_fu_811_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U49(
    .din0(mul_ln123_9_fu_836_p0),
    .din1(mul_ln123_9_fu_836_p1),
    .dout(mul_ln123_9_fu_836_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U50(
    .din0(mul_ln123_10_fu_861_p0),
    .din1(mul_ln123_10_fu_861_p1),
    .dout(mul_ln123_10_fu_861_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U51(
    .din0(mul_ln123_11_fu_886_p0),
    .din1(mul_ln123_11_fu_886_p1),
    .dout(mul_ln123_11_fu_886_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U52(
    .din0(mul_ln123_12_fu_911_p0),
    .din1(mul_ln123_12_fu_911_p1),
    .dout(mul_ln123_12_fu_911_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U53(
    .din0(mul_ln123_13_fu_936_p0),
    .din1(mul_ln123_13_fu_936_p1),
    .dout(mul_ln123_13_fu_936_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U54(
    .din0(mul_ln123_14_fu_961_p0),
    .din1(mul_ln123_14_fu_961_p1),
    .dout(mul_ln123_14_fu_961_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U55(
    .din0(mul_ln123_15_fu_986_p0),
    .din1(mul_ln123_15_fu_986_p1),
    .dout(mul_ln123_15_fu_986_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U56(
    .din0(mul_ln123_16_fu_1011_p0),
    .din1(mul_ln123_16_fu_1011_p1),
    .dout(mul_ln123_16_fu_1011_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U57(
    .din0(mul_ln123_17_fu_1036_p0),
    .din1(mul_ln123_17_fu_1036_p1),
    .dout(mul_ln123_17_fu_1036_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U58(
    .din0(mul_ln123_18_fu_1061_p0),
    .din1(mul_ln123_18_fu_1061_p1),
    .dout(mul_ln123_18_fu_1061_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U59(
    .din0(mul_ln123_19_fu_1086_p0),
    .din1(mul_ln123_19_fu_1086_p1),
    .dout(mul_ln123_19_fu_1086_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U60(
    .din0(mul_ln123_20_fu_1111_p0),
    .din1(mul_ln123_20_fu_1111_p1),
    .dout(mul_ln123_20_fu_1111_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U61(
    .din0(mul_ln123_21_fu_1136_p0),
    .din1(mul_ln123_21_fu_1136_p1),
    .dout(mul_ln123_21_fu_1136_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U62(
    .din0(mul_ln123_22_fu_1161_p0),
    .din1(mul_ln123_22_fu_1161_p1),
    .dout(mul_ln123_22_fu_1161_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U63(
    .din0(mul_ln123_23_fu_1186_p0),
    .din1(mul_ln123_23_fu_1186_p1),
    .dout(mul_ln123_23_fu_1186_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U64(
    .din0(mul_ln123_24_fu_1211_p0),
    .din1(mul_ln123_24_fu_1211_p1),
    .dout(mul_ln123_24_fu_1211_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U65(
    .din0(mul_ln123_25_fu_1236_p0),
    .din1(mul_ln123_25_fu_1236_p1),
    .dout(mul_ln123_25_fu_1236_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U66(
    .din0(mul_ln123_26_fu_1261_p0),
    .din1(mul_ln123_26_fu_1261_p1),
    .dout(mul_ln123_26_fu_1261_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U67(
    .din0(mul_ln123_27_fu_1286_p0),
    .din1(mul_ln123_27_fu_1286_p1),
    .dout(mul_ln123_27_fu_1286_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U68(
    .din0(mul_ln123_28_fu_1311_p0),
    .din1(mul_ln123_28_fu_1311_p1),
    .dout(mul_ln123_28_fu_1311_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U69(
    .din0(mul_ln123_29_fu_1336_p0),
    .din1(mul_ln123_29_fu_1336_p1),
    .dout(mul_ln123_29_fu_1336_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U70(
    .din0(mul_ln123_30_fu_1361_p0),
    .din1(mul_ln123_30_fu_1361_p1),
    .dout(mul_ln123_30_fu_1361_p2)
);

sparse_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U71(
    .din0(mul_ln123_31_fu_1386_p0),
    .din1(mul_ln123_31_fu_1386_p1),
    .dout(mul_ln123_31_fu_1386_p2)
);

sparse_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln113_fu_265_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_192 <= i_3_fu_271_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_192 <= 27'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln126_10_reg_3466 <= add_ln126_10_fu_866_p2;
        add_ln126_11_reg_3471 <= add_ln126_11_fu_891_p2;
        add_ln126_12_reg_3476 <= add_ln126_12_fu_916_p2;
        add_ln126_13_reg_3481 <= add_ln126_13_fu_941_p2;
        add_ln126_14_reg_3486 <= add_ln126_14_fu_966_p2;
        add_ln126_15_reg_3491 <= add_ln126_15_fu_991_p2;
        add_ln126_16_reg_3496 <= add_ln126_16_fu_1016_p2;
        add_ln126_17_reg_3501 <= add_ln126_17_fu_1041_p2;
        add_ln126_18_reg_3506 <= add_ln126_18_fu_1066_p2;
        add_ln126_19_reg_3511 <= add_ln126_19_fu_1091_p2;
        add_ln126_1_reg_3421 <= add_ln126_1_fu_641_p2;
        add_ln126_20_reg_3516 <= add_ln126_20_fu_1116_p2;
        add_ln126_21_reg_3521 <= add_ln126_21_fu_1141_p2;
        add_ln126_22_reg_3526 <= add_ln126_22_fu_1166_p2;
        add_ln126_23_reg_3531 <= add_ln126_23_fu_1191_p2;
        add_ln126_24_reg_3536 <= add_ln126_24_fu_1216_p2;
        add_ln126_25_reg_3541 <= add_ln126_25_fu_1241_p2;
        add_ln126_26_reg_3546 <= add_ln126_26_fu_1266_p2;
        add_ln126_27_reg_3551 <= add_ln126_27_fu_1291_p2;
        add_ln126_28_reg_3556 <= add_ln126_28_fu_1316_p2;
        add_ln126_29_reg_3561 <= add_ln126_29_fu_1341_p2;
        add_ln126_2_reg_3426 <= add_ln126_2_fu_666_p2;
        add_ln126_30_reg_3566 <= add_ln126_30_fu_1366_p2;
        add_ln126_31_reg_3571 <= add_ln126_31_fu_1391_p2;
        add_ln126_3_reg_3431 <= add_ln126_3_fu_691_p2;
        add_ln126_4_reg_3436 <= add_ln126_4_fu_716_p2;
        add_ln126_5_reg_3441 <= add_ln126_5_fu_741_p2;
        add_ln126_6_reg_3446 <= add_ln126_6_fu_766_p2;
        add_ln126_7_reg_3451 <= add_ln126_7_fu_791_p2;
        add_ln126_8_reg_3456 <= add_ln126_8_fu_816_p2;
        add_ln126_9_reg_3461 <= add_ln126_9_fu_841_p2;
        add_ln126_reg_3416 <= add_ln126_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv_cast_reg_3180 <= conv_cast_fu_249_p1;
        l_val_V_10_reg_3306 <= {{data_out1_dout[351:320]}};
        l_val_V_11_reg_3311 <= {{data_out1_dout[383:352]}};
        l_val_V_12_reg_3316 <= {{data_out1_dout[415:384]}};
        l_val_V_13_reg_3321 <= {{data_out1_dout[447:416]}};
        l_val_V_14_reg_3326 <= {{data_out1_dout[479:448]}};
        l_val_V_15_reg_3331 <= {{data_out1_dout[511:480]}};
        l_val_V_16_reg_3336 <= {{data_out1_dout[543:512]}};
        l_val_V_17_reg_3341 <= {{data_out1_dout[575:544]}};
        l_val_V_18_reg_3346 <= {{data_out1_dout[607:576]}};
        l_val_V_19_reg_3351 <= {{data_out1_dout[639:608]}};
        l_val_V_1_reg_3261 <= {{data_out1_dout[63:32]}};
        l_val_V_20_reg_3356 <= {{data_out1_dout[671:640]}};
        l_val_V_21_reg_3361 <= {{data_out1_dout[703:672]}};
        l_val_V_22_reg_3366 <= {{data_out1_dout[735:704]}};
        l_val_V_23_reg_3371 <= {{data_out1_dout[767:736]}};
        l_val_V_24_reg_3376 <= {{data_out1_dout[799:768]}};
        l_val_V_25_reg_3381 <= {{data_out1_dout[831:800]}};
        l_val_V_26_reg_3386 <= {{data_out1_dout[863:832]}};
        l_val_V_27_reg_3391 <= {{data_out1_dout[895:864]}};
        l_val_V_28_reg_3396 <= {{data_out1_dout[927:896]}};
        l_val_V_29_reg_3401 <= {{data_out1_dout[959:928]}};
        l_val_V_2_reg_3266 <= {{data_out1_dout[95:64]}};
        l_val_V_30_reg_3406 <= {{data_out1_dout[991:960]}};
        l_val_V_31_reg_3411 <= {{data_out1_dout[1023:992]}};
        l_val_V_3_reg_3271 <= {{data_out1_dout[127:96]}};
        l_val_V_4_reg_3276 <= {{data_out1_dout[159:128]}};
        l_val_V_5_reg_3281 <= {{data_out1_dout[191:160]}};
        l_val_V_6_reg_3286 <= {{data_out1_dout[223:192]}};
        l_val_V_7_reg_3291 <= {{data_out1_dout[255:224]}};
        l_val_V_8_reg_3296 <= {{data_out1_dout[287:256]}};
        l_val_V_9_reg_3301 <= {{data_out1_dout[319:288]}};
        l_val_V_reg_3256 <= l_val_V_fu_282_p1;
        sh_prom18_cast_reg_3144[31 : 0] <= sh_prom18_cast_fu_245_p1[31 : 0];
        sh_prom_cast_reg_3216[31 : 0] <= sh_prom_cast_fu_253_p1[31 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln113_fu_265_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 27'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_192;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_out1_blk_n = data_out1_empty_n;
    end else begin
        data_out1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_out1_read = 1'b1;
    end else begin
        data_out1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        quant_out2_blk_n = quant_out2_full_n;
    end else begin
        quant_out2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        quant_out2_write = 1'b1;
    end else begin
        quant_out2_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln126_10_fu_866_p2 = (mul_ln123_10_fu_861_p2 + pos_rounding_value);

assign add_ln126_11_fu_891_p2 = (mul_ln123_11_fu_886_p2 + pos_rounding_value);

assign add_ln126_12_fu_916_p2 = (mul_ln123_12_fu_911_p2 + pos_rounding_value);

assign add_ln126_13_fu_941_p2 = (mul_ln123_13_fu_936_p2 + pos_rounding_value);

assign add_ln126_14_fu_966_p2 = (mul_ln123_14_fu_961_p2 + pos_rounding_value);

assign add_ln126_15_fu_991_p2 = (mul_ln123_15_fu_986_p2 + pos_rounding_value);

assign add_ln126_16_fu_1016_p2 = (mul_ln123_16_fu_1011_p2 + pos_rounding_value);

assign add_ln126_17_fu_1041_p2 = (mul_ln123_17_fu_1036_p2 + pos_rounding_value);

assign add_ln126_18_fu_1066_p2 = (mul_ln123_18_fu_1061_p2 + pos_rounding_value);

assign add_ln126_19_fu_1091_p2 = (mul_ln123_19_fu_1086_p2 + pos_rounding_value);

assign add_ln126_1_fu_641_p2 = (mul_ln123_1_fu_636_p2 + pos_rounding_value);

assign add_ln126_20_fu_1116_p2 = (mul_ln123_20_fu_1111_p2 + pos_rounding_value);

assign add_ln126_21_fu_1141_p2 = (mul_ln123_21_fu_1136_p2 + pos_rounding_value);

assign add_ln126_22_fu_1166_p2 = (mul_ln123_22_fu_1161_p2 + pos_rounding_value);

assign add_ln126_23_fu_1191_p2 = (mul_ln123_23_fu_1186_p2 + pos_rounding_value);

assign add_ln126_24_fu_1216_p2 = (mul_ln123_24_fu_1211_p2 + pos_rounding_value);

assign add_ln126_25_fu_1241_p2 = (mul_ln123_25_fu_1236_p2 + pos_rounding_value);

assign add_ln126_26_fu_1266_p2 = (mul_ln123_26_fu_1261_p2 + pos_rounding_value);

assign add_ln126_27_fu_1291_p2 = (mul_ln123_27_fu_1286_p2 + pos_rounding_value);

assign add_ln126_28_fu_1316_p2 = (mul_ln123_28_fu_1311_p2 + pos_rounding_value);

assign add_ln126_29_fu_1341_p2 = (mul_ln123_29_fu_1336_p2 + pos_rounding_value);

assign add_ln126_2_fu_666_p2 = (mul_ln123_2_fu_661_p2 + pos_rounding_value);

assign add_ln126_30_fu_1366_p2 = (mul_ln123_30_fu_1361_p2 + pos_rounding_value);

assign add_ln126_31_fu_1391_p2 = (mul_ln123_31_fu_1386_p2 + pos_rounding_value);

assign add_ln126_3_fu_691_p2 = (mul_ln123_3_fu_686_p2 + pos_rounding_value);

assign add_ln126_4_fu_716_p2 = (mul_ln123_4_fu_711_p2 + pos_rounding_value);

assign add_ln126_5_fu_741_p2 = (mul_ln123_5_fu_736_p2 + pos_rounding_value);

assign add_ln126_6_fu_766_p2 = (mul_ln123_6_fu_761_p2 + pos_rounding_value);

assign add_ln126_7_fu_791_p2 = (mul_ln123_7_fu_786_p2 + pos_rounding_value);

assign add_ln126_8_fu_816_p2 = (mul_ln123_8_fu_811_p2 + pos_rounding_value);

assign add_ln126_9_fu_841_p2 = (mul_ln123_9_fu_836_p2 + pos_rounding_value);

assign add_ln126_fu_616_p2 = (mul_ln123_fu_611_p2 + pos_rounding_value);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((quant_out2_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((data_out1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((quant_out2_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((data_out1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((quant_out2_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((data_out1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (data_out1_empty_n == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (quant_out2_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln127_10_fu_1896_p2 = $signed(add_ln126_10_reg_3466) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_11_fu_1946_p2 = $signed(add_ln126_11_reg_3471) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_12_fu_1996_p2 = $signed(add_ln126_12_reg_3476) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_13_fu_2046_p2 = $signed(add_ln126_13_reg_3481) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_14_fu_2096_p2 = $signed(add_ln126_14_reg_3486) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_15_fu_2146_p2 = $signed(add_ln126_15_reg_3491) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_16_fu_2196_p2 = $signed(add_ln126_16_reg_3496) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_17_fu_2246_p2 = $signed(add_ln126_17_reg_3501) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_18_fu_2296_p2 = $signed(add_ln126_18_reg_3506) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_19_fu_2346_p2 = $signed(add_ln126_19_reg_3511) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_1_fu_1446_p2 = $signed(add_ln126_1_reg_3421) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_20_fu_2396_p2 = $signed(add_ln126_20_reg_3516) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_21_fu_2446_p2 = $signed(add_ln126_21_reg_3521) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_22_fu_2496_p2 = $signed(add_ln126_22_reg_3526) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_23_fu_2546_p2 = $signed(add_ln126_23_reg_3531) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_24_fu_2596_p2 = $signed(add_ln126_24_reg_3536) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_25_fu_2646_p2 = $signed(add_ln126_25_reg_3541) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_26_fu_2696_p2 = $signed(add_ln126_26_reg_3546) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_27_fu_2746_p2 = $signed(add_ln126_27_reg_3551) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_28_fu_2796_p2 = $signed(add_ln126_28_reg_3556) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_29_fu_2846_p2 = $signed(add_ln126_29_reg_3561) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_2_fu_1496_p2 = $signed(add_ln126_2_reg_3426) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_30_fu_2896_p2 = $signed(add_ln126_30_reg_3566) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_31_fu_2946_p2 = $signed(add_ln126_31_reg_3571) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_3_fu_1546_p2 = $signed(add_ln126_3_reg_3431) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_4_fu_1596_p2 = $signed(add_ln126_4_reg_3436) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_5_fu_1646_p2 = $signed(add_ln126_5_reg_3441) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_6_fu_1696_p2 = $signed(add_ln126_6_reg_3446) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_7_fu_1746_p2 = $signed(add_ln126_7_reg_3451) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_8_fu_1796_p2 = $signed(add_ln126_8_reg_3456) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_9_fu_1846_p2 = $signed(add_ln126_9_reg_3461) >>> sh_prom18_cast_reg_3144;

assign ashr_ln127_fu_1396_p2 = $signed(add_ln126_reg_3416) >>> sh_prom18_cast_reg_3144;

assign conv_cast_fu_249_p1 = $signed(conv);

assign i_3_fu_271_p2 = (ap_sig_allocacmp_i_2 + 27'd1);

assign icmp_ln113_fu_265_p2 = ((ap_sig_allocacmp_i_2 == div_cast) ? 1'b1 : 1'b0);

assign icmp_ln129_10_fu_1914_p2 = (($signed(tmp_10_fu_1904_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_11_fu_1964_p2 = (($signed(tmp_11_fu_1954_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_12_fu_2014_p2 = (($signed(tmp_12_fu_2004_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_13_fu_2064_p2 = (($signed(tmp_13_fu_2054_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_14_fu_2114_p2 = (($signed(tmp_14_fu_2104_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_15_fu_2164_p2 = (($signed(tmp_15_fu_2154_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_16_fu_2214_p2 = (($signed(tmp_16_fu_2204_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_17_fu_2264_p2 = (($signed(tmp_17_fu_2254_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_18_fu_2314_p2 = (($signed(tmp_18_fu_2304_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_19_fu_2364_p2 = (($signed(tmp_19_fu_2354_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_1_fu_1464_p2 = (($signed(tmp_1_fu_1454_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_20_fu_2414_p2 = (($signed(tmp_20_fu_2404_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_21_fu_2464_p2 = (($signed(tmp_21_fu_2454_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_22_fu_2514_p2 = (($signed(tmp_22_fu_2504_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_23_fu_2564_p2 = (($signed(tmp_23_fu_2554_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_24_fu_2614_p2 = (($signed(tmp_24_fu_2604_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_25_fu_2664_p2 = (($signed(tmp_25_fu_2654_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_26_fu_2714_p2 = (($signed(tmp_26_fu_2704_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_27_fu_2764_p2 = (($signed(tmp_27_fu_2754_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_28_fu_2814_p2 = (($signed(tmp_28_fu_2804_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_29_fu_2864_p2 = (($signed(tmp_29_fu_2854_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_2_fu_1514_p2 = (($signed(tmp_2_fu_1504_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_30_fu_2914_p2 = (($signed(tmp_30_fu_2904_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_31_fu_2964_p2 = (($signed(tmp_31_fu_2954_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_3_fu_1564_p2 = (($signed(tmp_3_fu_1554_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_4_fu_1614_p2 = (($signed(tmp_4_fu_1604_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_5_fu_1664_p2 = (($signed(tmp_5_fu_1654_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_6_fu_1714_p2 = (($signed(tmp_6_fu_1704_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_7_fu_1764_p2 = (($signed(tmp_7_fu_1754_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_8_fu_1814_p2 = (($signed(tmp_8_fu_1804_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_9_fu_1864_p2 = (($signed(tmp_9_fu_1854_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_1414_p2 = (($signed(tmp_fu_1404_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln130_10_fu_1928_p2 = (($signed(select_ln129_10_fu_1920_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_11_fu_1978_p2 = (($signed(select_ln129_11_fu_1970_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_12_fu_2028_p2 = (($signed(select_ln129_12_fu_2020_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_13_fu_2078_p2 = (($signed(select_ln129_13_fu_2070_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_14_fu_2128_p2 = (($signed(select_ln129_14_fu_2120_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_15_fu_2178_p2 = (($signed(select_ln129_15_fu_2170_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_16_fu_2228_p2 = (($signed(select_ln129_16_fu_2220_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_17_fu_2278_p2 = (($signed(select_ln129_17_fu_2270_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_18_fu_2328_p2 = (($signed(select_ln129_18_fu_2320_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_19_fu_2378_p2 = (($signed(select_ln129_19_fu_2370_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_1478_p2 = (($signed(select_ln129_1_fu_1470_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_20_fu_2428_p2 = (($signed(select_ln129_20_fu_2420_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_21_fu_2478_p2 = (($signed(select_ln129_21_fu_2470_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_22_fu_2528_p2 = (($signed(select_ln129_22_fu_2520_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_23_fu_2578_p2 = (($signed(select_ln129_23_fu_2570_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_24_fu_2628_p2 = (($signed(select_ln129_24_fu_2620_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_25_fu_2678_p2 = (($signed(select_ln129_25_fu_2670_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_26_fu_2728_p2 = (($signed(select_ln129_26_fu_2720_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_27_fu_2778_p2 = (($signed(select_ln129_27_fu_2770_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_28_fu_2828_p2 = (($signed(select_ln129_28_fu_2820_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_29_fu_2878_p2 = (($signed(select_ln129_29_fu_2870_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_1528_p2 = (($signed(select_ln129_2_fu_1520_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_30_fu_2928_p2 = (($signed(select_ln129_30_fu_2920_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_31_fu_2978_p2 = (($signed(select_ln129_31_fu_2970_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_1578_p2 = (($signed(select_ln129_3_fu_1570_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_4_fu_1628_p2 = (($signed(select_ln129_4_fu_1620_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_5_fu_1678_p2 = (($signed(select_ln129_5_fu_1670_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_6_fu_1728_p2 = (($signed(select_ln129_6_fu_1720_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_7_fu_1778_p2 = (($signed(select_ln129_7_fu_1770_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_8_fu_1828_p2 = (($signed(select_ln129_8_fu_1820_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_9_fu_1878_p2 = (($signed(select_ln129_9_fu_1870_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_1428_p2 = (($signed(select_ln129_fu_1420_p3) < $signed(33'd8589934464)) ? 1'b1 : 1'b0);

assign l_val_V_fu_282_p1 = data_out1_dout[31:0];

assign mul_ln123_10_fu_861_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_10_fu_849_p2 : sext_ln541_10_fu_846_p1);

assign mul_ln123_10_fu_861_p1 = conv_cast_reg_3180;

assign mul_ln123_11_fu_886_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_11_fu_874_p2 : sext_ln541_11_fu_871_p1);

assign mul_ln123_11_fu_886_p1 = conv_cast_reg_3180;

assign mul_ln123_12_fu_911_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_12_fu_899_p2 : sext_ln541_12_fu_896_p1);

assign mul_ln123_12_fu_911_p1 = conv_cast_reg_3180;

assign mul_ln123_13_fu_936_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_13_fu_924_p2 : sext_ln541_13_fu_921_p1);

assign mul_ln123_13_fu_936_p1 = conv_cast_reg_3180;

assign mul_ln123_14_fu_961_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_14_fu_949_p2 : sext_ln541_14_fu_946_p1);

assign mul_ln123_14_fu_961_p1 = conv_cast_reg_3180;

assign mul_ln123_15_fu_986_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_15_fu_974_p2 : sext_ln541_15_fu_971_p1);

assign mul_ln123_15_fu_986_p1 = conv_cast_reg_3180;

assign mul_ln123_16_fu_1011_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_16_fu_999_p2 : sext_ln541_16_fu_996_p1);

assign mul_ln123_16_fu_1011_p1 = conv_cast_reg_3180;

assign mul_ln123_17_fu_1036_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_17_fu_1024_p2 : sext_ln541_17_fu_1021_p1);

assign mul_ln123_17_fu_1036_p1 = conv_cast_reg_3180;

assign mul_ln123_18_fu_1061_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_18_fu_1049_p2 : sext_ln541_18_fu_1046_p1);

assign mul_ln123_18_fu_1061_p1 = conv_cast_reg_3180;

assign mul_ln123_19_fu_1086_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_19_fu_1074_p2 : sext_ln541_19_fu_1071_p1);

assign mul_ln123_19_fu_1086_p1 = conv_cast_reg_3180;

assign mul_ln123_1_fu_636_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_1_fu_624_p2 : sext_ln541_1_fu_621_p1);

assign mul_ln123_1_fu_636_p1 = conv_cast_reg_3180;

assign mul_ln123_20_fu_1111_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_20_fu_1099_p2 : sext_ln541_20_fu_1096_p1);

assign mul_ln123_20_fu_1111_p1 = conv_cast_reg_3180;

assign mul_ln123_21_fu_1136_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_21_fu_1124_p2 : sext_ln541_21_fu_1121_p1);

assign mul_ln123_21_fu_1136_p1 = conv_cast_reg_3180;

assign mul_ln123_22_fu_1161_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_22_fu_1149_p2 : sext_ln541_22_fu_1146_p1);

assign mul_ln123_22_fu_1161_p1 = conv_cast_reg_3180;

assign mul_ln123_23_fu_1186_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_23_fu_1174_p2 : sext_ln541_23_fu_1171_p1);

assign mul_ln123_23_fu_1186_p1 = conv_cast_reg_3180;

assign mul_ln123_24_fu_1211_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_24_fu_1199_p2 : sext_ln541_24_fu_1196_p1);

assign mul_ln123_24_fu_1211_p1 = conv_cast_reg_3180;

assign mul_ln123_25_fu_1236_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_25_fu_1224_p2 : sext_ln541_25_fu_1221_p1);

assign mul_ln123_25_fu_1236_p1 = conv_cast_reg_3180;

assign mul_ln123_26_fu_1261_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_26_fu_1249_p2 : sext_ln541_26_fu_1246_p1);

assign mul_ln123_26_fu_1261_p1 = conv_cast_reg_3180;

assign mul_ln123_27_fu_1286_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_27_fu_1274_p2 : sext_ln541_27_fu_1271_p1);

assign mul_ln123_27_fu_1286_p1 = conv_cast_reg_3180;

assign mul_ln123_28_fu_1311_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_28_fu_1299_p2 : sext_ln541_28_fu_1296_p1);

assign mul_ln123_28_fu_1311_p1 = conv_cast_reg_3180;

assign mul_ln123_29_fu_1336_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_29_fu_1324_p2 : sext_ln541_29_fu_1321_p1);

assign mul_ln123_29_fu_1336_p1 = conv_cast_reg_3180;

assign mul_ln123_2_fu_661_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_2_fu_649_p2 : sext_ln541_2_fu_646_p1);

assign mul_ln123_2_fu_661_p1 = conv_cast_reg_3180;

assign mul_ln123_30_fu_1361_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_30_fu_1349_p2 : sext_ln541_30_fu_1346_p1);

assign mul_ln123_30_fu_1361_p1 = conv_cast_reg_3180;

assign mul_ln123_31_fu_1386_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_31_fu_1374_p2 : sext_ln541_31_fu_1371_p1);

assign mul_ln123_31_fu_1386_p1 = conv_cast_reg_3180;

assign mul_ln123_3_fu_686_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_3_fu_674_p2 : sext_ln541_3_fu_671_p1);

assign mul_ln123_3_fu_686_p1 = conv_cast_reg_3180;

assign mul_ln123_4_fu_711_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_4_fu_699_p2 : sext_ln541_4_fu_696_p1);

assign mul_ln123_4_fu_711_p1 = conv_cast_reg_3180;

assign mul_ln123_5_fu_736_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_5_fu_724_p2 : sext_ln541_5_fu_721_p1);

assign mul_ln123_5_fu_736_p1 = conv_cast_reg_3180;

assign mul_ln123_6_fu_761_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_6_fu_749_p2 : sext_ln541_6_fu_746_p1);

assign mul_ln123_6_fu_761_p1 = conv_cast_reg_3180;

assign mul_ln123_7_fu_786_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_7_fu_774_p2 : sext_ln541_7_fu_771_p1);

assign mul_ln123_7_fu_786_p1 = conv_cast_reg_3180;

assign mul_ln123_8_fu_811_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_8_fu_799_p2 : sext_ln541_8_fu_796_p1);

assign mul_ln123_8_fu_811_p1 = conv_cast_reg_3180;

assign mul_ln123_9_fu_836_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_9_fu_824_p2 : sext_ln541_9_fu_821_p1);

assign mul_ln123_9_fu_836_p1 = conv_cast_reg_3180;

assign mul_ln123_fu_611_p0 = ((cmp12[0:0] == 1'b1) ? shl_ln121_fu_599_p2 : sext_ln541_fu_596_p1);

assign mul_ln123_fu_611_p1 = conv_cast_reg_3180;

assign quant_out2_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{select_ln216_31_fu_2988_p3}, {select_ln216_30_fu_2938_p3}}, {select_ln216_29_fu_2888_p3}}, {select_ln216_28_fu_2838_p3}}, {select_ln216_27_fu_2788_p3}}, {select_ln216_26_fu_2738_p3}}, {select_ln216_25_fu_2688_p3}}, {select_ln216_24_fu_2638_p3}}, {select_ln216_23_fu_2588_p3}}, {select_ln216_22_fu_2538_p3}}, {select_ln216_21_fu_2488_p3}}, {select_ln216_20_fu_2438_p3}}, {select_ln216_19_fu_2388_p3}}, {select_ln216_18_fu_2338_p3}}, {select_ln216_17_fu_2288_p3}}, {select_ln216_16_fu_2238_p3}}, {select_ln216_15_fu_2188_p3}}, {select_ln216_14_fu_2138_p3}}, {select_ln216_13_fu_2088_p3}}, {select_ln216_12_fu_2038_p3}}, {select_ln216_11_fu_1988_p3}}, {select_ln216_10_fu_1938_p3}}, {select_ln216_9_fu_1888_p3}}, {select_ln216_8_fu_1838_p3}}, {select_ln216_7_fu_1788_p3}}, {select_ln216_6_fu_1738_p3}}, {select_ln216_5_fu_1688_p3}}, {select_ln216_4_fu_1638_p3}}, {select_ln216_3_fu_1588_p3}}, {select_ln216_2_fu_1538_p3}}, {select_ln216_1_fu_1488_p3}}, {select_ln216_fu_1438_p3}};

assign select_ln129_10_fu_1920_p3 = ((icmp_ln129_10_fu_1914_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_10_fu_1900_p1);

assign select_ln129_11_fu_1970_p3 = ((icmp_ln129_11_fu_1964_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_11_fu_1950_p1);

assign select_ln129_12_fu_2020_p3 = ((icmp_ln129_12_fu_2014_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_12_fu_2000_p1);

assign select_ln129_13_fu_2070_p3 = ((icmp_ln129_13_fu_2064_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_13_fu_2050_p1);

assign select_ln129_14_fu_2120_p3 = ((icmp_ln129_14_fu_2114_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_14_fu_2100_p1);

assign select_ln129_15_fu_2170_p3 = ((icmp_ln129_15_fu_2164_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_15_fu_2150_p1);

assign select_ln129_16_fu_2220_p3 = ((icmp_ln129_16_fu_2214_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_16_fu_2200_p1);

assign select_ln129_17_fu_2270_p3 = ((icmp_ln129_17_fu_2264_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_17_fu_2250_p1);

assign select_ln129_18_fu_2320_p3 = ((icmp_ln129_18_fu_2314_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_18_fu_2300_p1);

assign select_ln129_19_fu_2370_p3 = ((icmp_ln129_19_fu_2364_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_19_fu_2350_p1);

assign select_ln129_1_fu_1470_p3 = ((icmp_ln129_1_fu_1464_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_1_fu_1450_p1);

assign select_ln129_20_fu_2420_p3 = ((icmp_ln129_20_fu_2414_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_20_fu_2400_p1);

assign select_ln129_21_fu_2470_p3 = ((icmp_ln129_21_fu_2464_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_21_fu_2450_p1);

assign select_ln129_22_fu_2520_p3 = ((icmp_ln129_22_fu_2514_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_22_fu_2500_p1);

assign select_ln129_23_fu_2570_p3 = ((icmp_ln129_23_fu_2564_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_23_fu_2550_p1);

assign select_ln129_24_fu_2620_p3 = ((icmp_ln129_24_fu_2614_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_24_fu_2600_p1);

assign select_ln129_25_fu_2670_p3 = ((icmp_ln129_25_fu_2664_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_25_fu_2650_p1);

assign select_ln129_26_fu_2720_p3 = ((icmp_ln129_26_fu_2714_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_26_fu_2700_p1);

assign select_ln129_27_fu_2770_p3 = ((icmp_ln129_27_fu_2764_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_27_fu_2750_p1);

assign select_ln129_28_fu_2820_p3 = ((icmp_ln129_28_fu_2814_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_28_fu_2800_p1);

assign select_ln129_29_fu_2870_p3 = ((icmp_ln129_29_fu_2864_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_29_fu_2850_p1);

assign select_ln129_2_fu_1520_p3 = ((icmp_ln129_2_fu_1514_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_2_fu_1500_p1);

assign select_ln129_30_fu_2920_p3 = ((icmp_ln129_30_fu_2914_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_30_fu_2900_p1);

assign select_ln129_31_fu_2970_p3 = ((icmp_ln129_31_fu_2964_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_31_fu_2950_p1);

assign select_ln129_3_fu_1570_p3 = ((icmp_ln129_3_fu_1564_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_3_fu_1550_p1);

assign select_ln129_4_fu_1620_p3 = ((icmp_ln129_4_fu_1614_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_4_fu_1600_p1);

assign select_ln129_5_fu_1670_p3 = ((icmp_ln129_5_fu_1664_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_5_fu_1650_p1);

assign select_ln129_6_fu_1720_p3 = ((icmp_ln129_6_fu_1714_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_6_fu_1700_p1);

assign select_ln129_7_fu_1770_p3 = ((icmp_ln129_7_fu_1764_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_7_fu_1750_p1);

assign select_ln129_8_fu_1820_p3 = ((icmp_ln129_8_fu_1814_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_8_fu_1800_p1);

assign select_ln129_9_fu_1870_p3 = ((icmp_ln129_9_fu_1864_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_9_fu_1850_p1);

assign select_ln129_fu_1420_p3 = ((icmp_ln129_fu_1414_p2[0:0] == 1'b1) ? 33'd127 : trunc_ln129_fu_1400_p1);

assign select_ln216_10_fu_1938_p3 = ((icmp_ln130_10_fu_1928_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_10_fu_1934_p1);

assign select_ln216_11_fu_1988_p3 = ((icmp_ln130_11_fu_1978_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_11_fu_1984_p1);

assign select_ln216_12_fu_2038_p3 = ((icmp_ln130_12_fu_2028_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_12_fu_2034_p1);

assign select_ln216_13_fu_2088_p3 = ((icmp_ln130_13_fu_2078_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_13_fu_2084_p1);

assign select_ln216_14_fu_2138_p3 = ((icmp_ln130_14_fu_2128_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_14_fu_2134_p1);

assign select_ln216_15_fu_2188_p3 = ((icmp_ln130_15_fu_2178_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_15_fu_2184_p1);

assign select_ln216_16_fu_2238_p3 = ((icmp_ln130_16_fu_2228_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_16_fu_2234_p1);

assign select_ln216_17_fu_2288_p3 = ((icmp_ln130_17_fu_2278_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_17_fu_2284_p1);

assign select_ln216_18_fu_2338_p3 = ((icmp_ln130_18_fu_2328_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_18_fu_2334_p1);

assign select_ln216_19_fu_2388_p3 = ((icmp_ln130_19_fu_2378_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_19_fu_2384_p1);

assign select_ln216_1_fu_1488_p3 = ((icmp_ln130_1_fu_1478_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_1_fu_1484_p1);

assign select_ln216_20_fu_2438_p3 = ((icmp_ln130_20_fu_2428_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_20_fu_2434_p1);

assign select_ln216_21_fu_2488_p3 = ((icmp_ln130_21_fu_2478_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_21_fu_2484_p1);

assign select_ln216_22_fu_2538_p3 = ((icmp_ln130_22_fu_2528_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_22_fu_2534_p1);

assign select_ln216_23_fu_2588_p3 = ((icmp_ln130_23_fu_2578_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_23_fu_2584_p1);

assign select_ln216_24_fu_2638_p3 = ((icmp_ln130_24_fu_2628_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_24_fu_2634_p1);

assign select_ln216_25_fu_2688_p3 = ((icmp_ln130_25_fu_2678_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_25_fu_2684_p1);

assign select_ln216_26_fu_2738_p3 = ((icmp_ln130_26_fu_2728_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_26_fu_2734_p1);

assign select_ln216_27_fu_2788_p3 = ((icmp_ln130_27_fu_2778_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_27_fu_2784_p1);

assign select_ln216_28_fu_2838_p3 = ((icmp_ln130_28_fu_2828_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_28_fu_2834_p1);

assign select_ln216_29_fu_2888_p3 = ((icmp_ln130_29_fu_2878_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_29_fu_2884_p1);

assign select_ln216_2_fu_1538_p3 = ((icmp_ln130_2_fu_1528_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_2_fu_1534_p1);

assign select_ln216_30_fu_2938_p3 = ((icmp_ln130_30_fu_2928_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_30_fu_2934_p1);

assign select_ln216_31_fu_2988_p3 = ((icmp_ln130_31_fu_2978_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_31_fu_2984_p1);

assign select_ln216_3_fu_1588_p3 = ((icmp_ln130_3_fu_1578_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_3_fu_1584_p1);

assign select_ln216_4_fu_1638_p3 = ((icmp_ln130_4_fu_1628_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_4_fu_1634_p1);

assign select_ln216_5_fu_1688_p3 = ((icmp_ln130_5_fu_1678_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_5_fu_1684_p1);

assign select_ln216_6_fu_1738_p3 = ((icmp_ln130_6_fu_1728_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_6_fu_1734_p1);

assign select_ln216_7_fu_1788_p3 = ((icmp_ln130_7_fu_1778_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_7_fu_1784_p1);

assign select_ln216_8_fu_1838_p3 = ((icmp_ln130_8_fu_1828_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_8_fu_1834_p1);

assign select_ln216_9_fu_1888_p3 = ((icmp_ln130_9_fu_1878_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_9_fu_1884_p1);

assign select_ln216_fu_1438_p3 = ((icmp_ln130_fu_1428_p2[0:0] == 1'b1) ? 8'd128 : trunc_ln216_fu_1434_p1);

assign sext_ln541_10_fu_846_p1 = $signed(l_val_V_10_reg_3306);

assign sext_ln541_11_fu_871_p1 = $signed(l_val_V_11_reg_3311);

assign sext_ln541_12_fu_896_p1 = $signed(l_val_V_12_reg_3316);

assign sext_ln541_13_fu_921_p1 = $signed(l_val_V_13_reg_3321);

assign sext_ln541_14_fu_946_p1 = $signed(l_val_V_14_reg_3326);

assign sext_ln541_15_fu_971_p1 = $signed(l_val_V_15_reg_3331);

assign sext_ln541_16_fu_996_p1 = $signed(l_val_V_16_reg_3336);

assign sext_ln541_17_fu_1021_p1 = $signed(l_val_V_17_reg_3341);

assign sext_ln541_18_fu_1046_p1 = $signed(l_val_V_18_reg_3346);

assign sext_ln541_19_fu_1071_p1 = $signed(l_val_V_19_reg_3351);

assign sext_ln541_1_fu_621_p1 = $signed(l_val_V_1_reg_3261);

assign sext_ln541_20_fu_1096_p1 = $signed(l_val_V_20_reg_3356);

assign sext_ln541_21_fu_1121_p1 = $signed(l_val_V_21_reg_3361);

assign sext_ln541_22_fu_1146_p1 = $signed(l_val_V_22_reg_3366);

assign sext_ln541_23_fu_1171_p1 = $signed(l_val_V_23_reg_3371);

assign sext_ln541_24_fu_1196_p1 = $signed(l_val_V_24_reg_3376);

assign sext_ln541_25_fu_1221_p1 = $signed(l_val_V_25_reg_3381);

assign sext_ln541_26_fu_1246_p1 = $signed(l_val_V_26_reg_3386);

assign sext_ln541_27_fu_1271_p1 = $signed(l_val_V_27_reg_3391);

assign sext_ln541_28_fu_1296_p1 = $signed(l_val_V_28_reg_3396);

assign sext_ln541_29_fu_1321_p1 = $signed(l_val_V_29_reg_3401);

assign sext_ln541_2_fu_646_p1 = $signed(l_val_V_2_reg_3266);

assign sext_ln541_30_fu_1346_p1 = $signed(l_val_V_30_reg_3406);

assign sext_ln541_31_fu_1371_p1 = $signed(l_val_V_31_reg_3411);

assign sext_ln541_3_fu_671_p1 = $signed(l_val_V_3_reg_3271);

assign sext_ln541_4_fu_696_p1 = $signed(l_val_V_4_reg_3276);

assign sext_ln541_5_fu_721_p1 = $signed(l_val_V_5_reg_3281);

assign sext_ln541_6_fu_746_p1 = $signed(l_val_V_6_reg_3286);

assign sext_ln541_7_fu_771_p1 = $signed(l_val_V_7_reg_3291);

assign sext_ln541_8_fu_796_p1 = $signed(l_val_V_8_reg_3296);

assign sext_ln541_9_fu_821_p1 = $signed(l_val_V_9_reg_3301);

assign sext_ln541_fu_596_p1 = $signed(l_val_V_reg_3256);

assign sh_prom18_cast_fu_245_p1 = sh_prom18;

assign sh_prom_cast_fu_253_p1 = sh_prom;

assign shl_ln121_10_fu_849_p2 = sext_ln541_10_fu_846_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_11_fu_874_p2 = sext_ln541_11_fu_871_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_12_fu_899_p2 = sext_ln541_12_fu_896_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_13_fu_924_p2 = sext_ln541_13_fu_921_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_14_fu_949_p2 = sext_ln541_14_fu_946_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_15_fu_974_p2 = sext_ln541_15_fu_971_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_16_fu_999_p2 = sext_ln541_16_fu_996_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_17_fu_1024_p2 = sext_ln541_17_fu_1021_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_18_fu_1049_p2 = sext_ln541_18_fu_1046_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_19_fu_1074_p2 = sext_ln541_19_fu_1071_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_1_fu_624_p2 = sext_ln541_1_fu_621_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_20_fu_1099_p2 = sext_ln541_20_fu_1096_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_21_fu_1124_p2 = sext_ln541_21_fu_1121_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_22_fu_1149_p2 = sext_ln541_22_fu_1146_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_23_fu_1174_p2 = sext_ln541_23_fu_1171_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_24_fu_1199_p2 = sext_ln541_24_fu_1196_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_25_fu_1224_p2 = sext_ln541_25_fu_1221_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_26_fu_1249_p2 = sext_ln541_26_fu_1246_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_27_fu_1274_p2 = sext_ln541_27_fu_1271_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_28_fu_1299_p2 = sext_ln541_28_fu_1296_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_29_fu_1324_p2 = sext_ln541_29_fu_1321_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_2_fu_649_p2 = sext_ln541_2_fu_646_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_30_fu_1349_p2 = sext_ln541_30_fu_1346_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_31_fu_1374_p2 = sext_ln541_31_fu_1371_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_3_fu_674_p2 = sext_ln541_3_fu_671_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_4_fu_699_p2 = sext_ln541_4_fu_696_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_5_fu_724_p2 = sext_ln541_5_fu_721_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_6_fu_749_p2 = sext_ln541_6_fu_746_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_7_fu_774_p2 = sext_ln541_7_fu_771_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_8_fu_799_p2 = sext_ln541_8_fu_796_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_9_fu_824_p2 = sext_ln541_9_fu_821_p1 << sh_prom_cast_reg_3216;

assign shl_ln121_fu_599_p2 = sext_ln541_fu_596_p1 << sh_prom_cast_reg_3216;

assign tmp_10_fu_1904_p4 = {{ashr_ln127_10_fu_1896_p2[32:7]}};

assign tmp_11_fu_1954_p4 = {{ashr_ln127_11_fu_1946_p2[32:7]}};

assign tmp_12_fu_2004_p4 = {{ashr_ln127_12_fu_1996_p2[32:7]}};

assign tmp_13_fu_2054_p4 = {{ashr_ln127_13_fu_2046_p2[32:7]}};

assign tmp_14_fu_2104_p4 = {{ashr_ln127_14_fu_2096_p2[32:7]}};

assign tmp_15_fu_2154_p4 = {{ashr_ln127_15_fu_2146_p2[32:7]}};

assign tmp_16_fu_2204_p4 = {{ashr_ln127_16_fu_2196_p2[32:7]}};

assign tmp_17_fu_2254_p4 = {{ashr_ln127_17_fu_2246_p2[32:7]}};

assign tmp_18_fu_2304_p4 = {{ashr_ln127_18_fu_2296_p2[32:7]}};

assign tmp_19_fu_2354_p4 = {{ashr_ln127_19_fu_2346_p2[32:7]}};

assign tmp_1_fu_1454_p4 = {{ashr_ln127_1_fu_1446_p2[32:7]}};

assign tmp_20_fu_2404_p4 = {{ashr_ln127_20_fu_2396_p2[32:7]}};

assign tmp_21_fu_2454_p4 = {{ashr_ln127_21_fu_2446_p2[32:7]}};

assign tmp_22_fu_2504_p4 = {{ashr_ln127_22_fu_2496_p2[32:7]}};

assign tmp_23_fu_2554_p4 = {{ashr_ln127_23_fu_2546_p2[32:7]}};

assign tmp_24_fu_2604_p4 = {{ashr_ln127_24_fu_2596_p2[32:7]}};

assign tmp_25_fu_2654_p4 = {{ashr_ln127_25_fu_2646_p2[32:7]}};

assign tmp_26_fu_2704_p4 = {{ashr_ln127_26_fu_2696_p2[32:7]}};

assign tmp_27_fu_2754_p4 = {{ashr_ln127_27_fu_2746_p2[32:7]}};

assign tmp_28_fu_2804_p4 = {{ashr_ln127_28_fu_2796_p2[32:7]}};

assign tmp_29_fu_2854_p4 = {{ashr_ln127_29_fu_2846_p2[32:7]}};

assign tmp_2_fu_1504_p4 = {{ashr_ln127_2_fu_1496_p2[32:7]}};

assign tmp_30_fu_2904_p4 = {{ashr_ln127_30_fu_2896_p2[32:7]}};

assign tmp_31_fu_2954_p4 = {{ashr_ln127_31_fu_2946_p2[32:7]}};

assign tmp_3_fu_1554_p4 = {{ashr_ln127_3_fu_1546_p2[32:7]}};

assign tmp_4_fu_1604_p4 = {{ashr_ln127_4_fu_1596_p2[32:7]}};

assign tmp_5_fu_1654_p4 = {{ashr_ln127_5_fu_1646_p2[32:7]}};

assign tmp_6_fu_1704_p4 = {{ashr_ln127_6_fu_1696_p2[32:7]}};

assign tmp_7_fu_1754_p4 = {{ashr_ln127_7_fu_1746_p2[32:7]}};

assign tmp_8_fu_1804_p4 = {{ashr_ln127_8_fu_1796_p2[32:7]}};

assign tmp_9_fu_1854_p4 = {{ashr_ln127_9_fu_1846_p2[32:7]}};

assign tmp_fu_1404_p4 = {{ashr_ln127_fu_1396_p2[32:7]}};

assign trunc_ln129_10_fu_1900_p1 = ashr_ln127_10_fu_1896_p2[32:0];

assign trunc_ln129_11_fu_1950_p1 = ashr_ln127_11_fu_1946_p2[32:0];

assign trunc_ln129_12_fu_2000_p1 = ashr_ln127_12_fu_1996_p2[32:0];

assign trunc_ln129_13_fu_2050_p1 = ashr_ln127_13_fu_2046_p2[32:0];

assign trunc_ln129_14_fu_2100_p1 = ashr_ln127_14_fu_2096_p2[32:0];

assign trunc_ln129_15_fu_2150_p1 = ashr_ln127_15_fu_2146_p2[32:0];

assign trunc_ln129_16_fu_2200_p1 = ashr_ln127_16_fu_2196_p2[32:0];

assign trunc_ln129_17_fu_2250_p1 = ashr_ln127_17_fu_2246_p2[32:0];

assign trunc_ln129_18_fu_2300_p1 = ashr_ln127_18_fu_2296_p2[32:0];

assign trunc_ln129_19_fu_2350_p1 = ashr_ln127_19_fu_2346_p2[32:0];

assign trunc_ln129_1_fu_1450_p1 = ashr_ln127_1_fu_1446_p2[32:0];

assign trunc_ln129_20_fu_2400_p1 = ashr_ln127_20_fu_2396_p2[32:0];

assign trunc_ln129_21_fu_2450_p1 = ashr_ln127_21_fu_2446_p2[32:0];

assign trunc_ln129_22_fu_2500_p1 = ashr_ln127_22_fu_2496_p2[32:0];

assign trunc_ln129_23_fu_2550_p1 = ashr_ln127_23_fu_2546_p2[32:0];

assign trunc_ln129_24_fu_2600_p1 = ashr_ln127_24_fu_2596_p2[32:0];

assign trunc_ln129_25_fu_2650_p1 = ashr_ln127_25_fu_2646_p2[32:0];

assign trunc_ln129_26_fu_2700_p1 = ashr_ln127_26_fu_2696_p2[32:0];

assign trunc_ln129_27_fu_2750_p1 = ashr_ln127_27_fu_2746_p2[32:0];

assign trunc_ln129_28_fu_2800_p1 = ashr_ln127_28_fu_2796_p2[32:0];

assign trunc_ln129_29_fu_2850_p1 = ashr_ln127_29_fu_2846_p2[32:0];

assign trunc_ln129_2_fu_1500_p1 = ashr_ln127_2_fu_1496_p2[32:0];

assign trunc_ln129_30_fu_2900_p1 = ashr_ln127_30_fu_2896_p2[32:0];

assign trunc_ln129_31_fu_2950_p1 = ashr_ln127_31_fu_2946_p2[32:0];

assign trunc_ln129_3_fu_1550_p1 = ashr_ln127_3_fu_1546_p2[32:0];

assign trunc_ln129_4_fu_1600_p1 = ashr_ln127_4_fu_1596_p2[32:0];

assign trunc_ln129_5_fu_1650_p1 = ashr_ln127_5_fu_1646_p2[32:0];

assign trunc_ln129_6_fu_1700_p1 = ashr_ln127_6_fu_1696_p2[32:0];

assign trunc_ln129_7_fu_1750_p1 = ashr_ln127_7_fu_1746_p2[32:0];

assign trunc_ln129_8_fu_1800_p1 = ashr_ln127_8_fu_1796_p2[32:0];

assign trunc_ln129_9_fu_1850_p1 = ashr_ln127_9_fu_1846_p2[32:0];

assign trunc_ln129_fu_1400_p1 = ashr_ln127_fu_1396_p2[32:0];

assign trunc_ln216_10_fu_1934_p1 = select_ln129_10_fu_1920_p3[7:0];

assign trunc_ln216_11_fu_1984_p1 = select_ln129_11_fu_1970_p3[7:0];

assign trunc_ln216_12_fu_2034_p1 = select_ln129_12_fu_2020_p3[7:0];

assign trunc_ln216_13_fu_2084_p1 = select_ln129_13_fu_2070_p3[7:0];

assign trunc_ln216_14_fu_2134_p1 = select_ln129_14_fu_2120_p3[7:0];

assign trunc_ln216_15_fu_2184_p1 = select_ln129_15_fu_2170_p3[7:0];

assign trunc_ln216_16_fu_2234_p1 = select_ln129_16_fu_2220_p3[7:0];

assign trunc_ln216_17_fu_2284_p1 = select_ln129_17_fu_2270_p3[7:0];

assign trunc_ln216_18_fu_2334_p1 = select_ln129_18_fu_2320_p3[7:0];

assign trunc_ln216_19_fu_2384_p1 = select_ln129_19_fu_2370_p3[7:0];

assign trunc_ln216_1_fu_1484_p1 = select_ln129_1_fu_1470_p3[7:0];

assign trunc_ln216_20_fu_2434_p1 = select_ln129_20_fu_2420_p3[7:0];

assign trunc_ln216_21_fu_2484_p1 = select_ln129_21_fu_2470_p3[7:0];

assign trunc_ln216_22_fu_2534_p1 = select_ln129_22_fu_2520_p3[7:0];

assign trunc_ln216_23_fu_2584_p1 = select_ln129_23_fu_2570_p3[7:0];

assign trunc_ln216_24_fu_2634_p1 = select_ln129_24_fu_2620_p3[7:0];

assign trunc_ln216_25_fu_2684_p1 = select_ln129_25_fu_2670_p3[7:0];

assign trunc_ln216_26_fu_2734_p1 = select_ln129_26_fu_2720_p3[7:0];

assign trunc_ln216_27_fu_2784_p1 = select_ln129_27_fu_2770_p3[7:0];

assign trunc_ln216_28_fu_2834_p1 = select_ln129_28_fu_2820_p3[7:0];

assign trunc_ln216_29_fu_2884_p1 = select_ln129_29_fu_2870_p3[7:0];

assign trunc_ln216_2_fu_1534_p1 = select_ln129_2_fu_1520_p3[7:0];

assign trunc_ln216_30_fu_2934_p1 = select_ln129_30_fu_2920_p3[7:0];

assign trunc_ln216_31_fu_2984_p1 = select_ln129_31_fu_2970_p3[7:0];

assign trunc_ln216_3_fu_1584_p1 = select_ln129_3_fu_1570_p3[7:0];

assign trunc_ln216_4_fu_1634_p1 = select_ln129_4_fu_1620_p3[7:0];

assign trunc_ln216_5_fu_1684_p1 = select_ln129_5_fu_1670_p3[7:0];

assign trunc_ln216_6_fu_1734_p1 = select_ln129_6_fu_1720_p3[7:0];

assign trunc_ln216_7_fu_1784_p1 = select_ln129_7_fu_1770_p3[7:0];

assign trunc_ln216_8_fu_1834_p1 = select_ln129_8_fu_1820_p3[7:0];

assign trunc_ln216_9_fu_1884_p1 = select_ln129_9_fu_1870_p3[7:0];

assign trunc_ln216_fu_1434_p1 = select_ln129_fu_1420_p3[7:0];

always @ (posedge ap_clk) begin
    sh_prom18_cast_reg_3144[63:32] <= 32'b00000000000000000000000000000000;
    sh_prom_cast_reg_3216[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //sparse_quant_ap_uint_256_ap_int_32_ap_int_8_32u_Pipeline_VITIS_LOOP_113_1
