-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity layernorm_p_anonymous_namespace_DataMover_B_ap_int_8_ap_uint_256_5u_Pipeline_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_ln_paras_AWVALID : OUT STD_LOGIC;
    m_axi_ln_paras_AWREADY : IN STD_LOGIC;
    m_axi_ln_paras_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ln_paras_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ln_paras_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ln_paras_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ln_paras_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ln_paras_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ln_paras_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ln_paras_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ln_paras_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ln_paras_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ln_paras_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ln_paras_WVALID : OUT STD_LOGIC;
    m_axi_ln_paras_WREADY : IN STD_LOGIC;
    m_axi_ln_paras_WDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    m_axi_ln_paras_WSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ln_paras_WLAST : OUT STD_LOGIC;
    m_axi_ln_paras_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ln_paras_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ln_paras_ARVALID : OUT STD_LOGIC;
    m_axi_ln_paras_ARREADY : IN STD_LOGIC;
    m_axi_ln_paras_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ln_paras_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ln_paras_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ln_paras_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ln_paras_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ln_paras_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ln_paras_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ln_paras_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ln_paras_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ln_paras_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ln_paras_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ln_paras_RVALID : IN STD_LOGIC;
    m_axi_ln_paras_RREADY : OUT STD_LOGIC;
    m_axi_ln_paras_RDATA : IN STD_LOGIC_VECTOR (255 downto 0);
    m_axi_ln_paras_RLAST : IN STD_LOGIC;
    m_axi_ln_paras_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ln_paras_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_ln_paras_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ln_paras_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ln_paras_BVALID : IN STD_LOGIC;
    m_axi_ln_paras_BREADY : OUT STD_LOGIC;
    m_axi_ln_paras_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ln_paras_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ln_paras_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    trunc_ln96_3 : IN STD_LOGIC_VECTOR (13 downto 0);
    sext_ln96 : IN STD_LOGIC_VECTOR (32 downto 0);
    add_ln96 : IN STD_LOGIC_VECTOR (63 downto 0);
    sub_ln96_cast : IN STD_LOGIC_VECTOR (4 downto 0);
    trunc_ln : IN STD_LOGIC_VECTOR (4 downto 0);
    gamma_ram_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    gamma_ram_ce0 : OUT STD_LOGIC;
    gamma_ram_we0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    gamma_ram_d0 : OUT STD_LOGIC_VECTOR (255 downto 0);
    trunc_ln96_1 : IN STD_LOGIC_VECTOR (4 downto 0) );
end;


architecture behav of layernorm_p_anonymous_namespace_DataMover_B_ap_int_8_ap_uint_256_5u_Pipeline_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter40 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter40 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal exitcond8_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ln_paras_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ln_paras_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal residual_loop_index7_load_reg_334 : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter8_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter9_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter10_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter11_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter12_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter13_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter14_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter15_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter16_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter17_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter18_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter19_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter20_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter21_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter22_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter23_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter24_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter25_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter26_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter27_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter28_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter29_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter30_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter31_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter32_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter33_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter34_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter35_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter36_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter37_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter38_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal residual_loop_index7_load_reg_334_pp0_iter39_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast4_reg_340 : STD_LOGIC_VECTOR (58 downto 0);
    signal ln_paras_addr_read_reg_355 : STD_LOGIC_VECTOR (255 downto 0);
    signal p_cast8_cast_fu_307_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast4_cast_fu_215_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal residual_loop_index7_fu_92 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_254_fu_198_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_residual_loop_index7_load : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_252_fu_271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln96_cast_fu_156_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal residual_loop_index7_cast11_fu_168_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_fu_172_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_cast_fu_178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_248_fu_182_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal residual_loop_index7_cast_fu_225_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp1_fu_233_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_249_fu_237_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_242_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast19_fu_250_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal empty_250_fu_254_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal empty_251_fu_259_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast20_fu_267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_278_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast6_cast_fu_263_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal p_cast21_fu_286_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal empty_fu_228_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_5_fu_297_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter21_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter22_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter23_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter24_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter25_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter26_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter27_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter28_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter29_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter30_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter31_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter32_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter33_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter34_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter35_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter36_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter37_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter38_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter39_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter40_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component layernorm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component layernorm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter40_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter40_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_exit_ready_pp0_iter39_reg = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                ap_loop_exit_ready_pp0_iter40_reg <= ap_const_logic_0;
            elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
            end if; 
        end if;
    end process;

    residual_loop_index7_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((exitcond8_fu_204_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    residual_loop_index7_fu_92 <= empty_254_fu_198_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    residual_loop_index7_fu_92 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
                ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
                ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
                ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
                ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
                ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
                ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
                ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
                ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
                ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
                ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
                ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
                ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
                ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
                ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
                ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
                ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
                ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
                ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
                ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                ln_paras_addr_read_reg_355 <= m_axi_ln_paras_RDATA;
                residual_loop_index7_load_reg_334_pp0_iter10_reg <= residual_loop_index7_load_reg_334_pp0_iter9_reg;
                residual_loop_index7_load_reg_334_pp0_iter11_reg <= residual_loop_index7_load_reg_334_pp0_iter10_reg;
                residual_loop_index7_load_reg_334_pp0_iter12_reg <= residual_loop_index7_load_reg_334_pp0_iter11_reg;
                residual_loop_index7_load_reg_334_pp0_iter13_reg <= residual_loop_index7_load_reg_334_pp0_iter12_reg;
                residual_loop_index7_load_reg_334_pp0_iter14_reg <= residual_loop_index7_load_reg_334_pp0_iter13_reg;
                residual_loop_index7_load_reg_334_pp0_iter15_reg <= residual_loop_index7_load_reg_334_pp0_iter14_reg;
                residual_loop_index7_load_reg_334_pp0_iter16_reg <= residual_loop_index7_load_reg_334_pp0_iter15_reg;
                residual_loop_index7_load_reg_334_pp0_iter17_reg <= residual_loop_index7_load_reg_334_pp0_iter16_reg;
                residual_loop_index7_load_reg_334_pp0_iter18_reg <= residual_loop_index7_load_reg_334_pp0_iter17_reg;
                residual_loop_index7_load_reg_334_pp0_iter19_reg <= residual_loop_index7_load_reg_334_pp0_iter18_reg;
                residual_loop_index7_load_reg_334_pp0_iter20_reg <= residual_loop_index7_load_reg_334_pp0_iter19_reg;
                residual_loop_index7_load_reg_334_pp0_iter21_reg <= residual_loop_index7_load_reg_334_pp0_iter20_reg;
                residual_loop_index7_load_reg_334_pp0_iter22_reg <= residual_loop_index7_load_reg_334_pp0_iter21_reg;
                residual_loop_index7_load_reg_334_pp0_iter23_reg <= residual_loop_index7_load_reg_334_pp0_iter22_reg;
                residual_loop_index7_load_reg_334_pp0_iter24_reg <= residual_loop_index7_load_reg_334_pp0_iter23_reg;
                residual_loop_index7_load_reg_334_pp0_iter25_reg <= residual_loop_index7_load_reg_334_pp0_iter24_reg;
                residual_loop_index7_load_reg_334_pp0_iter26_reg <= residual_loop_index7_load_reg_334_pp0_iter25_reg;
                residual_loop_index7_load_reg_334_pp0_iter27_reg <= residual_loop_index7_load_reg_334_pp0_iter26_reg;
                residual_loop_index7_load_reg_334_pp0_iter28_reg <= residual_loop_index7_load_reg_334_pp0_iter27_reg;
                residual_loop_index7_load_reg_334_pp0_iter29_reg <= residual_loop_index7_load_reg_334_pp0_iter28_reg;
                residual_loop_index7_load_reg_334_pp0_iter2_reg <= residual_loop_index7_load_reg_334_pp0_iter1_reg;
                residual_loop_index7_load_reg_334_pp0_iter30_reg <= residual_loop_index7_load_reg_334_pp0_iter29_reg;
                residual_loop_index7_load_reg_334_pp0_iter31_reg <= residual_loop_index7_load_reg_334_pp0_iter30_reg;
                residual_loop_index7_load_reg_334_pp0_iter32_reg <= residual_loop_index7_load_reg_334_pp0_iter31_reg;
                residual_loop_index7_load_reg_334_pp0_iter33_reg <= residual_loop_index7_load_reg_334_pp0_iter32_reg;
                residual_loop_index7_load_reg_334_pp0_iter34_reg <= residual_loop_index7_load_reg_334_pp0_iter33_reg;
                residual_loop_index7_load_reg_334_pp0_iter35_reg <= residual_loop_index7_load_reg_334_pp0_iter34_reg;
                residual_loop_index7_load_reg_334_pp0_iter36_reg <= residual_loop_index7_load_reg_334_pp0_iter35_reg;
                residual_loop_index7_load_reg_334_pp0_iter37_reg <= residual_loop_index7_load_reg_334_pp0_iter36_reg;
                residual_loop_index7_load_reg_334_pp0_iter38_reg <= residual_loop_index7_load_reg_334_pp0_iter37_reg;
                residual_loop_index7_load_reg_334_pp0_iter39_reg <= residual_loop_index7_load_reg_334_pp0_iter38_reg;
                residual_loop_index7_load_reg_334_pp0_iter3_reg <= residual_loop_index7_load_reg_334_pp0_iter2_reg;
                residual_loop_index7_load_reg_334_pp0_iter4_reg <= residual_loop_index7_load_reg_334_pp0_iter3_reg;
                residual_loop_index7_load_reg_334_pp0_iter5_reg <= residual_loop_index7_load_reg_334_pp0_iter4_reg;
                residual_loop_index7_load_reg_334_pp0_iter6_reg <= residual_loop_index7_load_reg_334_pp0_iter5_reg;
                residual_loop_index7_load_reg_334_pp0_iter7_reg <= residual_loop_index7_load_reg_334_pp0_iter6_reg;
                residual_loop_index7_load_reg_334_pp0_iter8_reg <= residual_loop_index7_load_reg_334_pp0_iter7_reg;
                residual_loop_index7_load_reg_334_pp0_iter9_reg <= residual_loop_index7_load_reg_334_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                p_cast4_reg_340 <= empty_248_fu_182_p2(63 downto 5);
                residual_loop_index7_load_reg_334 <= ap_sig_allocacmp_residual_loop_index7_load;
                residual_loop_index7_load_reg_334_pp0_iter1_reg <= residual_loop_index7_load_reg_334;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter39, m_axi_ln_paras_ARREADY, m_axi_ln_paras_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= (((m_axi_ln_paras_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_ln_paras_ARREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter39, m_axi_ln_paras_ARREADY, m_axi_ln_paras_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= (((m_axi_ln_paras_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_ln_paras_ARREADY = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state40_pp0_stage0_iter39_assign_proc : process(m_axi_ln_paras_RVALID)
    begin
                ap_block_state40_pp0_stage0_iter39 <= (m_axi_ln_paras_RVALID = ap_const_logic_0);
    end process;

        ap_block_state41_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, exitcond8_fu_204_p2)
    begin
        if (((exitcond8_fu_204_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter40_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter40_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_residual_loop_index7_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, residual_loop_index7_fu_92, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_residual_loop_index7_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_residual_loop_index7_load <= residual_loop_index7_fu_92;
        end if; 
    end process;

    empty_248_fu_182_p2 <= std_logic_vector(signed(tmp_cast_fu_178_p1) + signed(add_ln96));
    empty_249_fu_237_p2 <= std_logic_vector(unsigned(tmp1_fu_233_p2) + unsigned(trunc_ln));
    empty_250_fu_254_p2 <= std_logic_vector(shift_right(unsigned(ln_paras_addr_read_reg_355),to_integer(unsigned('0' & p_cast19_fu_250_p1(31-1 downto 0)))));
    empty_251_fu_259_p1 <= empty_250_fu_254_p2(8 - 1 downto 0);
    empty_252_fu_271_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & p_cast20_fu_267_p1(31-1 downto 0)))));
    empty_254_fu_198_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_residual_loop_index7_load) + unsigned(ap_const_lv5_1));
    empty_fu_228_p2 <= std_logic_vector(unsigned(trunc_ln96_3) + unsigned(residual_loop_index7_cast_fu_225_p1));
    exitcond8_fu_204_p2 <= "1" when (empty_254_fu_198_p2 = trunc_ln96_1) else "0";
    gamma_ram_address0 <= p_cast8_cast_fu_307_p1(9 - 1 downto 0);

    gamma_ram_ce0_assign_proc : process(ap_enable_reg_pp0_iter40, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            gamma_ram_ce0 <= ap_const_logic_1;
        else 
            gamma_ram_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    gamma_ram_d0 <= std_logic_vector(shift_left(unsigned(p_cast6_cast_fu_263_p1),to_integer(unsigned('0' & p_cast21_fu_286_p1(31-1 downto 0)))));

    gamma_ram_we0_assign_proc : process(ap_enable_reg_pp0_iter40, ap_block_pp0_stage0_11001, empty_252_fu_271_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            gamma_ram_we0 <= empty_252_fu_271_p2;
        else 
            gamma_ram_we0 <= ap_const_lv32_0;
        end if; 
    end process;


    ln_paras_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_ln_paras_ARREADY, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ln_paras_blk_n_AR <= m_axi_ln_paras_ARREADY;
        else 
            ln_paras_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    ln_paras_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter39, m_axi_ln_paras_RVALID, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1))) then 
            ln_paras_blk_n_R <= m_axi_ln_paras_RVALID;
        else 
            ln_paras_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    m_axi_ln_paras_ARADDR <= p_cast4_cast_fu_215_p1;
    m_axi_ln_paras_ARBURST <= ap_const_lv2_0;
    m_axi_ln_paras_ARCACHE <= ap_const_lv4_0;
    m_axi_ln_paras_ARID <= ap_const_lv1_0;
    m_axi_ln_paras_ARLEN <= ap_const_lv32_1;
    m_axi_ln_paras_ARLOCK <= ap_const_lv2_0;
    m_axi_ln_paras_ARPROT <= ap_const_lv3_0;
    m_axi_ln_paras_ARQOS <= ap_const_lv4_0;
    m_axi_ln_paras_ARREGION <= ap_const_lv4_0;
    m_axi_ln_paras_ARSIZE <= ap_const_lv3_0;
    m_axi_ln_paras_ARUSER <= ap_const_lv1_0;

    m_axi_ln_paras_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_ln_paras_ARVALID <= ap_const_logic_1;
        else 
            m_axi_ln_paras_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ln_paras_AWADDR <= ap_const_lv64_0;
    m_axi_ln_paras_AWBURST <= ap_const_lv2_0;
    m_axi_ln_paras_AWCACHE <= ap_const_lv4_0;
    m_axi_ln_paras_AWID <= ap_const_lv1_0;
    m_axi_ln_paras_AWLEN <= ap_const_lv32_0;
    m_axi_ln_paras_AWLOCK <= ap_const_lv2_0;
    m_axi_ln_paras_AWPROT <= ap_const_lv3_0;
    m_axi_ln_paras_AWQOS <= ap_const_lv4_0;
    m_axi_ln_paras_AWREGION <= ap_const_lv4_0;
    m_axi_ln_paras_AWSIZE <= ap_const_lv3_0;
    m_axi_ln_paras_AWUSER <= ap_const_lv1_0;
    m_axi_ln_paras_AWVALID <= ap_const_logic_0;
    m_axi_ln_paras_BREADY <= ap_const_logic_0;

    m_axi_ln_paras_RREADY_assign_proc : process(ap_enable_reg_pp0_iter39, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1))) then 
            m_axi_ln_paras_RREADY <= ap_const_logic_1;
        else 
            m_axi_ln_paras_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ln_paras_WDATA <= ap_const_lv256_lc_1;
    m_axi_ln_paras_WID <= ap_const_lv1_0;
    m_axi_ln_paras_WLAST <= ap_const_logic_0;
    m_axi_ln_paras_WSTRB <= ap_const_lv32_0;
    m_axi_ln_paras_WUSER <= ap_const_lv1_0;
    m_axi_ln_paras_WVALID <= ap_const_logic_0;
    p_cast19_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_242_p3),256));
    p_cast20_fu_267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_233_p2),32));
    p_cast21_fu_286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_278_p3),256));
        p_cast4_cast_fu_215_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast4_reg_340),64));

    p_cast6_cast_fu_263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_251_fu_259_p1),256));
    p_cast8_cast_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_297_p4),64));
    residual_loop_index7_cast11_fu_168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_residual_loop_index7_load),34));
    residual_loop_index7_cast_fu_225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(residual_loop_index7_load_reg_334_pp0_iter39_reg),14));
        sext_ln96_cast_fu_156_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln96),34));

    tmp1_fu_233_p2 <= std_logic_vector(unsigned(sub_ln96_cast) + unsigned(residual_loop_index7_load_reg_334_pp0_iter39_reg));
    tmp_3_fu_242_p3 <= (empty_249_fu_237_p2 & ap_const_lv3_0);
    tmp_4_fu_278_p3 <= (tmp1_fu_233_p2 & ap_const_lv3_0);
    tmp_5_fu_297_p4 <= empty_fu_228_p2(13 downto 5);
        tmp_cast_fu_178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_172_p2),64));

    tmp_fu_172_p2 <= std_logic_vector(signed(sext_ln96_cast_fu_156_p1) + signed(residual_loop_index7_cast11_fu_168_p1));
end behav;
