-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity layernorm_p_anonymous_namespace_DataMover_A_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_45_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_copy_a1_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    data_copy_a1_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    data_copy_a1_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    data_copy_a1_full_n : IN STD_LOGIC;
    data_copy_a1_write : OUT STD_LOGIC;
    data_copy_c3_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    data_copy_c3_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    data_copy_c3_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    data_copy_c3_full_n : IN STD_LOGIC;
    data_copy_c3_write : OUT STD_LOGIC;
    data_copy_b2_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    data_copy_b2_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    data_copy_b2_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    data_copy_b2_full_n : IN STD_LOGIC;
    data_copy_b2_write : OUT STD_LOGIC;
    ram_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ram_V_ce0 : OUT STD_LOGIC;
    ram_V_q0 : IN STD_LOGIC_VECTOR (255 downto 0);
    ram_depth_1 : IN STD_LOGIC_VECTOR (26 downto 0) );
end;


architecture behav of layernorm_p_anonymous_namespace_DataMover_A_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_45_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal stream_c_done_reg_153 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_reg_384 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op55_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal data_copy_c3_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_1_reg_407 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_copy_b2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_ln57_reg_393 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_copy_a1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal stream_c_done_2_reg_165 : STD_LOGIC_VECTOR (0 downto 0);
    signal ram_depth_1_cast_fu_178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ram_depth_1_cast_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op71_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal or_ln47_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_predicate_op79_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_phi_mux_stream_c_done_phi_fu_157_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln57_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_c_addr_1_reg_397 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_1_nbwritereq_fu_99_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_c_done_1_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_stream_c_done_2_reg_165 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_stream_c_done_2_reg_165 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln49_fu_231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln59_fu_294_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln69_fu_336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_b_done_fu_50 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_b_done_1_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln57_1_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_a_done_fu_54 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_a_done_1_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_1_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_c_addr_fu_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_c_addr_2_fu_320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_b_addr_fu_62 : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_b_addr_2_fu_299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_a_addr_fu_66 : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_a_addr_2_fu_236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal xor_ln47_fu_213_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln47_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_1_fu_225_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln57_fu_265_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln57_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln57_1_fu_277_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_195 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component layernorm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component layernorm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_stream_c_done_2_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_195)) then
                if (((stream_c_done_reg_153 = ap_const_lv1_0) and (tmp_1_nbwritereq_fu_99_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_stream_c_done_2_reg_165 <= ap_const_lv1_0;
                elsif (((stream_c_done_reg_153 = ap_const_lv1_0) and (tmp_1_nbwritereq_fu_99_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_stream_c_done_2_reg_165 <= stream_c_done_1_fu_326_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_stream_c_done_2_reg_165 <= ap_phi_reg_pp0_iter0_stream_c_done_2_reg_165;
                end if;
            end if; 
        end if;
    end process;

    stream_a_addr_fu_66_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                stream_a_addr_fu_66 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_phi_mux_stream_c_done_phi_fu_157_p4 = ap_const_lv1_0) and (or_ln47_fu_219_p2 = ap_const_lv1_0))) then 
                stream_a_addr_fu_66 <= stream_a_addr_2_fu_236_p2;
            end if; 
        end if;
    end process;

    stream_a_done_fu_54_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                stream_a_done_fu_54 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_phi_mux_stream_c_done_phi_fu_157_p4 = ap_const_lv1_0) and (or_ln47_fu_219_p2 = ap_const_lv1_1))) then 
                stream_a_done_fu_54 <= or_ln47_1_fu_225_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_phi_mux_stream_c_done_phi_fu_157_p4 = ap_const_lv1_0) and (or_ln47_fu_219_p2 = ap_const_lv1_0))) then 
                stream_a_done_fu_54 <= stream_a_done_1_fu_242_p2;
            end if; 
        end if;
    end process;

    stream_b_addr_fu_62_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                stream_b_addr_fu_62 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (stream_c_done_reg_153 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln57_reg_393 = ap_const_lv1_0))) then 
                stream_b_addr_fu_62 <= stream_b_addr_2_fu_299_p2;
            end if; 
        end if;
    end process;

    stream_b_done_fu_50_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                stream_b_done_fu_50 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln57_fu_271_p2 = ap_const_lv1_1) and (ap_phi_mux_stream_c_done_phi_fu_157_p4 = ap_const_lv1_0))) then 
                stream_b_done_fu_50 <= or_ln57_1_fu_277_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (stream_c_done_reg_153 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln57_reg_393 = ap_const_lv1_0))) then 
                stream_b_done_fu_50 <= stream_b_done_1_fu_305_p2;
            end if; 
        end if;
    end process;

    stream_c_addr_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                stream_c_addr_fu_58 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (stream_c_done_reg_153 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_1_nbwritereq_fu_99_p3 = ap_const_lv1_1))) then 
                stream_c_addr_fu_58 <= stream_c_addr_2_fu_320_p2;
            end if; 
        end if;
    end process;

    stream_c_done_reg_153_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                stream_c_done_reg_153 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (stream_c_done_reg_153 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                stream_c_done_reg_153 <= stream_c_done_2_reg_165;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_phi_mux_stream_c_done_phi_fu_157_p4 = ap_const_lv1_0))) then
                or_ln47_reg_384 <= or_ln47_fu_219_p2;
                or_ln57_reg_393 <= or_ln57_fu_271_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ram_depth_1_cast_reg_377(26 downto 0) <= ram_depth_1_cast_fu_178_p1(26 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                stream_c_addr_1_reg_397 <= stream_c_addr_fu_58;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                stream_c_done_2_reg_165 <= ap_phi_reg_pp0_iter1_stream_c_done_2_reg_165;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (stream_c_done_reg_153 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_1_reg_407 <= (0=>data_copy_c3_full_n, others=>'-');
            end if;
        end if;
    end process;
    ram_depth_1_cast_reg_377(31 downto 27) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, data_copy_b2_full_n, ap_predicate_op71_write_state4)
    begin
                ap_block_pp0_stage0_01001 <= ((data_copy_b2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op71_write_state4 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, data_copy_b2_full_n, ap_predicate_op71_write_state4)
    begin
                ap_block_pp0_stage0_11001 <= ((data_copy_b2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op71_write_state4 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, data_copy_b2_full_n, ap_predicate_op71_write_state4)
    begin
                ap_block_pp0_stage0_subdone <= ((data_copy_b2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op71_write_state4 = ap_const_boolean_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter1, data_copy_c3_full_n, ap_predicate_op79_write_state5)
    begin
                ap_block_pp0_stage1_01001 <= ((data_copy_c3_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op79_write_state5 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, data_copy_c3_full_n, ap_predicate_op79_write_state5)
    begin
                ap_block_pp0_stage1_11001 <= ((data_copy_c3_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op79_write_state5 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, data_copy_c3_full_n, ap_predicate_op79_write_state5)
    begin
                ap_block_pp0_stage1_subdone <= ((data_copy_c3_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op79_write_state5 = ap_const_boolean_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, data_copy_a1_full_n, ap_predicate_op55_write_state3)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_predicate_op55_write_state3 = ap_const_boolean_1) and (data_copy_a1_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, data_copy_a1_full_n, ap_predicate_op55_write_state3)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_predicate_op55_write_state3 = ap_const_boolean_1) and (data_copy_a1_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, data_copy_a1_full_n, ap_predicate_op55_write_state3)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_predicate_op55_write_state3 = ap_const_boolean_1) and (data_copy_a1_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage2_iter0_assign_proc : process(data_copy_a1_full_n, ap_predicate_op55_write_state3)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((ap_predicate_op55_write_state3 = ap_const_boolean_1) and (data_copy_a1_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(data_copy_b2_full_n, ap_predicate_op71_write_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((data_copy_b2_full_n = ap_const_logic_0) and (ap_predicate_op71_write_state4 = ap_const_boolean_1));
    end process;


    ap_block_state5_pp0_stage1_iter1_assign_proc : process(data_copy_c3_full_n, ap_predicate_op79_write_state5)
    begin
                ap_block_state5_pp0_stage1_iter1 <= ((data_copy_c3_full_n = ap_const_logic_0) and (ap_predicate_op79_write_state5 = ap_const_boolean_1));
    end process;


    ap_condition_195_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
                ap_condition_195 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, stream_c_done_reg_153, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (stream_c_done_reg_153 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_phi_mux_stream_c_done_phi_fu_157_p4_assign_proc : process(ap_enable_reg_pp0_iter1, stream_c_done_reg_153, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, stream_c_done_2_reg_165)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (stream_c_done_reg_153 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_phi_mux_stream_c_done_phi_fu_157_p4 <= stream_c_done_2_reg_165;
        else 
            ap_phi_mux_stream_c_done_phi_fu_157_p4 <= stream_c_done_reg_153;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_stream_c_done_2_reg_165 <= "X";

    ap_predicate_op55_write_state3_assign_proc : process(stream_c_done_reg_153, or_ln47_reg_384)
    begin
                ap_predicate_op55_write_state3 <= ((or_ln47_reg_384 = ap_const_lv1_0) and (stream_c_done_reg_153 = ap_const_lv1_0));
    end process;


    ap_predicate_op71_write_state4_assign_proc : process(stream_c_done_reg_153, or_ln57_reg_393)
    begin
                ap_predicate_op71_write_state4 <= ((stream_c_done_reg_153 = ap_const_lv1_0) and (or_ln57_reg_393 = ap_const_lv1_0));
    end process;


    ap_predicate_op79_write_state5_assign_proc : process(stream_c_done_reg_153, tmp_1_reg_407)
    begin
                ap_predicate_op79_write_state5 <= ((tmp_1_reg_407 = ap_const_lv1_1) and (stream_c_done_reg_153 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    data_copy_a1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, data_copy_a1_full_n, ap_predicate_op55_write_state3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_predicate_op55_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            data_copy_a1_blk_n <= data_copy_a1_full_n;
        else 
            data_copy_a1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_copy_a1_din <= ram_V_q0;

    data_copy_a1_write_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_predicate_op55_write_state3, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_predicate_op55_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            data_copy_a1_write <= ap_const_logic_1;
        else 
            data_copy_a1_write <= ap_const_logic_0;
        end if; 
    end process;


    data_copy_b2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_c_done_reg_153, data_copy_b2_full_n, ap_block_pp0_stage0, or_ln57_reg_393)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (stream_c_done_reg_153 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln57_reg_393 = ap_const_lv1_0))) then 
            data_copy_b2_blk_n <= data_copy_b2_full_n;
        else 
            data_copy_b2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_copy_b2_din <= ram_V_q0;

    data_copy_b2_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op71_write_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op71_write_state4 = ap_const_boolean_1))) then 
            data_copy_b2_write <= ap_const_logic_1;
        else 
            data_copy_b2_write <= ap_const_logic_0;
        end if; 
    end process;


    data_copy_c3_blk_n_assign_proc : process(ap_enable_reg_pp0_iter1, stream_c_done_reg_153, data_copy_c3_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_1_reg_407)
    begin
        if (((tmp_1_reg_407 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (stream_c_done_reg_153 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            data_copy_c3_blk_n <= data_copy_c3_full_n;
        else 
            data_copy_c3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_copy_c3_din <= ram_V_q0;

    data_copy_c3_write_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_predicate_op79_write_state5, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_predicate_op79_write_state5 = ap_const_boolean_1))) then 
            data_copy_c3_write <= ap_const_logic_1;
        else 
            data_copy_c3_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln47_1_fu_225_p1 <= (0=>data_copy_a1_full_n, others=>'-');
    or_ln47_1_fu_225_p2 <= (stream_a_done_fu_54 or or_ln47_1_fu_225_p1);
    or_ln47_fu_219_p2 <= (xor_ln47_fu_213_p2 or stream_a_done_fu_54);
    or_ln57_1_fu_277_p1 <= (0=>data_copy_b2_full_n, others=>'-');
    or_ln57_1_fu_277_p2 <= (stream_b_done_fu_50 or or_ln57_1_fu_277_p1);
    or_ln57_fu_271_p2 <= (xor_ln57_fu_265_p2 or stream_b_done_fu_50);

    ram_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2, zext_ln49_fu_231_p1, zext_ln59_fu_294_p1, zext_ln69_fu_336_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ram_V_address0 <= zext_ln69_fu_336_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ram_V_address0 <= zext_ln59_fu_294_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ram_V_address0 <= zext_ln49_fu_231_p1(9 - 1 downto 0);
        else 
            ram_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ram_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ram_V_ce0 <= ap_const_logic_1;
        else 
            ram_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ram_depth_1_cast_fu_178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ram_depth_1),32));
    stream_a_addr_2_fu_236_p2 <= std_logic_vector(unsigned(stream_a_addr_fu_66) + unsigned(ap_const_lv32_1));
    stream_a_done_1_fu_242_p2 <= "1" when (stream_a_addr_2_fu_236_p2 = ram_depth_1_cast_reg_377) else "0";
    stream_b_addr_2_fu_299_p2 <= std_logic_vector(unsigned(stream_b_addr_fu_62) + unsigned(ap_const_lv32_1));
    stream_b_done_1_fu_305_p2 <= "1" when (stream_b_addr_2_fu_299_p2 = ram_depth_1_cast_reg_377) else "0";
    stream_c_addr_2_fu_320_p2 <= std_logic_vector(unsigned(stream_c_addr_fu_58) + unsigned(ap_const_lv32_1));
    stream_c_done_1_fu_326_p2 <= "1" when (stream_c_addr_2_fu_320_p2 = ram_depth_1_cast_reg_377) else "0";
    tmp_1_nbwritereq_fu_99_p3 <= (0=>data_copy_c3_full_n, others=>'-');
    xor_ln47_fu_213_p0 <= (0=>data_copy_a1_full_n, others=>'-');
    xor_ln47_fu_213_p2 <= (xor_ln47_fu_213_p0 xor ap_const_lv1_1);
    xor_ln57_fu_265_p0 <= (0=>data_copy_b2_full_n, others=>'-');
    xor_ln57_fu_265_p2 <= (xor_ln57_fu_265_p0 xor ap_const_lv1_1);
    zext_ln49_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(stream_a_addr_fu_66),64));
    zext_ln59_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(stream_b_addr_fu_62),64));
    zext_ln69_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(stream_c_addr_1_reg_397),64));
end behav;
