// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module layernorm_p_anonymous_namespace_DataMover_B_ap_int_8_ap_uint_256_5u_Pipeline_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_ln_paras_AWVALID,
        m_axi_ln_paras_AWREADY,
        m_axi_ln_paras_AWADDR,
        m_axi_ln_paras_AWID,
        m_axi_ln_paras_AWLEN,
        m_axi_ln_paras_AWSIZE,
        m_axi_ln_paras_AWBURST,
        m_axi_ln_paras_AWLOCK,
        m_axi_ln_paras_AWCACHE,
        m_axi_ln_paras_AWPROT,
        m_axi_ln_paras_AWQOS,
        m_axi_ln_paras_AWREGION,
        m_axi_ln_paras_AWUSER,
        m_axi_ln_paras_WVALID,
        m_axi_ln_paras_WREADY,
        m_axi_ln_paras_WDATA,
        m_axi_ln_paras_WSTRB,
        m_axi_ln_paras_WLAST,
        m_axi_ln_paras_WID,
        m_axi_ln_paras_WUSER,
        m_axi_ln_paras_ARVALID,
        m_axi_ln_paras_ARREADY,
        m_axi_ln_paras_ARADDR,
        m_axi_ln_paras_ARID,
        m_axi_ln_paras_ARLEN,
        m_axi_ln_paras_ARSIZE,
        m_axi_ln_paras_ARBURST,
        m_axi_ln_paras_ARLOCK,
        m_axi_ln_paras_ARCACHE,
        m_axi_ln_paras_ARPROT,
        m_axi_ln_paras_ARQOS,
        m_axi_ln_paras_ARREGION,
        m_axi_ln_paras_ARUSER,
        m_axi_ln_paras_RVALID,
        m_axi_ln_paras_RREADY,
        m_axi_ln_paras_RDATA,
        m_axi_ln_paras_RLAST,
        m_axi_ln_paras_RID,
        m_axi_ln_paras_RFIFONUM,
        m_axi_ln_paras_RUSER,
        m_axi_ln_paras_RRESP,
        m_axi_ln_paras_BVALID,
        m_axi_ln_paras_BREADY,
        m_axi_ln_paras_BRESP,
        m_axi_ln_paras_BID,
        m_axi_ln_paras_BUSER,
        trunc_ln96_3,
        sext_ln96,
        add_ln96,
        sub_ln96_cast,
        trunc_ln,
        gamma_ram_address0,
        gamma_ram_ce0,
        gamma_ram_we0,
        gamma_ram_d0,
        trunc_ln96_1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_ln_paras_AWVALID;
input   m_axi_ln_paras_AWREADY;
output  [63:0] m_axi_ln_paras_AWADDR;
output  [0:0] m_axi_ln_paras_AWID;
output  [31:0] m_axi_ln_paras_AWLEN;
output  [2:0] m_axi_ln_paras_AWSIZE;
output  [1:0] m_axi_ln_paras_AWBURST;
output  [1:0] m_axi_ln_paras_AWLOCK;
output  [3:0] m_axi_ln_paras_AWCACHE;
output  [2:0] m_axi_ln_paras_AWPROT;
output  [3:0] m_axi_ln_paras_AWQOS;
output  [3:0] m_axi_ln_paras_AWREGION;
output  [0:0] m_axi_ln_paras_AWUSER;
output   m_axi_ln_paras_WVALID;
input   m_axi_ln_paras_WREADY;
output  [255:0] m_axi_ln_paras_WDATA;
output  [31:0] m_axi_ln_paras_WSTRB;
output   m_axi_ln_paras_WLAST;
output  [0:0] m_axi_ln_paras_WID;
output  [0:0] m_axi_ln_paras_WUSER;
output   m_axi_ln_paras_ARVALID;
input   m_axi_ln_paras_ARREADY;
output  [63:0] m_axi_ln_paras_ARADDR;
output  [0:0] m_axi_ln_paras_ARID;
output  [31:0] m_axi_ln_paras_ARLEN;
output  [2:0] m_axi_ln_paras_ARSIZE;
output  [1:0] m_axi_ln_paras_ARBURST;
output  [1:0] m_axi_ln_paras_ARLOCK;
output  [3:0] m_axi_ln_paras_ARCACHE;
output  [2:0] m_axi_ln_paras_ARPROT;
output  [3:0] m_axi_ln_paras_ARQOS;
output  [3:0] m_axi_ln_paras_ARREGION;
output  [0:0] m_axi_ln_paras_ARUSER;
input   m_axi_ln_paras_RVALID;
output   m_axi_ln_paras_RREADY;
input  [255:0] m_axi_ln_paras_RDATA;
input   m_axi_ln_paras_RLAST;
input  [0:0] m_axi_ln_paras_RID;
input  [12:0] m_axi_ln_paras_RFIFONUM;
input  [0:0] m_axi_ln_paras_RUSER;
input  [1:0] m_axi_ln_paras_RRESP;
input   m_axi_ln_paras_BVALID;
output   m_axi_ln_paras_BREADY;
input  [1:0] m_axi_ln_paras_BRESP;
input  [0:0] m_axi_ln_paras_BID;
input  [0:0] m_axi_ln_paras_BUSER;
input  [13:0] trunc_ln96_3;
input  [32:0] sext_ln96;
input  [63:0] add_ln96;
input  [4:0] sub_ln96_cast;
input  [4:0] trunc_ln;
output  [8:0] gamma_ram_address0;
output   gamma_ram_ce0;
output  [31:0] gamma_ram_we0;
output  [255:0] gamma_ram_d0;
input  [4:0] trunc_ln96_1;

reg ap_idle;
reg m_axi_ln_paras_ARVALID;
reg m_axi_ln_paras_RREADY;
reg gamma_ram_ce0;
reg[31:0] gamma_ram_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
reg    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] exitcond8_fu_204_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ln_paras_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    ln_paras_blk_n_R;
reg    ap_block_pp0_stage0_11001;
reg   [4:0] residual_loop_index7_load_reg_334;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter1_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter2_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter3_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter4_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter5_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter6_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter7_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter8_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter9_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter10_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter11_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter12_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter13_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter14_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter15_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter16_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter17_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter18_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter19_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter20_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter21_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter22_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter23_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter24_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter25_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter26_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter27_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter28_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter29_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter30_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter31_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter32_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter33_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter34_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter35_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter36_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter37_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter38_reg;
reg   [4:0] residual_loop_index7_load_reg_334_pp0_iter39_reg;
reg   [58:0] p_cast4_reg_340;
reg   [255:0] ln_paras_addr_read_reg_355;
wire   [63:0] p_cast8_cast_fu_307_p1;
wire  signed [63:0] p_cast4_cast_fu_215_p1;
reg   [4:0] residual_loop_index7_fu_92;
wire   [4:0] empty_254_fu_198_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_residual_loop_index7_load;
wire   [31:0] empty_252_fu_271_p2;
wire  signed [33:0] sext_ln96_cast_fu_156_p1;
wire   [33:0] residual_loop_index7_cast11_fu_168_p1;
wire   [33:0] tmp_fu_172_p2;
wire  signed [63:0] tmp_cast_fu_178_p1;
wire   [63:0] empty_248_fu_182_p2;
wire   [13:0] residual_loop_index7_cast_fu_225_p1;
wire   [4:0] tmp1_fu_233_p2;
wire   [4:0] empty_249_fu_237_p2;
wire   [7:0] tmp_3_fu_242_p3;
wire   [255:0] p_cast19_fu_250_p1;
wire   [255:0] empty_250_fu_254_p2;
wire   [7:0] empty_251_fu_259_p1;
wire   [31:0] p_cast20_fu_267_p1;
wire   [7:0] tmp_4_fu_278_p3;
wire   [255:0] p_cast6_cast_fu_263_p1;
wire   [255:0] p_cast21_fu_286_p1;
wire   [13:0] empty_fu_228_p2;
wire   [8:0] tmp_5_fu_297_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_done_reg = 1'b0;
end

layernorm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter40_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready_pp0_iter39_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter40_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((exitcond8_fu_204_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            residual_loop_index7_fu_92 <= empty_254_fu_198_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            residual_loop_index7_fu_92 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        ln_paras_addr_read_reg_355 <= m_axi_ln_paras_RDATA;
        residual_loop_index7_load_reg_334_pp0_iter10_reg <= residual_loop_index7_load_reg_334_pp0_iter9_reg;
        residual_loop_index7_load_reg_334_pp0_iter11_reg <= residual_loop_index7_load_reg_334_pp0_iter10_reg;
        residual_loop_index7_load_reg_334_pp0_iter12_reg <= residual_loop_index7_load_reg_334_pp0_iter11_reg;
        residual_loop_index7_load_reg_334_pp0_iter13_reg <= residual_loop_index7_load_reg_334_pp0_iter12_reg;
        residual_loop_index7_load_reg_334_pp0_iter14_reg <= residual_loop_index7_load_reg_334_pp0_iter13_reg;
        residual_loop_index7_load_reg_334_pp0_iter15_reg <= residual_loop_index7_load_reg_334_pp0_iter14_reg;
        residual_loop_index7_load_reg_334_pp0_iter16_reg <= residual_loop_index7_load_reg_334_pp0_iter15_reg;
        residual_loop_index7_load_reg_334_pp0_iter17_reg <= residual_loop_index7_load_reg_334_pp0_iter16_reg;
        residual_loop_index7_load_reg_334_pp0_iter18_reg <= residual_loop_index7_load_reg_334_pp0_iter17_reg;
        residual_loop_index7_load_reg_334_pp0_iter19_reg <= residual_loop_index7_load_reg_334_pp0_iter18_reg;
        residual_loop_index7_load_reg_334_pp0_iter20_reg <= residual_loop_index7_load_reg_334_pp0_iter19_reg;
        residual_loop_index7_load_reg_334_pp0_iter21_reg <= residual_loop_index7_load_reg_334_pp0_iter20_reg;
        residual_loop_index7_load_reg_334_pp0_iter22_reg <= residual_loop_index7_load_reg_334_pp0_iter21_reg;
        residual_loop_index7_load_reg_334_pp0_iter23_reg <= residual_loop_index7_load_reg_334_pp0_iter22_reg;
        residual_loop_index7_load_reg_334_pp0_iter24_reg <= residual_loop_index7_load_reg_334_pp0_iter23_reg;
        residual_loop_index7_load_reg_334_pp0_iter25_reg <= residual_loop_index7_load_reg_334_pp0_iter24_reg;
        residual_loop_index7_load_reg_334_pp0_iter26_reg <= residual_loop_index7_load_reg_334_pp0_iter25_reg;
        residual_loop_index7_load_reg_334_pp0_iter27_reg <= residual_loop_index7_load_reg_334_pp0_iter26_reg;
        residual_loop_index7_load_reg_334_pp0_iter28_reg <= residual_loop_index7_load_reg_334_pp0_iter27_reg;
        residual_loop_index7_load_reg_334_pp0_iter29_reg <= residual_loop_index7_load_reg_334_pp0_iter28_reg;
        residual_loop_index7_load_reg_334_pp0_iter2_reg <= residual_loop_index7_load_reg_334_pp0_iter1_reg;
        residual_loop_index7_load_reg_334_pp0_iter30_reg <= residual_loop_index7_load_reg_334_pp0_iter29_reg;
        residual_loop_index7_load_reg_334_pp0_iter31_reg <= residual_loop_index7_load_reg_334_pp0_iter30_reg;
        residual_loop_index7_load_reg_334_pp0_iter32_reg <= residual_loop_index7_load_reg_334_pp0_iter31_reg;
        residual_loop_index7_load_reg_334_pp0_iter33_reg <= residual_loop_index7_load_reg_334_pp0_iter32_reg;
        residual_loop_index7_load_reg_334_pp0_iter34_reg <= residual_loop_index7_load_reg_334_pp0_iter33_reg;
        residual_loop_index7_load_reg_334_pp0_iter35_reg <= residual_loop_index7_load_reg_334_pp0_iter34_reg;
        residual_loop_index7_load_reg_334_pp0_iter36_reg <= residual_loop_index7_load_reg_334_pp0_iter35_reg;
        residual_loop_index7_load_reg_334_pp0_iter37_reg <= residual_loop_index7_load_reg_334_pp0_iter36_reg;
        residual_loop_index7_load_reg_334_pp0_iter38_reg <= residual_loop_index7_load_reg_334_pp0_iter37_reg;
        residual_loop_index7_load_reg_334_pp0_iter39_reg <= residual_loop_index7_load_reg_334_pp0_iter38_reg;
        residual_loop_index7_load_reg_334_pp0_iter3_reg <= residual_loop_index7_load_reg_334_pp0_iter2_reg;
        residual_loop_index7_load_reg_334_pp0_iter4_reg <= residual_loop_index7_load_reg_334_pp0_iter3_reg;
        residual_loop_index7_load_reg_334_pp0_iter5_reg <= residual_loop_index7_load_reg_334_pp0_iter4_reg;
        residual_loop_index7_load_reg_334_pp0_iter6_reg <= residual_loop_index7_load_reg_334_pp0_iter5_reg;
        residual_loop_index7_load_reg_334_pp0_iter7_reg <= residual_loop_index7_load_reg_334_pp0_iter6_reg;
        residual_loop_index7_load_reg_334_pp0_iter8_reg <= residual_loop_index7_load_reg_334_pp0_iter7_reg;
        residual_loop_index7_load_reg_334_pp0_iter9_reg <= residual_loop_index7_load_reg_334_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        p_cast4_reg_340 <= {{empty_248_fu_182_p2[63:5]}};
        residual_loop_index7_load_reg_334 <= ap_sig_allocacmp_residual_loop_index7_load;
        residual_loop_index7_load_reg_334_pp0_iter1_reg <= residual_loop_index7_load_reg_334;
    end
end

always @ (*) begin
    if (((exitcond8_fu_204_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter40_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_residual_loop_index7_load = 5'd0;
    end else begin
        ap_sig_allocacmp_residual_loop_index7_load = residual_loop_index7_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        gamma_ram_ce0 = 1'b1;
    end else begin
        gamma_ram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        gamma_ram_we0 = empty_252_fu_271_p2;
    end else begin
        gamma_ram_we0 = 32'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ln_paras_blk_n_AR = m_axi_ln_paras_ARREADY;
    end else begin
        ln_paras_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        ln_paras_blk_n_R = m_axi_ln_paras_RVALID;
    end else begin
        ln_paras_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_ln_paras_ARVALID = 1'b1;
    end else begin
        m_axi_ln_paras_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        m_axi_ln_paras_RREADY = 1'b1;
    end else begin
        m_axi_ln_paras_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_ln_paras_RVALID == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_ln_paras_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_ln_paras_RVALID == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_ln_paras_ARREADY == 1'b0)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_pp0_stage0_iter39 = (m_axi_ln_paras_RVALID == 1'b0);
end

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_248_fu_182_p2 = ($signed(tmp_cast_fu_178_p1) + $signed(add_ln96));

assign empty_249_fu_237_p2 = (tmp1_fu_233_p2 + trunc_ln);

assign empty_250_fu_254_p2 = ln_paras_addr_read_reg_355 >> p_cast19_fu_250_p1;

assign empty_251_fu_259_p1 = empty_250_fu_254_p2[7:0];

assign empty_252_fu_271_p2 = 32'd1 << p_cast20_fu_267_p1;

assign empty_254_fu_198_p2 = (ap_sig_allocacmp_residual_loop_index7_load + 5'd1);

assign empty_fu_228_p2 = (trunc_ln96_3 + residual_loop_index7_cast_fu_225_p1);

assign exitcond8_fu_204_p2 = ((empty_254_fu_198_p2 == trunc_ln96_1) ? 1'b1 : 1'b0);

assign gamma_ram_address0 = p_cast8_cast_fu_307_p1;

assign gamma_ram_d0 = p_cast6_cast_fu_263_p1 << p_cast21_fu_286_p1;

assign m_axi_ln_paras_ARADDR = p_cast4_cast_fu_215_p1;

assign m_axi_ln_paras_ARBURST = 2'd0;

assign m_axi_ln_paras_ARCACHE = 4'd0;

assign m_axi_ln_paras_ARID = 1'd0;

assign m_axi_ln_paras_ARLEN = 32'd1;

assign m_axi_ln_paras_ARLOCK = 2'd0;

assign m_axi_ln_paras_ARPROT = 3'd0;

assign m_axi_ln_paras_ARQOS = 4'd0;

assign m_axi_ln_paras_ARREGION = 4'd0;

assign m_axi_ln_paras_ARSIZE = 3'd0;

assign m_axi_ln_paras_ARUSER = 1'd0;

assign m_axi_ln_paras_AWADDR = 64'd0;

assign m_axi_ln_paras_AWBURST = 2'd0;

assign m_axi_ln_paras_AWCACHE = 4'd0;

assign m_axi_ln_paras_AWID = 1'd0;

assign m_axi_ln_paras_AWLEN = 32'd0;

assign m_axi_ln_paras_AWLOCK = 2'd0;

assign m_axi_ln_paras_AWPROT = 3'd0;

assign m_axi_ln_paras_AWQOS = 4'd0;

assign m_axi_ln_paras_AWREGION = 4'd0;

assign m_axi_ln_paras_AWSIZE = 3'd0;

assign m_axi_ln_paras_AWUSER = 1'd0;

assign m_axi_ln_paras_AWVALID = 1'b0;

assign m_axi_ln_paras_BREADY = 1'b0;

assign m_axi_ln_paras_WDATA = 256'd0;

assign m_axi_ln_paras_WID = 1'd0;

assign m_axi_ln_paras_WLAST = 1'b0;

assign m_axi_ln_paras_WSTRB = 32'd0;

assign m_axi_ln_paras_WUSER = 1'd0;

assign m_axi_ln_paras_WVALID = 1'b0;

assign p_cast19_fu_250_p1 = tmp_3_fu_242_p3;

assign p_cast20_fu_267_p1 = tmp1_fu_233_p2;

assign p_cast21_fu_286_p1 = tmp_4_fu_278_p3;

assign p_cast4_cast_fu_215_p1 = $signed(p_cast4_reg_340);

assign p_cast6_cast_fu_263_p1 = empty_251_fu_259_p1;

assign p_cast8_cast_fu_307_p1 = tmp_5_fu_297_p4;

assign residual_loop_index7_cast11_fu_168_p1 = ap_sig_allocacmp_residual_loop_index7_load;

assign residual_loop_index7_cast_fu_225_p1 = residual_loop_index7_load_reg_334_pp0_iter39_reg;

assign sext_ln96_cast_fu_156_p1 = $signed(sext_ln96);

assign tmp1_fu_233_p2 = (sub_ln96_cast + residual_loop_index7_load_reg_334_pp0_iter39_reg);

assign tmp_3_fu_242_p3 = {{empty_249_fu_237_p2}, {3'd0}};

assign tmp_4_fu_278_p3 = {{tmp1_fu_233_p2}, {3'd0}};

assign tmp_5_fu_297_p4 = {{empty_fu_228_p2[13:5]}};

assign tmp_cast_fu_178_p1 = $signed(tmp_fu_172_p2);

assign tmp_fu_172_p2 = ($signed(sext_ln96_cast_fu_156_p1) + $signed(residual_loop_index7_cast11_fu_168_p1));

endmodule //layernorm_p_anonymous_namespace_DataMover_B_ap_int_8_ap_uint_256_5u_Pipeline_2
