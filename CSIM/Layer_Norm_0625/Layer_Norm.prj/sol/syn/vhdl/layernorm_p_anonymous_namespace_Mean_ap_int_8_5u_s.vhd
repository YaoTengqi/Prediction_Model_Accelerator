-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity layernorm_p_anonymous_namespace_Mean_ap_int_8_5u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    cols_log_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    cols_log_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    cols_log_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    cols_log_empty_n : IN STD_LOGIC;
    cols_log_read : OUT STD_LOGIC;
    rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    rows_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    rows_empty_n : IN STD_LOGIC;
    rows_read : OUT STD_LOGIC;
    data_copy_a1_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    data_copy_a1_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    data_copy_a1_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    data_copy_a1_empty_n : IN STD_LOGIC;
    data_copy_a1_read : OUT STD_LOGIC;
    mean_a6_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    mean_a6_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    mean_a6_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    mean_a6_full_n : IN STD_LOGIC;
    mean_a6_write : OUT STD_LOGIC;
    mean_b7_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    mean_b7_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    mean_b7_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    mean_b7_full_n : IN STD_LOGIC;
    mean_b7_write : OUT STD_LOGIC;
    rows_c18_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    rows_c18_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    rows_c18_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    rows_c18_full_n : IN STD_LOGIC;
    rows_c18_write : OUT STD_LOGIC;
    cols_log_c21_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    cols_log_c21_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    cols_log_c21_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    cols_log_c21_full_n : IN STD_LOGIC;
    cols_log_c21_write : OUT STD_LOGIC );
end;


architecture behav of layernorm_p_anonymous_namespace_Mean_ap_int_8_5u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000111";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010111";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100111";
    constant ap_const_lv32_E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_F7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110111";
    constant ap_const_lv32_F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal cols_log_blk_n : STD_LOGIC;
    signal rows_blk_n : STD_LOGIC;
    signal data_copy_a1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal mean_a6_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln124_1_reg_1117 : STD_LOGIC_VECTOR (0 downto 0);
    signal mean_b7_blk_n : STD_LOGIC;
    signal rows_c18_blk_n : STD_LOGIC;
    signal cols_log_c21_blk_n : STD_LOGIC;
    signal cols_log_read_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_read_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_reg_1111 : STD_LOGIC_VECTOR (26 downto 0);
    signal icmp_ln124_1_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_1_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_1_reg_1121 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal k_fu_311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_reg_1125 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_fu_1069_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_1075_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal k6_reg_240 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal icmp_ln124_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal j4_reg_251 : STD_LOGIC_VECTOR (26 downto 0);
    signal icmp_ln128_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum2_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_sum3_phi_fu_277_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum3_reg_273 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln214_fu_1091_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cols_fu_284_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_fu_317_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_162_fu_321_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_163_fu_331_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_164_fu_341_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_165_fu_351_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_166_fu_361_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_167_fu_371_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_168_fu_381_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_169_fu_391_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_170_fu_401_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_171_fu_411_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_172_fu_421_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_173_fu_431_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_174_fu_441_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_175_fu_451_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_176_fu_461_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_177_fu_471_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_178_fu_481_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_179_fu_491_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_180_fu_501_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_181_fu_511_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_182_fu_521_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_183_fu_531_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_184_fu_541_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_185_fu_551_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_186_fu_561_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_187_fu_571_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_188_fu_581_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_189_fu_591_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_190_fu_601_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_191_fu_611_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_val_V_192_fu_621_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln134_fu_631_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_1_fu_635_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_fu_759_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_2_fu_639_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_3_fu_643_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_1_fu_769_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_33_fu_775_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_32_fu_765_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln134_2_fu_779_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_4_fu_647_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_5_fu_651_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_3_fu_789_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_6_fu_655_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_7_fu_659_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_4_fu_799_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_36_fu_805_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_35_fu_795_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln134_5_fu_809_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_37_fu_815_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln134_34_fu_785_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln134_6_fu_819_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln134_8_fu_663_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_9_fu_667_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_7_fu_829_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_10_fu_671_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_11_fu_675_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_8_fu_839_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_40_fu_845_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_39_fu_835_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln134_9_fu_849_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_12_fu_679_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_13_fu_683_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_10_fu_859_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_14_fu_687_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_15_fu_691_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_11_fu_869_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_43_fu_875_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_42_fu_865_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln134_12_fu_879_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_44_fu_885_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln134_41_fu_855_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln134_13_fu_889_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln134_45_fu_895_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln134_38_fu_825_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln134_14_fu_899_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln134_16_fu_695_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_17_fu_699_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_15_fu_909_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_18_fu_703_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_19_fu_707_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_16_fu_919_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_48_fu_925_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_47_fu_915_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln134_17_fu_929_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_20_fu_711_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_21_fu_715_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_18_fu_939_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_22_fu_719_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_23_fu_723_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_19_fu_949_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_51_fu_955_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_50_fu_945_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln134_20_fu_959_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_52_fu_965_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln134_49_fu_935_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln134_21_fu_969_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln134_24_fu_727_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_25_fu_731_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_22_fu_979_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_26_fu_735_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_27_fu_739_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_23_fu_989_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_55_fu_995_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_54_fu_985_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln134_24_fu_999_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_28_fu_743_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_29_fu_747_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_25_fu_1009_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_30_fu_751_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_31_fu_755_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_26_fu_1019_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln134_58_fu_1025_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_57_fu_1015_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln134_27_fu_1029_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln134_59_fu_1035_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln134_56_fu_1005_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln134_28_fu_1039_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln134_60_fu_1045_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln134_53_fu_975_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln134_29_fu_1049_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln134_61_fu_1055_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln134_46_fu_905_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln134_30_fu_1059_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln134_62_fu_1065_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln137_fu_1086_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln124_1_reg_1117 = ap_const_lv1_1) or (icmp_ln124_fu_1097_p2 = ap_const_lv1_1)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    j4_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_1_fu_306_p2 = ap_const_lv1_0))) then 
                j4_reg_251 <= ap_const_lv27_0;
            elsif (((data_copy_a1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln128_fu_1081_p2 = ap_const_lv1_0))) then 
                j4_reg_251 <= j_fu_1075_p2;
            end if; 
        end if;
    end process;

    k6_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (cols_log_c21_full_n = ap_const_logic_0) or (rows_c18_full_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (cols_log_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (icmp_ln124_1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                k6_reg_240 <= ap_const_lv32_0;
            elsif ((not((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) and (icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln124_fu_1097_p2 = ap_const_lv1_0))) then 
                k6_reg_240 <= k_reg_1125;
            end if; 
        end if;
    end process;

    sum2_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_1_fu_306_p2 = ap_const_lv1_0))) then 
                sum2_reg_262 <= ap_const_lv32_0;
            elsif (((data_copy_a1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln128_fu_1081_p2 = ap_const_lv1_0))) then 
                sum2_reg_262 <= sum_fu_1069_p2;
            end if; 
        end if;
    end process;

    sum3_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) and (icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln128_1_reg_1121 = ap_const_lv1_0))) then 
                sum3_reg_273 <= sum_reg_1131;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_1_fu_306_p2 = ap_const_lv1_1))) then 
                sum3_reg_273 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cols_log_read_reg_1101 <= cols_log_dout;
                icmp_ln124_1_reg_1117 <= icmp_ln124_1_fu_300_p2;
                rows_read_reg_1106 <= rows_dout;
                trunc_ln_reg_1111 <= cols_fu_284_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln128_1_reg_1121 <= icmp_ln128_1_fu_306_p2;
                k_reg_1125 <= k_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_copy_a1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                sum_reg_1131 <= sum_fu_1069_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, cols_log_empty_n, rows_empty_n, data_copy_a1_empty_n, mean_a6_full_n, mean_b7_full_n, rows_c18_full_n, cols_log_c21_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, icmp_ln124_1_reg_1117, icmp_ln124_1_fu_300_p2, icmp_ln128_1_fu_306_p2, ap_CS_fsm_state2, icmp_ln124_fu_1097_p2, icmp_ln128_fu_1081_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (cols_log_c21_full_n = ap_const_logic_0) or (rows_c18_full_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (cols_log_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (icmp_ln124_1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((ap_start = ap_const_logic_0) or (cols_log_c21_full_n = ap_const_logic_0) or (rows_c18_full_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (cols_log_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (icmp_ln124_1_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_1_fu_306_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state3 => 
                if (((data_copy_a1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln128_fu_1081_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((data_copy_a1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln128_fu_1081_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln124_1_reg_1117 = ap_const_lv1_1) or (icmp_ln124_fu_1097_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) and (icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln124_fu_1097_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln134_10_fu_859_p2 <= std_logic_vector(signed(sext_ln134_12_fu_679_p1) + signed(sext_ln134_13_fu_683_p1));
    add_ln134_11_fu_869_p2 <= std_logic_vector(signed(sext_ln134_14_fu_687_p1) + signed(sext_ln134_15_fu_691_p1));
    add_ln134_12_fu_879_p2 <= std_logic_vector(signed(sext_ln134_43_fu_875_p1) + signed(sext_ln134_42_fu_865_p1));
    add_ln134_13_fu_889_p2 <= std_logic_vector(signed(sext_ln134_44_fu_885_p1) + signed(sext_ln134_41_fu_855_p1));
    add_ln134_14_fu_899_p2 <= std_logic_vector(signed(sext_ln134_45_fu_895_p1) + signed(sext_ln134_38_fu_825_p1));
    add_ln134_15_fu_909_p2 <= std_logic_vector(signed(sext_ln134_16_fu_695_p1) + signed(sext_ln134_17_fu_699_p1));
    add_ln134_16_fu_919_p2 <= std_logic_vector(signed(sext_ln134_18_fu_703_p1) + signed(sext_ln134_19_fu_707_p1));
    add_ln134_17_fu_929_p2 <= std_logic_vector(signed(sext_ln134_48_fu_925_p1) + signed(sext_ln134_47_fu_915_p1));
    add_ln134_18_fu_939_p2 <= std_logic_vector(signed(sext_ln134_20_fu_711_p1) + signed(sext_ln134_21_fu_715_p1));
    add_ln134_19_fu_949_p2 <= std_logic_vector(signed(sext_ln134_22_fu_719_p1) + signed(sext_ln134_23_fu_723_p1));
    add_ln134_1_fu_769_p2 <= std_logic_vector(signed(sext_ln134_2_fu_639_p1) + signed(sext_ln134_3_fu_643_p1));
    add_ln134_20_fu_959_p2 <= std_logic_vector(signed(sext_ln134_51_fu_955_p1) + signed(sext_ln134_50_fu_945_p1));
    add_ln134_21_fu_969_p2 <= std_logic_vector(signed(sext_ln134_52_fu_965_p1) + signed(sext_ln134_49_fu_935_p1));
    add_ln134_22_fu_979_p2 <= std_logic_vector(signed(sext_ln134_24_fu_727_p1) + signed(sext_ln134_25_fu_731_p1));
    add_ln134_23_fu_989_p2 <= std_logic_vector(signed(sext_ln134_26_fu_735_p1) + signed(sext_ln134_27_fu_739_p1));
    add_ln134_24_fu_999_p2 <= std_logic_vector(signed(sext_ln134_55_fu_995_p1) + signed(sext_ln134_54_fu_985_p1));
    add_ln134_25_fu_1009_p2 <= std_logic_vector(signed(sext_ln134_28_fu_743_p1) + signed(sext_ln134_29_fu_747_p1));
    add_ln134_26_fu_1019_p2 <= std_logic_vector(signed(sext_ln134_30_fu_751_p1) + signed(sext_ln134_31_fu_755_p1));
    add_ln134_27_fu_1029_p2 <= std_logic_vector(signed(sext_ln134_58_fu_1025_p1) + signed(sext_ln134_57_fu_1015_p1));
    add_ln134_28_fu_1039_p2 <= std_logic_vector(signed(sext_ln134_59_fu_1035_p1) + signed(sext_ln134_56_fu_1005_p1));
    add_ln134_29_fu_1049_p2 <= std_logic_vector(signed(sext_ln134_60_fu_1045_p1) + signed(sext_ln134_53_fu_975_p1));
    add_ln134_2_fu_779_p2 <= std_logic_vector(signed(sext_ln134_33_fu_775_p1) + signed(sext_ln134_32_fu_765_p1));
    add_ln134_30_fu_1059_p2 <= std_logic_vector(signed(sext_ln134_61_fu_1055_p1) + signed(sext_ln134_46_fu_905_p1));
    add_ln134_3_fu_789_p2 <= std_logic_vector(signed(sext_ln134_4_fu_647_p1) + signed(sext_ln134_5_fu_651_p1));
    add_ln134_4_fu_799_p2 <= std_logic_vector(signed(sext_ln134_6_fu_655_p1) + signed(sext_ln134_7_fu_659_p1));
    add_ln134_5_fu_809_p2 <= std_logic_vector(signed(sext_ln134_36_fu_805_p1) + signed(sext_ln134_35_fu_795_p1));
    add_ln134_6_fu_819_p2 <= std_logic_vector(signed(sext_ln134_37_fu_815_p1) + signed(sext_ln134_34_fu_785_p1));
    add_ln134_7_fu_829_p2 <= std_logic_vector(signed(sext_ln134_8_fu_663_p1) + signed(sext_ln134_9_fu_667_p1));
    add_ln134_8_fu_839_p2 <= std_logic_vector(signed(sext_ln134_10_fu_671_p1) + signed(sext_ln134_11_fu_675_p1));
    add_ln134_9_fu_849_p2 <= std_logic_vector(signed(sext_ln134_40_fu_845_p1) + signed(sext_ln134_39_fu_835_p1));
    add_ln134_fu_759_p2 <= std_logic_vector(signed(sext_ln134_fu_631_p1) + signed(sext_ln134_1_fu_635_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, cols_log_empty_n, rows_empty_n, rows_c18_full_n, cols_log_c21_full_n)
    begin
        if (((ap_start = ap_const_logic_0) or (cols_log_c21_full_n = ap_const_logic_0) or (rows_c18_full_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (cols_log_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(data_copy_a1_empty_n)
    begin
        if ((data_copy_a1_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(mean_a6_full_n, mean_b7_full_n, icmp_ln124_1_reg_1117)
    begin
        if ((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, cols_log_empty_n, rows_empty_n, rows_c18_full_n, cols_log_c21_full_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (cols_log_c21_full_n = ap_const_logic_0) or (rows_c18_full_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (cols_log_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state4_assign_proc : process(mean_a6_full_n, mean_b7_full_n, icmp_ln124_1_reg_1117)
    begin
                ap_block_state4 <= (((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, mean_a6_full_n, mean_b7_full_n, ap_CS_fsm_state4, icmp_ln124_1_reg_1117, icmp_ln124_fu_1097_p2)
    begin
        if ((not((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln124_1_reg_1117 = ap_const_lv1_1) or (icmp_ln124_fu_1097_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_sum3_phi_fu_277_p4_assign_proc : process(ap_CS_fsm_state4, icmp_ln124_1_reg_1117, icmp_ln128_1_reg_1121, sum_reg_1131, sum3_reg_273)
    begin
        if (((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln128_1_reg_1121 = ap_const_lv1_0))) then 
            ap_phi_mux_sum3_phi_fu_277_p4 <= sum_reg_1131;
        else 
            ap_phi_mux_sum3_phi_fu_277_p4 <= sum3_reg_273;
        end if; 
    end process;


    ap_ready_assign_proc : process(mean_a6_full_n, mean_b7_full_n, ap_CS_fsm_state4, icmp_ln124_1_reg_1117, icmp_ln124_fu_1097_p2)
    begin
        if ((not((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln124_1_reg_1117 = ap_const_lv1_1) or (icmp_ln124_fu_1097_p2 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln137_fu_1086_p2 <= std_logic_vector(shift_right(signed(ap_phi_mux_sum3_phi_fu_277_p4),to_integer(unsigned('0' & cols_log_read_reg_1101(31-1 downto 0)))));
    cols_fu_284_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & cols_log_dout(31-1 downto 0)))));

    cols_log_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_log_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_log_blk_n <= cols_log_empty_n;
        else 
            cols_log_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cols_log_c21_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_log_c21_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_log_c21_blk_n <= cols_log_c21_full_n;
        else 
            cols_log_c21_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols_log_c21_din <= cols_log_dout;

    cols_log_c21_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_log_empty_n, rows_empty_n, rows_c18_full_n, cols_log_c21_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cols_log_c21_full_n = ap_const_logic_0) or (rows_c18_full_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (cols_log_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_log_c21_write <= ap_const_logic_1;
        else 
            cols_log_c21_write <= ap_const_logic_0;
        end if; 
    end process;


    cols_log_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_log_empty_n, rows_empty_n, rows_c18_full_n, cols_log_c21_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cols_log_c21_full_n = ap_const_logic_0) or (rows_c18_full_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (cols_log_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_log_read <= ap_const_logic_1;
        else 
            cols_log_read <= ap_const_logic_0;
        end if; 
    end process;


    data_copy_a1_blk_n_assign_proc : process(data_copy_a1_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_copy_a1_blk_n <= data_copy_a1_empty_n;
        else 
            data_copy_a1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_copy_a1_read_assign_proc : process(data_copy_a1_empty_n, ap_CS_fsm_state3)
    begin
        if (((data_copy_a1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            data_copy_a1_read <= ap_const_logic_1;
        else 
            data_copy_a1_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln124_1_fu_300_p2 <= "1" when (rows_dout = ap_const_lv32_0) else "0";
    icmp_ln124_fu_1097_p2 <= "1" when (k_reg_1125 = rows_read_reg_1106) else "0";
    icmp_ln128_1_fu_306_p2 <= "1" when (trunc_ln_reg_1111 = ap_const_lv27_0) else "0";
    icmp_ln128_fu_1081_p2 <= "1" when (j_fu_1075_p2 = trunc_ln_reg_1111) else "0";
    j_fu_1075_p2 <= std_logic_vector(unsigned(j4_reg_251) + unsigned(ap_const_lv27_1));
    k_fu_311_p2 <= std_logic_vector(unsigned(k6_reg_240) + unsigned(ap_const_lv32_1));
    l_val_V_162_fu_321_p4 <= data_copy_a1_dout(15 downto 8);
    l_val_V_163_fu_331_p4 <= data_copy_a1_dout(23 downto 16);
    l_val_V_164_fu_341_p4 <= data_copy_a1_dout(31 downto 24);
    l_val_V_165_fu_351_p4 <= data_copy_a1_dout(39 downto 32);
    l_val_V_166_fu_361_p4 <= data_copy_a1_dout(47 downto 40);
    l_val_V_167_fu_371_p4 <= data_copy_a1_dout(55 downto 48);
    l_val_V_168_fu_381_p4 <= data_copy_a1_dout(63 downto 56);
    l_val_V_169_fu_391_p4 <= data_copy_a1_dout(71 downto 64);
    l_val_V_170_fu_401_p4 <= data_copy_a1_dout(79 downto 72);
    l_val_V_171_fu_411_p4 <= data_copy_a1_dout(87 downto 80);
    l_val_V_172_fu_421_p4 <= data_copy_a1_dout(95 downto 88);
    l_val_V_173_fu_431_p4 <= data_copy_a1_dout(103 downto 96);
    l_val_V_174_fu_441_p4 <= data_copy_a1_dout(111 downto 104);
    l_val_V_175_fu_451_p4 <= data_copy_a1_dout(119 downto 112);
    l_val_V_176_fu_461_p4 <= data_copy_a1_dout(127 downto 120);
    l_val_V_177_fu_471_p4 <= data_copy_a1_dout(135 downto 128);
    l_val_V_178_fu_481_p4 <= data_copy_a1_dout(143 downto 136);
    l_val_V_179_fu_491_p4 <= data_copy_a1_dout(151 downto 144);
    l_val_V_180_fu_501_p4 <= data_copy_a1_dout(159 downto 152);
    l_val_V_181_fu_511_p4 <= data_copy_a1_dout(167 downto 160);
    l_val_V_182_fu_521_p4 <= data_copy_a1_dout(175 downto 168);
    l_val_V_183_fu_531_p4 <= data_copy_a1_dout(183 downto 176);
    l_val_V_184_fu_541_p4 <= data_copy_a1_dout(191 downto 184);
    l_val_V_185_fu_551_p4 <= data_copy_a1_dout(199 downto 192);
    l_val_V_186_fu_561_p4 <= data_copy_a1_dout(207 downto 200);
    l_val_V_187_fu_571_p4 <= data_copy_a1_dout(215 downto 208);
    l_val_V_188_fu_581_p4 <= data_copy_a1_dout(223 downto 216);
    l_val_V_189_fu_591_p4 <= data_copy_a1_dout(231 downto 224);
    l_val_V_190_fu_601_p4 <= data_copy_a1_dout(239 downto 232);
    l_val_V_191_fu_611_p4 <= data_copy_a1_dout(247 downto 240);
    l_val_V_192_fu_621_p4 <= data_copy_a1_dout(255 downto 248);
    l_val_V_fu_317_p1 <= data_copy_a1_dout(8 - 1 downto 0);

    mean_a6_blk_n_assign_proc : process(mean_a6_full_n, ap_CS_fsm_state4, icmp_ln124_1_reg_1117)
    begin
        if (((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            mean_a6_blk_n <= mean_a6_full_n;
        else 
            mean_a6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mean_a6_din <= trunc_ln214_fu_1091_p1;

    mean_a6_write_assign_proc : process(mean_a6_full_n, mean_b7_full_n, ap_CS_fsm_state4, icmp_ln124_1_reg_1117)
    begin
        if ((not((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) and (icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            mean_a6_write <= ap_const_logic_1;
        else 
            mean_a6_write <= ap_const_logic_0;
        end if; 
    end process;


    mean_b7_blk_n_assign_proc : process(mean_b7_full_n, ap_CS_fsm_state4, icmp_ln124_1_reg_1117)
    begin
        if (((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            mean_b7_blk_n <= mean_b7_full_n;
        else 
            mean_b7_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mean_b7_din <= trunc_ln214_fu_1091_p1;

    mean_b7_write_assign_proc : process(mean_a6_full_n, mean_b7_full_n, ap_CS_fsm_state4, icmp_ln124_1_reg_1117)
    begin
        if ((not((((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_b7_full_n = ap_const_logic_0)) or ((icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (mean_a6_full_n = ap_const_logic_0)))) and (icmp_ln124_1_reg_1117 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            mean_b7_write <= ap_const_logic_1;
        else 
            mean_b7_write <= ap_const_logic_0;
        end if; 
    end process;


    rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_blk_n <= rows_empty_n;
        else 
            rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rows_c18_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_c18_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_c18_blk_n <= rows_c18_full_n;
        else 
            rows_c18_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rows_c18_din <= rows_dout;

    rows_c18_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_log_empty_n, rows_empty_n, rows_c18_full_n, cols_log_c21_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cols_log_c21_full_n = ap_const_logic_0) or (rows_c18_full_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (cols_log_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_c18_write <= ap_const_logic_1;
        else 
            rows_c18_write <= ap_const_logic_0;
        end if; 
    end process;


    rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_log_empty_n, rows_empty_n, rows_c18_full_n, cols_log_c21_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cols_log_c21_full_n = ap_const_logic_0) or (rows_c18_full_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (cols_log_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_read <= ap_const_logic_1;
        else 
            rows_read <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln134_10_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_171_fu_411_p4),9));

        sext_ln134_11_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_172_fu_421_p4),9));

        sext_ln134_12_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_173_fu_431_p4),9));

        sext_ln134_13_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_174_fu_441_p4),9));

        sext_ln134_14_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_175_fu_451_p4),9));

        sext_ln134_15_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_176_fu_461_p4),9));

        sext_ln134_16_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_177_fu_471_p4),9));

        sext_ln134_17_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_178_fu_481_p4),9));

        sext_ln134_18_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_179_fu_491_p4),9));

        sext_ln134_19_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_180_fu_501_p4),9));

        sext_ln134_1_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_162_fu_321_p4),9));

        sext_ln134_20_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_181_fu_511_p4),9));

        sext_ln134_21_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_182_fu_521_p4),9));

        sext_ln134_22_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_183_fu_531_p4),9));

        sext_ln134_23_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_184_fu_541_p4),9));

        sext_ln134_24_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_185_fu_551_p4),9));

        sext_ln134_25_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_186_fu_561_p4),9));

        sext_ln134_26_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_187_fu_571_p4),9));

        sext_ln134_27_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_188_fu_581_p4),9));

        sext_ln134_28_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_189_fu_591_p4),9));

        sext_ln134_29_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_190_fu_601_p4),9));

        sext_ln134_2_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_163_fu_331_p4),9));

        sext_ln134_30_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_191_fu_611_p4),9));

        sext_ln134_31_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_192_fu_621_p4),9));

        sext_ln134_32_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_fu_759_p2),10));

        sext_ln134_33_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_1_fu_769_p2),10));

        sext_ln134_34_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_2_fu_779_p2),11));

        sext_ln134_35_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_3_fu_789_p2),10));

        sext_ln134_36_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_4_fu_799_p2),10));

        sext_ln134_37_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_5_fu_809_p2),11));

        sext_ln134_38_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_6_fu_819_p2),12));

        sext_ln134_39_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_7_fu_829_p2),10));

        sext_ln134_3_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_164_fu_341_p4),9));

        sext_ln134_40_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_8_fu_839_p2),10));

        sext_ln134_41_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_9_fu_849_p2),11));

        sext_ln134_42_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_10_fu_859_p2),10));

        sext_ln134_43_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_11_fu_869_p2),10));

        sext_ln134_44_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_12_fu_879_p2),11));

        sext_ln134_45_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_13_fu_889_p2),12));

        sext_ln134_46_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_14_fu_899_p2),13));

        sext_ln134_47_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_15_fu_909_p2),10));

        sext_ln134_48_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_16_fu_919_p2),10));

        sext_ln134_49_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_17_fu_929_p2),11));

        sext_ln134_4_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_165_fu_351_p4),9));

        sext_ln134_50_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_18_fu_939_p2),10));

        sext_ln134_51_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_19_fu_949_p2),10));

        sext_ln134_52_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_20_fu_959_p2),11));

        sext_ln134_53_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_21_fu_969_p2),12));

        sext_ln134_54_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_22_fu_979_p2),10));

        sext_ln134_55_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_23_fu_989_p2),10));

        sext_ln134_56_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_24_fu_999_p2),11));

        sext_ln134_57_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_25_fu_1009_p2),10));

        sext_ln134_58_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_26_fu_1019_p2),10));

        sext_ln134_59_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_27_fu_1029_p2),11));

        sext_ln134_5_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_166_fu_361_p4),9));

        sext_ln134_60_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_28_fu_1039_p2),12));

        sext_ln134_61_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_29_fu_1049_p2),13));

        sext_ln134_62_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln134_30_fu_1059_p2),32));

        sext_ln134_6_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_167_fu_371_p4),9));

        sext_ln134_7_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_168_fu_381_p4),9));

        sext_ln134_8_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_169_fu_391_p4),9));

        sext_ln134_9_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_170_fu_401_p4),9));

        sext_ln134_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(l_val_V_fu_317_p1),9));

    sum_fu_1069_p2 <= std_logic_vector(unsigned(sum2_reg_262) + unsigned(sext_ln134_62_fu_1065_p1));
    trunc_ln214_fu_1091_p1 <= ashr_ln137_fu_1086_p2(8 - 1 downto 0);
end behav;
