// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module layernorm_p_anonymous_namespace_Store_temp_ap_int_8_ap_uint_256_5u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        cols_log_dout,
        cols_log_num_data_valid,
        cols_log_fifo_cap,
        cols_log_empty_n,
        cols_log_read,
        rows_dout,
        rows_num_data_valid,
        rows_fifo_cap,
        rows_empty_n,
        rows_read,
        norm9_dout,
        norm9_num_data_valid,
        norm9_fifo_cap,
        norm9_empty_n,
        norm9_read,
        store_temp10_din,
        store_temp10_num_data_valid,
        store_temp10_fifo_cap,
        store_temp10_full_n,
        store_temp10_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_pp0_stage0 = 5'd4;
parameter    ap_ST_fsm_state7 = 5'd8;
parameter    ap_ST_fsm_state8 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] cols_log_dout;
input  [1:0] cols_log_num_data_valid;
input  [1:0] cols_log_fifo_cap;
input   cols_log_empty_n;
output   cols_log_read;
input  [31:0] rows_dout;
input  [1:0] rows_num_data_valid;
input  [1:0] rows_fifo_cap;
input   rows_empty_n;
output   rows_read;
input  [255:0] norm9_dout;
input  [4:0] norm9_num_data_valid;
input  [4:0] norm9_fifo_cap;
input   norm9_empty_n;
output   norm9_read;
output  [255:0] store_temp10_din;
input  [4:0] store_temp10_num_data_valid;
input  [4:0] store_temp10_fifo_cap;
input   store_temp10_full_n;
output   store_temp10_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cols_log_read;
reg rows_read;
reg norm9_read;
reg store_temp10_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    cols_log_blk_n;
reg    rows_blk_n;
reg    norm9_blk_n;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln26715_reg_103;
reg   [0:0] icmp_ln26715_reg_103_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [26:0] i14_reg_113;
reg   [58:0] indvar_flatten12_reg_124;
reg   [31:0] j_116_reg_135;
reg   [31:0] j13_reg_146;
reg   [31:0] rows_read_reg_271;
wire  signed [8:0] empty_fu_164_p1;
reg  signed [8:0] empty_reg_276;
reg   [26:0] trunc_ln_reg_281;
wire   [58:0] bound_fu_190_p2;
reg   [58:0] bound_reg_288;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln267_1_fu_196_p2;
wire   [0:0] icmp_ln265_1_fu_201_p2;
wire   [26:0] i_fu_219_p2;
reg   [26:0] i_reg_307;
reg    ap_enable_reg_pp0_iter0;
wire   [58:0] add_ln265_fu_225_p2;
reg   [58:0] add_ln265_reg_312;
wire   [0:0] icmp_ln267_fu_231_p2;
reg   [0:0] icmp_ln267_reg_317;
wire   [0:0] icmp_ln265_fu_236_p2;
reg   [0:0] icmp_ln265_reg_322;
reg   [0:0] icmp_ln265_reg_322_pp0_iter1_reg;
reg   [0:0] icmp_ln265_reg_322_pp0_iter2_reg;
wire   [31:0] j_2_fu_241_p3;
reg   [31:0] j_2_reg_326;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] j_fu_253_p2;
reg   [31:0] j_reg_336;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg   [8:0] ram_V_address0;
reg    ram_V_ce0;
reg    ram_V_we0;
wire   [255:0] ram_V_q0;
wire    grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_start;
wire    grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_done;
wire    grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_idle;
wire    grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_ready;
wire   [255:0] grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_store_temp10_din;
wire    grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_store_temp10_write;
wire   [8:0] grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ram_V_address0;
wire    grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ram_V_ce0;
reg   [0:0] ap_phi_mux_icmp_ln26715_phi_fu_106_p4;
reg   [26:0] ap_phi_mux_i14_phi_fu_117_p4;
reg   [58:0] ap_phi_mux_indvar_flatten12_phi_fu_128_p4;
reg   [31:0] ap_phi_mux_j_116_phi_fu_139_p4;
reg   [31:0] ap_phi_mux_j13_phi_fu_150_p4;
reg    grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln271_fu_259_p1;
reg    ap_block_state1;
wire   [31:0] cols_fu_168_p2;
wire   [31:0] bound_fu_190_p0;
wire   [26:0] bound_fu_190_p1;
wire   [26:0] select_ln265_fu_207_p3;
wire  signed [8:0] zext_ln271_fu_259_p0;
wire   [8:0] grp_fu_263_p3;
wire  signed [8:0] grp_fu_263_p0;
wire   [8:0] grp_fu_263_p2;
reg    grp_fu_263_ce;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [58:0] bound_fu_190_p00;
wire   [58:0] bound_fu_190_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_start_reg = 1'b0;
end

layernorm_p_anonymous_namespace_Store_temp_ap_int_8_ap_uint_256_5u_s_ram_V_RAM_AUTO_1R1W #(
    .DataWidth( 256 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
ram_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ram_V_address0),
    .ce0(ram_V_ce0),
    .we0(ram_V_we0),
    .d0(norm9_dout),
    .q0(ram_V_q0)
);

layernorm_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3 grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_start),
    .ap_done(grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_done),
    .ap_idle(grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_idle),
    .ap_ready(grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_ready),
    .store_temp10_din(grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_store_temp10_din),
    .store_temp10_num_data_valid(5'd0),
    .store_temp10_fifo_cap(5'd0),
    .store_temp10_full_n(store_temp10_full_n),
    .store_temp10_write(grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_store_temp10_write),
    .ram_V_address0(grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ram_V_address0),
    .ram_V_ce0(grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ram_V_ce0),
    .ram_V_q0(ram_V_q0)
);

layernorm_mul_32ns_27ns_59_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 59 ))
mul_32ns_27ns_59_1_1_U264(
    .din0(bound_fu_190_p0),
    .din1(bound_fu_190_p1),
    .dout(bound_fu_190_p2)
);

layernorm_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U265(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_263_p0),
    .din1(empty_reg_276),
    .din2(grp_fu_263_p2),
    .ce(grp_fu_263_ce),
    .dout(grp_fu_263_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln265_1_fu_201_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln265_1_fu_201_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_start_reg <= 1'b1;
        end else if ((grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_ready == 1'b1)) begin
            grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln265_1_fu_201_p2 == 1'd0))) begin
        i14_reg_113 <= 27'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln265_reg_322 == 1'd0))) begin
        i14_reg_113 <= i_reg_307;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln265_1_fu_201_p2 == 1'd0))) begin
        icmp_ln26715_reg_103 <= icmp_ln267_1_fu_196_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln265_reg_322 == 1'd0))) begin
        icmp_ln26715_reg_103 <= icmp_ln267_reg_317;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln265_1_fu_201_p2 == 1'd0))) begin
        indvar_flatten12_reg_124 <= 59'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln265_reg_322 == 1'd0))) begin
        indvar_flatten12_reg_124 <= add_ln265_reg_312;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln265_1_fu_201_p2 == 1'd0))) begin
        j13_reg_146 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln265_reg_322_pp0_iter2_reg == 1'd0))) begin
        j13_reg_146 <= j_2_reg_326;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln265_1_fu_201_p2 == 1'd0))) begin
        j_116_reg_135 <= 32'd1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln265_reg_322_pp0_iter2_reg == 1'd0))) begin
        j_116_reg_135 <= j_reg_336;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln265_reg_312 <= add_ln265_fu_225_p2;
        i_reg_307 <= i_fu_219_p2;
        icmp_ln267_reg_317 <= icmp_ln267_fu_231_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_288 <= bound_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_276 <= empty_fu_164_p1;
        rows_read_reg_271 <= rows_dout;
        trunc_ln_reg_281 <= {{cols_fu_168_p2[31:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln265_reg_322 <= icmp_ln265_fu_236_p2;
        icmp_ln265_reg_322_pp0_iter1_reg <= icmp_ln265_reg_322;
        icmp_ln26715_reg_103_pp0_iter1_reg <= icmp_ln26715_reg_103;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln265_reg_322_pp0_iter2_reg <= icmp_ln265_reg_322_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        j_2_reg_326 <= j_2_fu_241_p3;
        j_reg_336 <= j_fu_253_p2;
    end
end

always @ (*) begin
    if (((rows_empty_n == 1'b0) | (cols_log_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln265_fu_236_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln265_reg_322 == 1'd0))) begin
        ap_phi_mux_i14_phi_fu_117_p4 = i_reg_307;
    end else begin
        ap_phi_mux_i14_phi_fu_117_p4 = i14_reg_113;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln265_reg_322 == 1'd0))) begin
        ap_phi_mux_icmp_ln26715_phi_fu_106_p4 = icmp_ln267_reg_317;
    end else begin
        ap_phi_mux_icmp_ln26715_phi_fu_106_p4 = icmp_ln26715_reg_103;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln265_reg_322 == 1'd0))) begin
        ap_phi_mux_indvar_flatten12_phi_fu_128_p4 = add_ln265_reg_312;
    end else begin
        ap_phi_mux_indvar_flatten12_phi_fu_128_p4 = indvar_flatten12_reg_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln265_reg_322_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_j13_phi_fu_150_p4 = j_2_reg_326;
    end else begin
        ap_phi_mux_j13_phi_fu_150_p4 = j13_reg_146;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln265_reg_322_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_j_116_phi_fu_139_p4 = j_reg_336;
    end else begin
        ap_phi_mux_j_116_phi_fu_139_p4 = j_116_reg_135;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_log_blk_n = cols_log_empty_n;
    end else begin
        cols_log_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rows_empty_n == 1'b0) | (cols_log_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_log_read = 1'b1;
    end else begin
        cols_log_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_263_ce = 1'b1;
    end else begin
        grp_fu_263_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        norm9_blk_n = norm9_empty_n;
    end else begin
        norm9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        norm9_read = 1'b1;
    end else begin
        norm9_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ram_V_address0 = zext_ln271_fu_259_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ram_V_address0 = grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ram_V_address0;
    end else begin
        ram_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ram_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ram_V_ce0 = grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ram_V_ce0;
    end else begin
        ram_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ram_V_we0 = 1'b1;
    end else begin
        ram_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rows_empty_n == 1'b0) | (cols_log_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        store_temp10_write = grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_store_temp10_write;
    end else begin
        store_temp10_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((rows_empty_n == 1'b0) | (cols_log_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln265_1_fu_201_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln265_fu_225_p2 = (ap_phi_mux_indvar_flatten12_phi_fu_128_p4 + 59'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (norm9_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & (norm9_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((rows_empty_n == 1'b0) | (cols_log_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter3 = (norm9_empty_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bound_fu_190_p0 = bound_fu_190_p00;

assign bound_fu_190_p00 = rows_read_reg_271;

assign bound_fu_190_p1 = bound_fu_190_p10;

assign bound_fu_190_p10 = trunc_ln_reg_281;

assign cols_fu_168_p2 = 32'd1 << cols_log_dout;

assign empty_fu_164_p1 = rows_dout[8:0];

assign grp_fu_263_p0 = select_ln265_fu_207_p3[8:0];

assign grp_fu_263_p2 = j_2_fu_241_p3[8:0];

assign grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_start = grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_ap_start_reg;

assign i_fu_219_p2 = (select_ln265_fu_207_p3 + 27'd1);

assign icmp_ln265_1_fu_201_p2 = ((bound_fu_190_p2 == 59'd0) ? 1'b1 : 1'b0);

assign icmp_ln265_fu_236_p2 = ((add_ln265_fu_225_p2 == bound_reg_288) ? 1'b1 : 1'b0);

assign icmp_ln267_1_fu_196_p2 = ((trunc_ln_reg_281 == 27'd0) ? 1'b1 : 1'b0);

assign icmp_ln267_fu_231_p2 = ((i_fu_219_p2 == trunc_ln_reg_281) ? 1'b1 : 1'b0);

assign j_2_fu_241_p3 = ((icmp_ln26715_reg_103_pp0_iter1_reg[0:0] == 1'b1) ? ap_phi_mux_j_116_phi_fu_139_p4 : ap_phi_mux_j13_phi_fu_150_p4);

assign j_fu_253_p2 = (j_2_fu_241_p3 + 32'd1);

assign select_ln265_fu_207_p3 = ((ap_phi_mux_icmp_ln26715_phi_fu_106_p4[0:0] == 1'b1) ? 27'd0 : ap_phi_mux_i14_phi_fu_117_p4);

assign store_temp10_din = grp_p_anonymous_namespace_Store_temp_ap_int_ap_uint_5u_Pipeline_VITIS_LOOP_275_3_fu_157_store_temp10_din;

assign zext_ln271_fu_259_p0 = grp_fu_263_p3;

assign zext_ln271_fu_259_p1 = $unsigned(zext_ln271_fu_259_p0);

endmodule //layernorm_p_anonymous_namespace_Store_temp_ap_int_8_ap_uint_256_5u_s
