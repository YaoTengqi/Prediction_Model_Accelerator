-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reshape_reshape_stream_ap_int_ap_int_8_32u_Pipeline_VITIS_LOOP_51_3_VITIS_LOOP_52_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_out2_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    data_out2_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    data_out2_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    data_out2_full_n : IN STD_LOGIC;
    data_out2_write : OUT STD_LOGIC;
    mul_ln51 : IN STD_LOGIC_VECTOR (63 downto 0);
    ROWS_load : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buffer_V_ce0 : OUT STD_LOGIC;
    buffer_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of reshape_reshape_stream_ap_int_ap_int_8_32u_Pipeline_VITIS_LOOP_51_3_VITIS_LOOP_52_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal icmp_ln55_reg_997 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_997_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln51_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal data_out2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln53_2_fu_381_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln53_2_reg_993 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln55_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln53_fu_376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_addr_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_addr_3_fu_385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal j_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln52_fu_407_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_1_fu_346_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_120 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_1_fu_315_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_out_m_Val_V_fu_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_1_fu_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_2_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_3_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_4_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_5_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_6_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_7_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_8_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_9_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_10_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_11_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_12_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_13_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_14_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_15_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_16_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_17_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_18_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_19_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_20_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_21_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_22_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_23_fu_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_24_fu_220 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_25_fu_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_26_fu_228 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_27_fu_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_28_fu_236 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_29_fu_240 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_30_fu_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_m_Val_V_31_fu_248 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln52_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln51_fu_327_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln53_fu_354_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln51_fu_338_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_358_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln53_1_fu_366_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln53_fu_370_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component reshape_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component reshape_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    i_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_116 <= ap_const_lv32_0;
                elsif (((icmp_ln51_fu_310_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_fu_116 <= select_ln51_1_fu_346_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_120 <= ap_const_lv64_0;
                elsif (((icmp_ln51_fu_310_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_120 <= add_ln51_1_fu_315_p2;
                end if;
            end if; 
        end if;
    end process;

    j_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_112 <= ap_const_lv32_0;
                elsif (((icmp_ln51_fu_310_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    j_fu_112 <= add_ln52_fu_407_p2;
                end if;
            end if; 
        end if;
    end process;

    out_addr_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln51_fu_310_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln55_fu_391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                out_addr_fu_108 <= ap_const_lv32_0;
            elsif (((icmp_ln51_fu_310_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln55_fu_391_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_addr_fu_108 <= out_addr_3_fu_385_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_A))) then
                data_out_m_Val_V_10_fu_164 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_B))) then
                data_out_m_Val_V_11_fu_168 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_C))) then
                data_out_m_Val_V_12_fu_172 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_D))) then
                data_out_m_Val_V_13_fu_176 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_E))) then
                data_out_m_Val_V_14_fu_180 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_F))) then
                data_out_m_Val_V_15_fu_184 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_10))) then
                data_out_m_Val_V_16_fu_188 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_11))) then
                data_out_m_Val_V_17_fu_192 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_12))) then
                data_out_m_Val_V_18_fu_196 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_13))) then
                data_out_m_Val_V_19_fu_200 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_1))) then
                data_out_m_Val_V_1_fu_128 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_14))) then
                data_out_m_Val_V_20_fu_204 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_15))) then
                data_out_m_Val_V_21_fu_208 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_16))) then
                data_out_m_Val_V_22_fu_212 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_17))) then
                data_out_m_Val_V_23_fu_216 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_18))) then
                data_out_m_Val_V_24_fu_220 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_19))) then
                data_out_m_Val_V_25_fu_224 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_1A))) then
                data_out_m_Val_V_26_fu_228 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_1B))) then
                data_out_m_Val_V_27_fu_232 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_1C))) then
                data_out_m_Val_V_28_fu_236 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_1D))) then
                data_out_m_Val_V_29_fu_240 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_2))) then
                data_out_m_Val_V_2_fu_132 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_1E))) then
                data_out_m_Val_V_30_fu_244 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_1F))) then
                data_out_m_Val_V_31_fu_248 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_3))) then
                data_out_m_Val_V_3_fu_136 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_4))) then
                data_out_m_Val_V_4_fu_140 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_5))) then
                data_out_m_Val_V_5_fu_144 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_6))) then
                data_out_m_Val_V_6_fu_148 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_7))) then
                data_out_m_Val_V_7_fu_152 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_8))) then
                data_out_m_Val_V_8_fu_156 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_9))) then
                data_out_m_Val_V_9_fu_160 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln53_2_reg_993 = ap_const_lv5_0))) then
                data_out_m_Val_V_fu_124 <= buffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln51_fu_310_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln55_reg_997 <= icmp_ln55_fu_391_p2;
                trunc_ln53_2_reg_993 <= trunc_ln53_2_fu_381_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln55_reg_997_pp0_iter2_reg <= icmp_ln55_reg_997;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln51_1_fu_315_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_120) + unsigned(ap_const_lv64_1));
    add_ln51_fu_327_p2 <= std_logic_vector(unsigned(i_fu_116) + unsigned(ap_const_lv32_1));
    add_ln52_fu_407_p2 <= std_logic_vector(unsigned(select_ln51_fu_338_p3) + unsigned(ap_const_lv32_1));
    add_ln53_fu_370_p2 <= std_logic_vector(unsigned(tmp_s_fu_358_p3) + unsigned(trunc_ln53_1_fu_366_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter3, data_out2_full_n, icmp_ln55_reg_997_pp0_iter2_reg)
    begin
                ap_block_pp0_stage0_01001 <= ((icmp_ln55_reg_997_pp0_iter2_reg = ap_const_lv1_1) and (data_out2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter3, data_out2_full_n, icmp_ln55_reg_997_pp0_iter2_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln55_reg_997_pp0_iter2_reg = ap_const_lv1_1) and (data_out2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, data_out2_full_n, icmp_ln55_reg_997_pp0_iter2_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln55_reg_997_pp0_iter2_reg = ap_const_lv1_1) and (data_out2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(data_out2_full_n, icmp_ln55_reg_997_pp0_iter2_reg)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((icmp_ln55_reg_997_pp0_iter2_reg = ap_const_lv1_1) and (data_out2_full_n = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln51_fu_310_p2)
    begin
        if (((icmp_ln51_fu_310_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    buffer_V_address0 <= zext_ln53_fu_376_p1(10 - 1 downto 0);

    buffer_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buffer_V_ce0 <= ap_const_logic_1;
        else 
            buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_out2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, data_out2_full_n, icmp_ln55_reg_997_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln55_reg_997_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_out2_blk_n <= data_out2_full_n;
        else 
            data_out2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_out2_din <= (((((((((((((((((((((((((((((((data_out_m_Val_V_31_fu_248 & data_out_m_Val_V_30_fu_244) & data_out_m_Val_V_29_fu_240) & data_out_m_Val_V_28_fu_236) & data_out_m_Val_V_27_fu_232) & data_out_m_Val_V_26_fu_228) & data_out_m_Val_V_25_fu_224) & data_out_m_Val_V_24_fu_220) & data_out_m_Val_V_23_fu_216) & data_out_m_Val_V_22_fu_212) & data_out_m_Val_V_21_fu_208) & data_out_m_Val_V_20_fu_204) & data_out_m_Val_V_19_fu_200) & data_out_m_Val_V_18_fu_196) & data_out_m_Val_V_17_fu_192) & data_out_m_Val_V_16_fu_188) & data_out_m_Val_V_15_fu_184) & data_out_m_Val_V_14_fu_180) & data_out_m_Val_V_13_fu_176) & data_out_m_Val_V_12_fu_172) & data_out_m_Val_V_11_fu_168) & data_out_m_Val_V_10_fu_164) & data_out_m_Val_V_9_fu_160) & data_out_m_Val_V_8_fu_156) & data_out_m_Val_V_7_fu_152) & data_out_m_Val_V_6_fu_148) & data_out_m_Val_V_5_fu_144) & data_out_m_Val_V_4_fu_140) & data_out_m_Val_V_3_fu_136) & data_out_m_Val_V_2_fu_132) & data_out_m_Val_V_1_fu_128) & data_out_m_Val_V_fu_124);

    data_out2_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln55_reg_997_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln55_reg_997_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            data_out2_write <= ap_const_logic_1;
        else 
            data_out2_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln51_fu_310_p2 <= "1" when (indvar_flatten_fu_120 = mul_ln51) else "0";
    icmp_ln52_fu_333_p2 <= "1" when (j_fu_112 = ROWS_load) else "0";
    icmp_ln55_fu_391_p2 <= "1" when (out_addr_3_fu_385_p2 = ap_const_lv32_20) else "0";
    out_addr_3_fu_385_p2 <= std_logic_vector(unsigned(out_addr_fu_108) + unsigned(ap_const_lv32_1));
    select_ln51_1_fu_346_p3 <= 
        add_ln51_fu_327_p2 when (icmp_ln52_fu_333_p2(0) = '1') else 
        i_fu_116;
    select_ln51_fu_338_p3 <= 
        ap_const_lv32_0 when (icmp_ln52_fu_333_p2(0) = '1') else 
        j_fu_112;
    tmp_s_fu_358_p3 <= (trunc_ln53_fu_354_p1 & ap_const_lv5_0);
    trunc_ln53_1_fu_366_p1 <= select_ln51_fu_338_p3(10 - 1 downto 0);
    trunc_ln53_2_fu_381_p1 <= out_addr_fu_108(5 - 1 downto 0);
    trunc_ln53_fu_354_p1 <= select_ln51_1_fu_346_p3(5 - 1 downto 0);
    zext_ln53_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln53_fu_370_p2),64));
end behav;
