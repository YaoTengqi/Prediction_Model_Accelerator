// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reshape_reshape_stream_ap_int_ap_int_8_32u_Pipeline_VITIS_LOOP_51_3_VITIS_LOOP_52_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_out2_din,
        data_out2_num_data_valid,
        data_out2_fifo_cap,
        data_out2_full_n,
        data_out2_write,
        mul_ln51,
        ROWS_load,
        buffer_V_address0,
        buffer_V_ce0,
        buffer_V_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [255:0] data_out2_din;
input  [4:0] data_out2_num_data_valid;
input  [4:0] data_out2_fifo_cap;
input   data_out2_full_n;
output   data_out2_write;
input  [63:0] mul_ln51;
input  [31:0] ROWS_load;
output  [9:0] buffer_V_address0;
output   buffer_V_ce0;
input  [7:0] buffer_V_q0;

reg ap_idle;
reg data_out2_write;
reg buffer_V_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln55_reg_997;
reg   [0:0] icmp_ln55_reg_997_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln51_fu_310_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    data_out2_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] trunc_ln53_2_fu_381_p1;
reg   [4:0] trunc_ln53_2_reg_993;
wire   [0:0] icmp_ln55_fu_391_p2;
wire   [63:0] zext_ln53_fu_376_p1;
reg   [31:0] out_addr_fu_108;
wire   [31:0] out_addr_3_fu_385_p2;
wire    ap_loop_init;
reg   [31:0] j_fu_112;
wire   [31:0] add_ln52_fu_407_p2;
reg   [31:0] i_fu_116;
wire   [31:0] select_ln51_1_fu_346_p3;
reg   [63:0] indvar_flatten_fu_120;
wire   [63:0] add_ln51_1_fu_315_p2;
reg   [7:0] data_out_m_Val_V_fu_124;
reg   [7:0] data_out_m_Val_V_1_fu_128;
reg   [7:0] data_out_m_Val_V_2_fu_132;
reg   [7:0] data_out_m_Val_V_3_fu_136;
reg   [7:0] data_out_m_Val_V_4_fu_140;
reg   [7:0] data_out_m_Val_V_5_fu_144;
reg   [7:0] data_out_m_Val_V_6_fu_148;
reg   [7:0] data_out_m_Val_V_7_fu_152;
reg   [7:0] data_out_m_Val_V_8_fu_156;
reg   [7:0] data_out_m_Val_V_9_fu_160;
reg   [7:0] data_out_m_Val_V_10_fu_164;
reg   [7:0] data_out_m_Val_V_11_fu_168;
reg   [7:0] data_out_m_Val_V_12_fu_172;
reg   [7:0] data_out_m_Val_V_13_fu_176;
reg   [7:0] data_out_m_Val_V_14_fu_180;
reg   [7:0] data_out_m_Val_V_15_fu_184;
reg   [7:0] data_out_m_Val_V_16_fu_188;
reg   [7:0] data_out_m_Val_V_17_fu_192;
reg   [7:0] data_out_m_Val_V_18_fu_196;
reg   [7:0] data_out_m_Val_V_19_fu_200;
reg   [7:0] data_out_m_Val_V_20_fu_204;
reg   [7:0] data_out_m_Val_V_21_fu_208;
reg   [7:0] data_out_m_Val_V_22_fu_212;
reg   [7:0] data_out_m_Val_V_23_fu_216;
reg   [7:0] data_out_m_Val_V_24_fu_220;
reg   [7:0] data_out_m_Val_V_25_fu_224;
reg   [7:0] data_out_m_Val_V_26_fu_228;
reg   [7:0] data_out_m_Val_V_27_fu_232;
reg   [7:0] data_out_m_Val_V_28_fu_236;
reg   [7:0] data_out_m_Val_V_29_fu_240;
reg   [7:0] data_out_m_Val_V_30_fu_244;
reg   [7:0] data_out_m_Val_V_31_fu_248;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln52_fu_333_p2;
wire   [31:0] add_ln51_fu_327_p2;
wire   [4:0] trunc_ln53_fu_354_p1;
wire   [31:0] select_ln51_fu_338_p3;
wire   [9:0] tmp_s_fu_358_p3;
wire   [9:0] trunc_ln53_1_fu_366_p1;
wire   [9:0] add_ln53_fu_370_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

reshape_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_116 <= 32'd0;
        end else if (((icmp_ln51_fu_310_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_116 <= select_ln51_1_fu_346_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_120 <= 64'd0;
        end else if (((icmp_ln51_fu_310_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_120 <= add_ln51_1_fu_315_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_112 <= 32'd0;
        end else if (((icmp_ln51_fu_310_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_112 <= add_ln52_fu_407_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln51_fu_310_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln55_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_addr_fu_108 <= 32'd0;
    end else if (((icmp_ln51_fu_310_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln55_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_addr_fu_108 <= out_addr_3_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd10))) begin
        data_out_m_Val_V_10_fu_164 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd11))) begin
        data_out_m_Val_V_11_fu_168 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd12))) begin
        data_out_m_Val_V_12_fu_172 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd13))) begin
        data_out_m_Val_V_13_fu_176 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd14))) begin
        data_out_m_Val_V_14_fu_180 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd15))) begin
        data_out_m_Val_V_15_fu_184 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd16))) begin
        data_out_m_Val_V_16_fu_188 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd17))) begin
        data_out_m_Val_V_17_fu_192 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd18))) begin
        data_out_m_Val_V_18_fu_196 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd19))) begin
        data_out_m_Val_V_19_fu_200 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd1))) begin
        data_out_m_Val_V_1_fu_128 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd20))) begin
        data_out_m_Val_V_20_fu_204 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd21))) begin
        data_out_m_Val_V_21_fu_208 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd22))) begin
        data_out_m_Val_V_22_fu_212 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd23))) begin
        data_out_m_Val_V_23_fu_216 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd24))) begin
        data_out_m_Val_V_24_fu_220 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd25))) begin
        data_out_m_Val_V_25_fu_224 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd26))) begin
        data_out_m_Val_V_26_fu_228 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd27))) begin
        data_out_m_Val_V_27_fu_232 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd28))) begin
        data_out_m_Val_V_28_fu_236 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd29))) begin
        data_out_m_Val_V_29_fu_240 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd2))) begin
        data_out_m_Val_V_2_fu_132 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd30))) begin
        data_out_m_Val_V_30_fu_244 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd31))) begin
        data_out_m_Val_V_31_fu_248 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd3))) begin
        data_out_m_Val_V_3_fu_136 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd4))) begin
        data_out_m_Val_V_4_fu_140 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd5))) begin
        data_out_m_Val_V_5_fu_144 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd6))) begin
        data_out_m_Val_V_6_fu_148 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd7))) begin
        data_out_m_Val_V_7_fu_152 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd8))) begin
        data_out_m_Val_V_8_fu_156 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd9))) begin
        data_out_m_Val_V_9_fu_160 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln53_2_reg_993 == 5'd0))) begin
        data_out_m_Val_V_fu_124 <= buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_310_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln55_reg_997 <= icmp_ln55_fu_391_p2;
        trunc_ln53_2_reg_993 <= trunc_ln53_2_fu_381_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln55_reg_997_pp0_iter2_reg <= icmp_ln55_reg_997;
    end
end

always @ (*) begin
    if (((icmp_ln51_fu_310_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer_V_ce0 = 1'b1;
    end else begin
        buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln55_reg_997_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_out2_blk_n = data_out2_full_n;
    end else begin
        data_out2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_reg_997_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        data_out2_write = 1'b1;
    end else begin
        data_out2_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln51_1_fu_315_p2 = (indvar_flatten_fu_120 + 64'd1);

assign add_ln51_fu_327_p2 = (i_fu_116 + 32'd1);

assign add_ln52_fu_407_p2 = (select_ln51_fu_338_p3 + 32'd1);

assign add_ln53_fu_370_p2 = (tmp_s_fu_358_p3 + trunc_ln53_1_fu_366_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln55_reg_997_pp0_iter2_reg == 1'd1) & (data_out2_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln55_reg_997_pp0_iter2_reg == 1'd1) & (data_out2_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln55_reg_997_pp0_iter2_reg == 1'd1) & (data_out2_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln55_reg_997_pp0_iter2_reg == 1'd1) & (data_out2_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign buffer_V_address0 = zext_ln53_fu_376_p1;

assign data_out2_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{data_out_m_Val_V_31_fu_248}, {data_out_m_Val_V_30_fu_244}}, {data_out_m_Val_V_29_fu_240}}, {data_out_m_Val_V_28_fu_236}}, {data_out_m_Val_V_27_fu_232}}, {data_out_m_Val_V_26_fu_228}}, {data_out_m_Val_V_25_fu_224}}, {data_out_m_Val_V_24_fu_220}}, {data_out_m_Val_V_23_fu_216}}, {data_out_m_Val_V_22_fu_212}}, {data_out_m_Val_V_21_fu_208}}, {data_out_m_Val_V_20_fu_204}}, {data_out_m_Val_V_19_fu_200}}, {data_out_m_Val_V_18_fu_196}}, {data_out_m_Val_V_17_fu_192}}, {data_out_m_Val_V_16_fu_188}}, {data_out_m_Val_V_15_fu_184}}, {data_out_m_Val_V_14_fu_180}}, {data_out_m_Val_V_13_fu_176}}, {data_out_m_Val_V_12_fu_172}}, {data_out_m_Val_V_11_fu_168}}, {data_out_m_Val_V_10_fu_164}}, {data_out_m_Val_V_9_fu_160}}, {data_out_m_Val_V_8_fu_156}}, {data_out_m_Val_V_7_fu_152}}, {data_out_m_Val_V_6_fu_148}}, {data_out_m_Val_V_5_fu_144}}, {data_out_m_Val_V_4_fu_140}}, {data_out_m_Val_V_3_fu_136}}, {data_out_m_Val_V_2_fu_132}}, {data_out_m_Val_V_1_fu_128}}, {data_out_m_Val_V_fu_124}};

assign icmp_ln51_fu_310_p2 = ((indvar_flatten_fu_120 == mul_ln51) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_333_p2 = ((j_fu_112 == ROWS_load) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_391_p2 = ((out_addr_3_fu_385_p2 == 32'd32) ? 1'b1 : 1'b0);

assign out_addr_3_fu_385_p2 = (out_addr_fu_108 + 32'd1);

assign select_ln51_1_fu_346_p3 = ((icmp_ln52_fu_333_p2[0:0] == 1'b1) ? add_ln51_fu_327_p2 : i_fu_116);

assign select_ln51_fu_338_p3 = ((icmp_ln52_fu_333_p2[0:0] == 1'b1) ? 32'd0 : j_fu_112);

assign tmp_s_fu_358_p3 = {{trunc_ln53_fu_354_p1}, {5'd0}};

assign trunc_ln53_1_fu_366_p1 = select_ln51_fu_338_p3[9:0];

assign trunc_ln53_2_fu_381_p1 = out_addr_fu_108[4:0];

assign trunc_ln53_fu_354_p1 = select_ln51_1_fu_346_p3[4:0];

assign zext_ln53_fu_376_p1 = add_ln53_fu_370_p2;

endmodule //reshape_reshape_stream_ap_int_ap_int_8_32u_Pipeline_VITIS_LOOP_51_3_VITIS_LOOP_52_4
