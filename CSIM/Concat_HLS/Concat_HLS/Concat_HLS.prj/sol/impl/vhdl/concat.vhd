-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity concat is
generic (
    C_S_AXI_CONCAT_ADDR_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONCAT_ADDR_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_CONCAT_DATA_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_CONCAT_DATA_ID_WIDTH : INTEGER := 1;
    C_M_AXI_CONCAT_DATA_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CONCAT_DATA_DATA_WIDTH : INTEGER := 256;
    C_M_AXI_CONCAT_DATA_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CONCAT_DATA_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CONCAT_DATA_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CONCAT_DATA_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CONCAT_DATA_USER_VALUE : INTEGER := 0;
    C_M_AXI_CONCAT_DATA_PROT_VALUE : INTEGER := 0;
    C_M_AXI_CONCAT_DATA_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_concat_addr_AWVALID : IN STD_LOGIC;
    s_axi_concat_addr_AWREADY : OUT STD_LOGIC;
    s_axi_concat_addr_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONCAT_ADDR_ADDR_WIDTH-1 downto 0);
    s_axi_concat_addr_WVALID : IN STD_LOGIC;
    s_axi_concat_addr_WREADY : OUT STD_LOGIC;
    s_axi_concat_addr_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONCAT_ADDR_DATA_WIDTH-1 downto 0);
    s_axi_concat_addr_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONCAT_ADDR_DATA_WIDTH/8-1 downto 0);
    s_axi_concat_addr_ARVALID : IN STD_LOGIC;
    s_axi_concat_addr_ARREADY : OUT STD_LOGIC;
    s_axi_concat_addr_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONCAT_ADDR_ADDR_WIDTH-1 downto 0);
    s_axi_concat_addr_RVALID : OUT STD_LOGIC;
    s_axi_concat_addr_RREADY : IN STD_LOGIC;
    s_axi_concat_addr_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONCAT_ADDR_DATA_WIDTH-1 downto 0);
    s_axi_concat_addr_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_concat_addr_BVALID : OUT STD_LOGIC;
    s_axi_concat_addr_BREADY : IN STD_LOGIC;
    s_axi_concat_addr_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_concat_data_AWVALID : OUT STD_LOGIC;
    m_axi_concat_data_AWREADY : IN STD_LOGIC;
    m_axi_concat_data_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_concat_data_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_ID_WIDTH-1 downto 0);
    m_axi_concat_data_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_concat_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_concat_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_concat_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_concat_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_concat_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_concat_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_concat_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_concat_data_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_AWUSER_WIDTH-1 downto 0);
    m_axi_concat_data_WVALID : OUT STD_LOGIC;
    m_axi_concat_data_WREADY : IN STD_LOGIC;
    m_axi_concat_data_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_DATA_WIDTH-1 downto 0);
    m_axi_concat_data_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_DATA_WIDTH/8-1 downto 0);
    m_axi_concat_data_WLAST : OUT STD_LOGIC;
    m_axi_concat_data_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_ID_WIDTH-1 downto 0);
    m_axi_concat_data_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_WUSER_WIDTH-1 downto 0);
    m_axi_concat_data_ARVALID : OUT STD_LOGIC;
    m_axi_concat_data_ARREADY : IN STD_LOGIC;
    m_axi_concat_data_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_concat_data_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_ID_WIDTH-1 downto 0);
    m_axi_concat_data_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_concat_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_concat_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_concat_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_concat_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_concat_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_concat_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_concat_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_concat_data_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_ARUSER_WIDTH-1 downto 0);
    m_axi_concat_data_RVALID : IN STD_LOGIC;
    m_axi_concat_data_RREADY : OUT STD_LOGIC;
    m_axi_concat_data_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_DATA_WIDTH-1 downto 0);
    m_axi_concat_data_RLAST : IN STD_LOGIC;
    m_axi_concat_data_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_ID_WIDTH-1 downto 0);
    m_axi_concat_data_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_RUSER_WIDTH-1 downto 0);
    m_axi_concat_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_concat_data_BVALID : IN STD_LOGIC;
    m_axi_concat_data_BREADY : OUT STD_LOGIC;
    m_axi_concat_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_concat_data_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_ID_WIDTH-1 downto 0);
    m_axi_concat_data_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CONCAT_DATA_BUSER_WIDTH-1 downto 0) );
end;


architecture behav of concat is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "concat_concat,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4739,HLS_SYN_LUT=9551,HLS_VERSION=2022_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal ap_rst_n_inv : STD_LOGIC;
    signal input_data_addr1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_data_addr2 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_data_addr3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ROWS : STD_LOGIC_VECTOR (31 downto 0);
    signal COLS : STD_LOGIC_VECTOR (31 downto 0);
    signal inputs : STD_LOGIC_VECTOR (63 downto 0);
    signal outputs : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal concat_data_AWREADY : STD_LOGIC;
    signal concat_data_WREADY : STD_LOGIC;
    signal concat_data_ARREADY : STD_LOGIC;
    signal concat_data_RVALID : STD_LOGIC;
    signal concat_data_RDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal concat_data_RLAST : STD_LOGIC;
    signal concat_data_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal concat_data_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal concat_data_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal concat_data_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal concat_data_BVALID : STD_LOGIC;
    signal concat_data_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal concat_data_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal concat_data_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_start : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_done : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_continue : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_idle : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_ready : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWVALID : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WVALID : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WSTRB : STD_LOGIC_VECTOR (31 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WLAST : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARVALID : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_RREADY : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_BREADY : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_concat_flag : STD_LOGIC;
    signal read_inputs_ap_uint_256_ap_int_8_32u_U0_concat_flag_ap_vld : STD_LOGIC;

    component concat_read_inputs_ap_uint_256_ap_int_8_32u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_concat_data_AWVALID : OUT STD_LOGIC;
        m_axi_concat_data_AWREADY : IN STD_LOGIC;
        m_axi_concat_data_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_concat_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_concat_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_concat_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_concat_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_concat_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_concat_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_concat_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_concat_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_concat_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_concat_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_concat_data_WVALID : OUT STD_LOGIC;
        m_axi_concat_data_WREADY : IN STD_LOGIC;
        m_axi_concat_data_WDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        m_axi_concat_data_WSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_concat_data_WLAST : OUT STD_LOGIC;
        m_axi_concat_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_concat_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_concat_data_ARVALID : OUT STD_LOGIC;
        m_axi_concat_data_ARREADY : IN STD_LOGIC;
        m_axi_concat_data_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_concat_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_concat_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_concat_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_concat_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_concat_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_concat_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_concat_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_concat_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_concat_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_concat_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_concat_data_RVALID : IN STD_LOGIC;
        m_axi_concat_data_RREADY : OUT STD_LOGIC;
        m_axi_concat_data_RDATA : IN STD_LOGIC_VECTOR (255 downto 0);
        m_axi_concat_data_RLAST : IN STD_LOGIC;
        m_axi_concat_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_concat_data_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_concat_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_concat_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_concat_data_BVALID : IN STD_LOGIC;
        m_axi_concat_data_BREADY : OUT STD_LOGIC;
        m_axi_concat_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_concat_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_concat_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        inputs : IN STD_LOGIC_VECTOR (63 downto 0);
        input_data_addr1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_data_addr2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_data_addr3 : IN STD_LOGIC_VECTOR (31 downto 0);
        ROWS : IN STD_LOGIC_VECTOR (31 downto 0);
        COLS : IN STD_LOGIC_VECTOR (31 downto 0);
        outputs : IN STD_LOGIC_VECTOR (63 downto 0);
        concat_flag : OUT STD_LOGIC;
        concat_flag_ap_vld : OUT STD_LOGIC );
    end component;


    component concat_concat_addr_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_data_addr1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_data_addr2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_data_addr3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ROWS : OUT STD_LOGIC_VECTOR (31 downto 0);
        COLS : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputs : OUT STD_LOGIC_VECTOR (63 downto 0);
        outputs : OUT STD_LOGIC_VECTOR (63 downto 0);
        concat_flag : IN STD_LOGIC;
        concat_flag_ap_vld : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component concat_concat_data_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (255 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (31 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    concat_addr_s_axi_U : component concat_concat_addr_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONCAT_ADDR_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONCAT_ADDR_DATA_WIDTH)
    port map (
        AWVALID => s_axi_concat_addr_AWVALID,
        AWREADY => s_axi_concat_addr_AWREADY,
        AWADDR => s_axi_concat_addr_AWADDR,
        WVALID => s_axi_concat_addr_WVALID,
        WREADY => s_axi_concat_addr_WREADY,
        WDATA => s_axi_concat_addr_WDATA,
        WSTRB => s_axi_concat_addr_WSTRB,
        ARVALID => s_axi_concat_addr_ARVALID,
        ARREADY => s_axi_concat_addr_ARREADY,
        ARADDR => s_axi_concat_addr_ARADDR,
        RVALID => s_axi_concat_addr_RVALID,
        RREADY => s_axi_concat_addr_RREADY,
        RDATA => s_axi_concat_addr_RDATA,
        RRESP => s_axi_concat_addr_RRESP,
        BVALID => s_axi_concat_addr_BVALID,
        BREADY => s_axi_concat_addr_BREADY,
        BRESP => s_axi_concat_addr_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_data_addr1 => input_data_addr1,
        input_data_addr2 => input_data_addr2,
        output_data_addr3 => output_data_addr3,
        ROWS => ROWS,
        COLS => COLS,
        inputs => inputs,
        outputs => outputs,
        concat_flag => read_inputs_ap_uint_256_ap_int_8_32u_U0_concat_flag,
        concat_flag_ap_vld => read_inputs_ap_uint_256_ap_int_8_32u_U0_concat_flag_ap_vld,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    concat_data_m_axi_U : component concat_concat_data_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 37,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_CONCAT_DATA_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_CONCAT_DATA_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_CONCAT_DATA_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_CONCAT_DATA_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_CONCAT_DATA_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_CONCAT_DATA_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_CONCAT_DATA_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_CONCAT_DATA_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_CONCAT_DATA_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_CONCAT_DATA_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_CONCAT_DATA_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 256,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_concat_data_AWVALID,
        AWREADY => m_axi_concat_data_AWREADY,
        AWADDR => m_axi_concat_data_AWADDR,
        AWID => m_axi_concat_data_AWID,
        AWLEN => m_axi_concat_data_AWLEN,
        AWSIZE => m_axi_concat_data_AWSIZE,
        AWBURST => m_axi_concat_data_AWBURST,
        AWLOCK => m_axi_concat_data_AWLOCK,
        AWCACHE => m_axi_concat_data_AWCACHE,
        AWPROT => m_axi_concat_data_AWPROT,
        AWQOS => m_axi_concat_data_AWQOS,
        AWREGION => m_axi_concat_data_AWREGION,
        AWUSER => m_axi_concat_data_AWUSER,
        WVALID => m_axi_concat_data_WVALID,
        WREADY => m_axi_concat_data_WREADY,
        WDATA => m_axi_concat_data_WDATA,
        WSTRB => m_axi_concat_data_WSTRB,
        WLAST => m_axi_concat_data_WLAST,
        WID => m_axi_concat_data_WID,
        WUSER => m_axi_concat_data_WUSER,
        ARVALID => m_axi_concat_data_ARVALID,
        ARREADY => m_axi_concat_data_ARREADY,
        ARADDR => m_axi_concat_data_ARADDR,
        ARID => m_axi_concat_data_ARID,
        ARLEN => m_axi_concat_data_ARLEN,
        ARSIZE => m_axi_concat_data_ARSIZE,
        ARBURST => m_axi_concat_data_ARBURST,
        ARLOCK => m_axi_concat_data_ARLOCK,
        ARCACHE => m_axi_concat_data_ARCACHE,
        ARPROT => m_axi_concat_data_ARPROT,
        ARQOS => m_axi_concat_data_ARQOS,
        ARREGION => m_axi_concat_data_ARREGION,
        ARUSER => m_axi_concat_data_ARUSER,
        RVALID => m_axi_concat_data_RVALID,
        RREADY => m_axi_concat_data_RREADY,
        RDATA => m_axi_concat_data_RDATA,
        RLAST => m_axi_concat_data_RLAST,
        RID => m_axi_concat_data_RID,
        RUSER => m_axi_concat_data_RUSER,
        RRESP => m_axi_concat_data_RRESP,
        BVALID => m_axi_concat_data_BVALID,
        BREADY => m_axi_concat_data_BREADY,
        BRESP => m_axi_concat_data_BRESP,
        BID => m_axi_concat_data_BID,
        BUSER => m_axi_concat_data_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARVALID,
        I_ARREADY => concat_data_ARREADY,
        I_ARADDR => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARADDR,
        I_ARLEN => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARLEN,
        I_RVALID => concat_data_RVALID,
        I_RREADY => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_RREADY,
        I_RDATA => concat_data_RDATA,
        I_RFIFONUM => concat_data_RFIFONUM,
        I_AWVALID => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWVALID,
        I_AWREADY => concat_data_AWREADY,
        I_AWADDR => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWADDR,
        I_AWLEN => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWLEN,
        I_WVALID => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WVALID,
        I_WREADY => concat_data_WREADY,
        I_WDATA => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WDATA,
        I_WSTRB => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WSTRB,
        I_BVALID => concat_data_BVALID,
        I_BREADY => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_BREADY);

    read_inputs_ap_uint_256_ap_int_8_32u_U0 : component concat_read_inputs_ap_uint_256_ap_int_8_32u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_start,
        ap_done => read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_done,
        ap_continue => read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_continue,
        ap_idle => read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_idle,
        ap_ready => read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_ready,
        m_axi_concat_data_AWVALID => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWVALID,
        m_axi_concat_data_AWREADY => concat_data_AWREADY,
        m_axi_concat_data_AWADDR => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWADDR,
        m_axi_concat_data_AWID => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWID,
        m_axi_concat_data_AWLEN => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWLEN,
        m_axi_concat_data_AWSIZE => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWSIZE,
        m_axi_concat_data_AWBURST => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWBURST,
        m_axi_concat_data_AWLOCK => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWLOCK,
        m_axi_concat_data_AWCACHE => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWCACHE,
        m_axi_concat_data_AWPROT => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWPROT,
        m_axi_concat_data_AWQOS => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWQOS,
        m_axi_concat_data_AWREGION => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWREGION,
        m_axi_concat_data_AWUSER => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_AWUSER,
        m_axi_concat_data_WVALID => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WVALID,
        m_axi_concat_data_WREADY => concat_data_WREADY,
        m_axi_concat_data_WDATA => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WDATA,
        m_axi_concat_data_WSTRB => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WSTRB,
        m_axi_concat_data_WLAST => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WLAST,
        m_axi_concat_data_WID => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WID,
        m_axi_concat_data_WUSER => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_WUSER,
        m_axi_concat_data_ARVALID => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARVALID,
        m_axi_concat_data_ARREADY => concat_data_ARREADY,
        m_axi_concat_data_ARADDR => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARADDR,
        m_axi_concat_data_ARID => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARID,
        m_axi_concat_data_ARLEN => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARLEN,
        m_axi_concat_data_ARSIZE => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARSIZE,
        m_axi_concat_data_ARBURST => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARBURST,
        m_axi_concat_data_ARLOCK => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARLOCK,
        m_axi_concat_data_ARCACHE => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARCACHE,
        m_axi_concat_data_ARPROT => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARPROT,
        m_axi_concat_data_ARQOS => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARQOS,
        m_axi_concat_data_ARREGION => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARREGION,
        m_axi_concat_data_ARUSER => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_ARUSER,
        m_axi_concat_data_RVALID => concat_data_RVALID,
        m_axi_concat_data_RREADY => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_RREADY,
        m_axi_concat_data_RDATA => concat_data_RDATA,
        m_axi_concat_data_RLAST => concat_data_RLAST,
        m_axi_concat_data_RID => concat_data_RID,
        m_axi_concat_data_RFIFONUM => concat_data_RFIFONUM,
        m_axi_concat_data_RUSER => concat_data_RUSER,
        m_axi_concat_data_RRESP => concat_data_RRESP,
        m_axi_concat_data_BVALID => concat_data_BVALID,
        m_axi_concat_data_BREADY => read_inputs_ap_uint_256_ap_int_8_32u_U0_m_axi_concat_data_BREADY,
        m_axi_concat_data_BRESP => concat_data_BRESP,
        m_axi_concat_data_BID => concat_data_BID,
        m_axi_concat_data_BUSER => concat_data_BUSER,
        inputs => inputs,
        input_data_addr1 => input_data_addr1,
        input_data_addr2 => input_data_addr2,
        input_data_addr3 => output_data_addr3,
        ROWS => ROWS,
        COLS => COLS,
        outputs => outputs,
        concat_flag => read_inputs_ap_uint_256_ap_int_8_32u_U0_concat_flag,
        concat_flag_ap_vld => read_inputs_ap_uint_256_ap_int_8_32u_U0_concat_flag_ap_vld);




    ap_done <= read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_done;
    ap_idle <= read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_idle;
    ap_ready <= read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    concat_data_BID <= ap_const_lv1_0;
    concat_data_BRESP <= ap_const_lv2_0;
    concat_data_BUSER <= ap_const_lv1_0;
    concat_data_RID <= ap_const_lv1_0;
    concat_data_RLAST <= ap_const_logic_0;
    concat_data_RRESP <= ap_const_lv2_0;
    concat_data_RUSER <= ap_const_lv1_0;
    read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_continue <= ap_const_logic_1;
    read_inputs_ap_uint_256_ap_int_8_32u_U0_ap_start <= ap_start;
end behav;
